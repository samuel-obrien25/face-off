{"version":3,"sources":["Components/Loading/LoadingCircle.js","Components/Header/Header.js","Components/Containers/CardContainer.tsx","Components/Logo/Logo.tsx","API/GetTeamStats.tsx","Components/Cards/TeamCard/TeamCard.tsx","Components/Cards/ScheduleCard/HomeTeam.tsx","Components/Cards/ScheduleCard/AwayTeam.tsx","Components/Cards/TeamCard/Team.tsx","Components/Cards/ScheduleCard/GameDateContainer.tsx","Components/Cards/ScheduleCard/ScheduleCard.tsx","Components/Cards/Card.tsx","API/ApiCall.tsx","Components/Containers/DivisionContainer.tsx","Components/Cards/TeamCard/TeamList.tsx","Components/Buttons/Fab.tsx","Components/Containers/MonthContainer.tsx","Pages/Home.tsx","App.tsx","registerServiceWorker.js","index.js"],"names":["spin","keyframes","StyledLoadingCircle","styled","div","LoadingCircle","StyledHeader","header","props","headerStyle","activeTeamID","Header","useState","isLoading","setIsLoading","children","headerH1","headerH2","useEffect","className","StyledCardContainer","StyledScheduleCardContainer","CardContainer","containerType","window","scrollTo","id","StyledLogoContainer","cardType","Logo","currentLogo","teamName","teamValue","src","alt","StyledH3","h3","teamStatsLocation","GetTeamStats","record","teamStats","setTeamStats","url","init","type","dataType","async","headers","btoa","username","fetch","then","resp","json","console","log","catch","error","fetchTeamStats","ApiLink","undefined","teamStatsTotals","stats","standings","wins","losses","overtimeLosses","StyledTeamCard","StyledCityName","h2","StyledTeamName","TeamCard","cityName","onClick","recordQuery","data-teamid","StyledHomeTeam","didHomeWin","StyledTeamNameWrapper","HomeTeam","homeTeamScore","logoValue","teamCity","StyledAwayTeam","AwayTeam","awayTeamScore","Team","awayTeamID","homeTeamID","isHomeTeam","toString","StyledGameDateContainer","StyledGameDate","p","GameDateContainer","gameDateTime","jsonDate","Date","weekday","Array","formattedGameDate","getDay","toLocaleDateString","toLocaleTimeString","StyledScheduleCard","isPast","StyledGameScore","ScheduleCard","isGamePast","setIsGamePast","pastOrFuture","currentGameDate","month","getMonth","data-month","data-pastfuture","Card","awayTeamCity","awayTeamName","handleClick","homeTeamCity","homeTeamName","ApiCall","schedule","setSchedule","Boolean","isLoaded","setIsLoaded","data","fetchSchedule","gameCard","games","map","game","key","awayTeam","score","awayScoreTotal","homeTeam","homeScoreTotal","startTime","gameID","activeTeamName","StyledDivisionContainer","section","StyledDivisionName","DivisionContainer","divisionTitle","TeamList","StyledFab","button","StyledHamburger","StyledFabH2","ActiveFabWrapper","ActiveFabOne","FabSlideUp","ActiveFabTwo","ActiveFabThree","Fab","isActive","setIsActive","lastGame","document","getElementById","lastElementChild","nextGame","querySelector","scrollIntoView","behavior","block","StyledMonthContainer","visible","MonthContainer","currentMonth","setCurrentMonth","isVisible","setIsVisible","setTimeout","scheduleList","Months","querySelectorAll","offsetLeft","setMonthState","addEventListener","scheduleListCheckPoint","scrollLeft","updateH2","StyledWrapper","main","Home","setActiveTeamID","setHeaderH1","setHeaderH2","setHeaderH3","isFabActive","setIsFabActive","isScheduleListActive","setIsScheduleListActive","isTeamListActive","setIsTeamListActive","scheduleQueryRecipe","setScheduleQueryRecipe","teamStatsQueryRecipe","setTeamStatsQueryRecipe","currentTeamRecord","e","targetTeam","target","closest","targetTeamValue","dataset","teamid","currentTeamName","firstChild","innerHTML","currentTeamCity","nextElementSibling","divisionContainer","classList","remove","add","StyledApp","App","path","baseUrl","component","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","URL","process","origin","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AW,SACXmD,EAAW,eAChB,MACC,KAAK,EACDnD,EAAW,SACXmD,EAAW,aAChB,MACC,KAAK,EACDnD,EAAW,YACXmD,EAAW,WAChB,MACC,KAAK,EACDnD,EAAW,UACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,WACXmD,EAAW,aAChB,MACC,KAAK,GACDnD,EAAW,SACXmD,EAAW,SAChB,MACC,KAAK,GACDnD,EAAW,cACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,WACXmD,EAAW,SAChB,MACC,KAAK,GACDnD,EAAW,YACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,SACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,YACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,QACXmD,EAAW,YAChB,MACC,KAAK,GACDnD,EAAW,YACXmD,EAAW,aAChB,MACC,KAAK,GACDnD,EAAW,eACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,aACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,UACXmD,EAAW,YAChB,MACC,KAAK,GACDnD,EAAW,YACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,SACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,SACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,OACXmD,EAAW,YAChB,MACC,KAAK,GACDnD,EAAW,SACXmD,EAAW,WAChB,MACC,KAAK,GACDnD,EAAW,QACXmD,EAAW,SAChB,MACC,KAAK,GACDnD,EAAW,QACXmD,EAAW,cAChB,MACC,KAAK,GACDnD,EAAW,QACXmD,EAAW,UAChB,MACC,KAAK,GACDnD,EAAW,UACXmD,EAAW,UAChB,MACC,KAAK,IACDnD,EAAW,iBACXmD,EAAW,YAChB,MACD,QACE5B,QAAQC,IAAI,yBAGhB,OAAGkC,EAGK,kBAAC,EAAD,CACI1D,SAAUA,EACVmD,SAAUA,EACVL,WAAYA,EACZG,cAAeA,EACfC,UAAWA,IAOf,kBAAC,EAAD,eACIlD,SAAUA,EACVmD,SAAUA,EACVL,WAAYA,EACZQ,cAA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","file":"static/js/main.fd40f3c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n//#region Styles\r\nconst spin = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to{\r\n        transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nconst StyledLoadingCircle = styled.div`\r\n    .loading-circle{\r\n        width: 2vw;\r\n        height: 2vw;\r\n        border-radius: 50%;\r\n        border: 1vw solid #999;\r\n        border-top-color: #444;\r\n        animation: 2s ${spin} infinite linear;\r\n        margin:auto;\r\n    }`\r\n//#endregion Styles\r\n\r\nconst LoadingCircle = () => {\r\n    return(\r\n        <StyledLoadingCircle/>\r\n    )\r\n}\r\n    \r\nexport default LoadingCircle;","import React, {useState, useEffect} from 'react';\r\nimport LoadingCircle from '../Loading/LoadingCircle';\r\nimport styled from 'styled-components';\r\nimport '../../Styles/league-colors.css';\r\n\r\n\r\n//#region Styles\r\nconst StyledHeader = styled.header`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    background-color: ${props => props.headerStyle === \"homeHeader\" ? \"#222\" : \"\"};\r\n    width: 100%;\r\n    height: 35px;\r\n    padding: 20px 0;\r\n    color: white;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    text-align:center;\r\n    transition: .25s ease-in-out;\r\n    z-index: 8000;\r\n\r\n    & h1, h2, h3{\r\n        margin: auto;\r\n        padding-left: 0px;\r\n    }\r\n\r\n    h1 {\r\n        margin-left: 25px;\r\n        margin-bottom: 0px;\r\n        font-size: ${props => props.activeTeamID ? '24px' : '42px'};\r\n    }\r\n\r\n    h2 {\r\n        font-size: ${props => props.activeTeamID ? '42px' : '24px'};\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\n//#endregion Styles\r\nconst Header = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const { activeTeamID, children, headerH1, headerH2, headerStyle } = props;\r\n\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    if(isLoading){\r\n        return (\r\n            <StyledHeader headerStyle={headerStyle} className={`team${activeTeamID}`}>\r\n                <LoadingCircle />\r\n            </StyledHeader>\r\n        )\r\n    } else {\r\n        return (\r\n            <StyledHeader headerStyle={headerStyle} className={`team${activeTeamID}`}>\r\n                <h1>{headerH1}</h1>\r\n                <h2>{headerH2}</h2>\r\n                    {children}\r\n            </StyledHeader>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;\r\n    ","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledCardContainer = styled.div`\r\n        position: relative;\r\n        width: 85%;\r\n        margin: 15px auto;\r\n        height: inherit;\r\n        display: inline-block;\r\n        text-align: center;\r\n        scroll-behavior: smooth;\r\n\r\n        @media (min-width: 600px) {\r\n        display: inline-block;\r\n        max-width: 1100px;\r\n        }\r\n`;\r\n\r\nconst StyledScheduleCardContainer = styled(StyledCardContainer)`\r\n        overflow: auto;\r\n        overflow-y: hidden;\r\n        white-space: nowrap;\r\n        display: flex;\r\n        position: relative;\r\n        height: auto;\r\n        padding: 20px 0px;\r\n        width: 95vw;\r\n        left: 0;\r\n        margin-top: 200px;\r\n        scroll-snap-type: x proximity;\r\n\r\n        @media (min-width: 600px) {\r\n            display: flex;\r\n            flex-direction: row;\r\n            max-width: 98vw;\r\n        }\r\n`;\r\n\r\ninterface CardContainerProps {\r\n    containerType: string\r\n}\r\n\r\nconst CardContainer: React.FC<CardContainerProps> = (props) => {\r\n\r\n    const { containerType } = props;\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n        if (containerType === \"division-container\") {\r\n            return (\r\n                <StyledCardContainer id={containerType}>\r\n                    {props.children}\r\n                </StyledCardContainer>\r\n            )\r\n        }\r\n\r\n        if (containerType === \"card_container_schedule_list\") {\r\n            return (\r\n                <StyledScheduleCardContainer id={containerType}>\r\n                    {props.children}\r\n                </StyledScheduleCardContainer>\r\n            )\r\n        } \r\n        \r\n        else return null\r\n}\r\n\r\nexport default CardContainer;","import React, { Children } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//#region STYLES\r\nconst StyledLogoContainer = styled.div<LogoProps>`\r\n    border-radius: 50%;\r\n    width: 80px;\r\n    height: 100%;\r\n    position: relative;\r\n    margin: auto;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    margin-left: 0;\r\n    position: ${ (props) => props.cardType === \"teamCard\" ? \"absolute\" : \"relative\"};\r\n    left: ${ (props) => props.cardType === \"teamCard\" ? \"20px\" : \"0px\"};\r\n\r\n    img{\r\n        margin: auto;\r\n        width: 100%;\r\n        position: relative;\r\n        height: auto;\r\n    }\r\n    \r\n    @media screen and (min-width:600px){\r\n        position: relative;\r\n        height: auto;\r\n        left: auto;\r\n        margin: auto;\r\n        width: 125px;\r\n    }\r\n`;\r\n//#endregion STYLES\r\n\r\ninterface LogoProps {\r\n    cardType?: string,\r\n    teamName: string,\r\n    teamValue: string,\r\n}\r\n\r\nconst Logo: React.FC<LogoProps> = (props) => {\r\n\r\n    const { cardType, teamName, teamValue } = props;\r\n    let currentLogo;\r\n\r\n    //Huge switch statement that determines the logo based on team value. Also added some logic to check for card type.\r\n    //If cardType===teamCard, some teams go to *light* version of logo.\r\n    switch(teamValue) {\r\n        case \"1\":\r\n            if(cardType === \"teamCard\"){\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-dark.svg\";\r\n                break;\r\n            }\r\n        case \"2\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-52-dark.svg\";\r\n            break;\r\n        case \"3\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-12-dark.svg\" ;\r\n            break;\r\n        case \"4\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-13-dark.svg\" ;\r\n            break;\r\n        case \"5\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-dark.svg\";\r\n                break;\r\n            }\r\n        case \"6\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-4-dark.svg\" ;\r\n            break;\r\n        case \"7\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-1-dark.svg\" ;\r\n            break;\r\n        case \"8\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-2-dark.svg\" ;\r\n            break;\r\n        case \"9\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-3-dark.svg\" ;\r\n            break;\r\n        case \"10\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-5-dark.svg\" ;\r\n            break;\r\n        case \"11\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-6-dark.svg\" ;\r\n            break;\r\n        case \"12\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-dark.svg\";\r\n                break;\r\n            }\r\n        case \"13\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-9-dark.svg\" ;\r\n            break;\r\n        case \"14\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-8-dark.svg\" ;\r\n            break;\r\n        case \"15\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-7-dark.svg\" ;\r\n            break;\r\n        case \"16\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-17-dark.svg\" ;\r\n            break;\r\n        case \"17\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-19-dark.svg\" ;\r\n            break;        \r\n        case \"18\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-18-dark.svg\" ;\r\n            break;       \r\n        case \"19\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-29-dark.svg\" ;\r\n            break;\r\n        case \"20\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-16-dark.svg\" ;\r\n            break;\r\n        case \"21\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-dark.svg\" ;\r\n                break;\r\n            }\r\n        case \"22\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-21-dark.svg\" ;\r\n            break;        \r\n        case \"23\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-20-dark.svg\" ;\r\n            break;        \r\n        case \"24\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-22-dark.svg\" ;\r\n            break;        \r\n        case \"25\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-30-dark.svg\" ;\r\n            break;        \r\n        case \"26\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-28-dark.svg\" ;\r\n            break;        \r\n        case \"27\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-25-dark.svg\" ;\r\n            break;        \r\n        case \"28\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-26-dark.svg\" ;\r\n            break;        \r\n        case \"29\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-24-dark.svg\" ;\r\n            break;        \r\n        case \"30\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-53-dark.svg\" ;\r\n            break;        \r\n        case \"142\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/images/logos/teams-current-circle/54.svg\"\r\n            break;\r\n        default:\r\n            currentLogo = 'https://www-league.nhlstatic.com/images/logos/league-light/133.svg';\r\n            break;        \r\n    }\r\n\r\n    return(\r\n        <StyledLogoContainer cardType = {cardType} teamName = {teamName} teamValue = {teamValue} >\r\n            <img src = {currentLogo}\r\n                 alt = {`${teamName} logo`}\r\n            />\r\n        </StyledLogoContainer>\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components' ;\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\n\r\nconst StyledH3 = styled.h3`\r\n    font-size: ${(props: GetTeamStatsProps) => props.teamStatsLocation === \"header\" ? \"24px\" : \"16px\"};\r\n    padding-left: 20px;\r\n`;\r\n    //This whole component does not need to exist. Should be handled with the APICall.js component.\r\n\r\ninterface GetTeamStatsProps{\r\n    teamStatsLocation: string,\r\n    url: string,\r\n    ApiLink: string,\r\n}\r\n\r\nconst GetTeamStats: React.FC<GetTeamStatsProps> = (props) => {\r\n\r\n    const [teamStats, setTeamStats] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    function fetchTeamStats(){\r\n\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                 };\r\n        fetch(url, init)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                console.log(resp);\r\n                setTeamStats(resp);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log('GetTeamStats Fetch Error: ' + error);\r\n            });\r\n    }\r\n\r\nuseEffect(() => {\r\n    fetchTeamStats();\r\n}, [props.url])\r\n\r\nif(props.ApiLink === \"teamStatsQuery\") {\r\n\r\n    if (isLoading){ \r\n        //Doesn't work as intended\r\n        return (\r\n            <LoadingCircle />\r\n        ) \r\n    }\r\n    \r\n    else{\r\n        let record;\r\n\r\n        if(teamStats.teamStatsTotals[0] !== undefined){\r\n\r\n            const teamWins = teamStats.teamStatsTotals[0].stats.standings.wins,\r\n                  teamLosses = teamStats.teamStatsTotals[0].stats.standings.losses,\r\n                  teamOvertimeLosses = teamStats.teamStatsTotals[0].stats.standings.overtimeLosses;\r\n                    \r\n                    record = teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses;\r\n              \r\n        } else {\r\n            record = '0, 0, 0';\r\n        }\r\n\r\n            return (\r\n               <StyledH3 teamStatsLocation={props.teamStatsLocation} {...props}>({record})</StyledH3>\r\n            )\r\n        }\r\n} \r\nelse{\r\n    return <></>\r\n}\r\n\r\n\r\n}\r\n\r\nexport default GetTeamStats","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\nimport '../../../Styles/league-colors.css';\r\nimport GetTeamStats from '../../../API/GetTeamStats';\r\n\r\n//#region STYLES\r\nconst StyledTeamCard = styled.div`\r\n        margin: 10px auto;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100px;\r\n        width: 100%;\r\n        transition: .25s ease-in-out;\r\n        position: relative;\r\n        border-radius: 5px;\r\n        float: left;\r\n        overflow: hidden;\r\n        scroll-behavior: smooth;\r\n\r\n        :hover {\r\n            cursor: pointer;\r\n        }\r\n\r\n        & h2, h3, .logo-container{\r\n            position: relative;\r\n            margin: auto;\r\n            left: auto;\r\n            right: auto;\r\n        }\r\n\r\n        @media (min-width: 600px) {\r\n            max-width: 45%;\r\n            height: 350px;\r\n            margin: 10px;\r\n\r\n           :hover {\r\n                transform:translateY(-5px);\r\n                box-shadow: 2px 4px 6px rgba(0,0,0,.4);\r\n            }\r\n\r\n            & h2, h3{\r\n                padding-left: 0px;\r\n                margin-bottom: 0px;\r\n            }\r\n\r\n        }\r\n\r\n        @media (min-width: 1000px) {\r\n            max-width: 22%;\r\n        }\r\n`;\r\n\r\nconst StyledCityName = styled.h2`\r\n            font-size: 18px;\r\n            padding-left:20px;\r\n\r\n`;\r\n\r\nconst StyledTeamName = styled.h3`\r\n    font-size: 28px;\r\n    padding-left: 20px;\r\n\r\n`;\r\n//#endregion STYLES\r\n\r\ninterface TeamCardProps {\r\n    cityName: string,\r\n    onClick: () => void,\r\n    teamName: string,\r\n    teamValue: string,\r\n}\r\nconst TeamCard: React.FC<TeamCardProps> = (props) => {\r\n\r\n    const { cityName, onClick, teamName, teamValue } = props\r\n\r\n    const teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2019-2020-regular/team_stats_totals.json?team=',\r\n          recordQuery = teamStatsBaseURL + teamValue;\r\n\r\n    return (\r\n        <StyledTeamCard className={`card team-card team${teamValue}`} onClick={onClick} teamValue={teamValue} data-teamid={teamValue} {...props}>\r\n            <StyledCityName>{cityName}</StyledCityName>\r\n            <StyledTeamName>{teamName}</StyledTeamName>\r\n            <GetTeamStats teamStatsLocation=\"teamCard\" ApiLink=\"teamStatsQuery\" url={recordQuery}/>\r\n            <Logo cardType={\"teamCard\"} teamValue={teamValue} teamName={teamName}/>\r\n        </StyledTeamCard>\r\n    )\r\n}\r\n\r\nexport default TeamCard;","\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\n\r\n//#region Styles\r\nconst StyledHomeTeam = styled.div`\r\n    opacity: ${(props:HomeTeamProps) => props.didHomeWin === \"homeWin\" ? \"1\" : \".4\"};\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: auto;\r\n    width: 100%;\r\n    position: relative;\r\n    margin: auto;\r\n    padding: 30px 0;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n\r\nconst StyledTeamNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n//#endregion Styles\r\n\r\ninterface HomeTeamProps{\r\n    didHomeWin: string,\r\n    homeTeamScore?: string,\r\n    logoValue: string,\r\n    teamCity: string,\r\n    teamName: string\r\n}\r\n\r\nconst HomeTeam: React.FC<HomeTeamProps> = (props) => {\r\n    const { didHomeWin, homeTeamScore, logoValue, teamCity, teamName } = props;\r\n\r\n    return (\r\n        <StyledHomeTeam didHomeWin={didHomeWin} {...props}>\r\n            <Logo teamValue={logoValue} teamName={teamName}/>\r\n            <StyledTeamNameWrapper>\r\n                <h3>{teamCity}</h3>\r\n                <h2>{teamName}</h2>\r\n            </StyledTeamNameWrapper>\r\n            <h2 className=\"score home-score\">{homeTeamScore}</h2>\r\n        </StyledHomeTeam>\r\n    )\r\n}\r\n\r\nexport default HomeTeam;","\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\n\r\n//#region Styles\r\nconst StyledAwayTeam = styled.div`\r\n    opacity: ${(props: AwayTeamProps) => props.didHomeWin === \"homeWin\" ? \".4\" : \"1\"};\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: relative;\r\n    margin: auto;\r\n    width: 100%;\r\n    height:auto;\r\n    padding: 30px 0;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n\r\n    div{\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        & *{\r\n            margin: auto;\r\n        }\r\n    }\r\n`;\r\n//#endregion Styles\r\n\r\ninterface AwayTeamProps {\r\n    didHomeWin?: string,\r\n    awayTeamScore: string,\r\n    teamName: string,\r\n    teamCity: string,\r\n    logoValue: string,\r\n}\r\n\r\nconst AwayTeam: React.FC<AwayTeamProps> = (props) => {\r\n\r\n    const {awayTeamScore, didHomeWin, logoValue, teamCity, teamName} = props;\r\n    \r\n    return (\r\n        <StyledAwayTeam didHomeWin={didHomeWin} {...props}>\r\n            <h2 className=\"score away-score\">{awayTeamScore}</h2>\r\n            <div>\r\n                <h2>{teamName}</h2>\r\n                <h3>{teamCity}</h3>\r\n            </div>\r\n            <Logo teamValue={logoValue} teamName={teamName}/>\r\n        </StyledAwayTeam>\r\n    )\r\n}\r\n\r\nexport default AwayTeam;","import React from 'react';\r\n\r\nimport HomeTeam from '../ScheduleCard/HomeTeam';\r\nimport AwayTeam from '../ScheduleCard/AwayTeam';\r\n\r\ninterface TeamProps{\r\n    activeTeamID?: string,\r\n    awayTeamID: string,\r\n    awayTeamCity?: string,\r\n    awayTeamScore: string,\r\n    didHomeWin: string,\r\n    homeTeamCity?: string,\r\n    homeTeamID: number,\r\n    homeTeamScore: string,\r\n    isHomeTeam?: boolean,\r\n    teamName: string,\r\n    teamCity?: string,\r\n\r\n}\r\n\r\nconst Team: React.FC<TeamProps> = (props) => {\r\n    \r\n        //Variables that feed into Home team and Away team components\r\n        let teamName: string = '',\r\n            teamCity: string = '',\r\n            teamValue: number|string,\r\n            logoValue;\r\n\r\n        const { awayTeamID, awayTeamScore, didHomeWin, homeTeamID, homeTeamScore, isHomeTeam } = props;\r\n\r\n        //Gets props.isHomeTeam from Card.js\r\n        if(isHomeTeam){\r\n            teamValue = homeTeamID;\r\n            logoValue = teamValue.toString();\r\n\r\n        } else {\r\n            teamValue = awayTeamID;\r\n            logoValue = teamValue.toString();\r\n        }\r\n        \r\n        //Assign teamName and TeamCity data based on teamID\r\n        switch (teamValue) {\r\n            case 1:\r\n                teamName = 'Lightning';\r\n                teamCity = 'Tampa Bay';\r\n            break;\r\n            case 2:\r\n                teamName = 'Jets';\r\n                teamCity = 'Winnipeg';\r\n            break;\r\n            case 3:\r\n                teamName = 'Hurricanes';\r\n                teamCity = 'Carolina';\r\n            break;\r\n            case 4:\r\n                teamName = 'Panthers';\r\n                teamCity = 'Florida';\r\n           break;\r\n            case 5:\r\n                teamName = 'Capitals';\r\n                teamCity = 'Washington';\r\n           break;\r\n            case 6:\r\n                teamName = 'Flyers';\r\n                teamCity = 'Philadelphia';\r\n           break;\r\n            case 7:\r\n                teamName = 'Devils';\r\n                teamCity = 'New Jersey';\r\n           break;\r\n            case 8:\r\n                teamName = 'Islanders';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 9:\r\n                teamName = 'Rangers';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 10:\r\n                teamName = 'Penguins';\r\n                teamCity = 'Pittsburgh';\r\n           break;\r\n            case 11:\r\n                teamName = 'Bruins';\r\n                teamCity = 'Boston';\r\n           break;\r\n            case 12:\r\n                teamName = 'Maple Leafs';\r\n                teamCity = 'Toronto';\r\n           break;\r\n            case 13:\r\n                teamName = 'Senators';\r\n                teamCity = 'Ottawa';\r\n           break;\r\n            case 14:\r\n                teamName = 'Canadians';\r\n                teamCity = 'Montreal';\r\n           break;\r\n            case 15:\r\n                teamName = 'Sabres';\r\n                teamCity = 'Buffalo';\r\n           break;\r\n            case 16:\r\n                teamName = 'Red Wings';\r\n                teamCity = 'Detroit';\r\n           break;\r\n            case 17:\r\n                teamName = 'Blues';\r\n                teamCity = 'St. Louis';\r\n           break;\r\n            case 18:\r\n                teamName = 'Predators';\r\n                teamCity = 'Nasheville';\r\n           break;\r\n            case 19:\r\n                teamName = 'Blue Jackets';\r\n                teamCity = 'Columbus';\r\n           break;\r\n            case 20:\r\n                teamName = 'Blackhawks';\r\n                teamCity = 'Chicago';\r\n           break;\r\n            case 21:\r\n                teamName = 'Canucks';\r\n                teamCity = 'Vancouver';\r\n           break;\r\n            case 22:\r\n                teamName = 'Avalanche';\r\n                teamCity = 'Colorado';\r\n           break;\r\n            case 23:\r\n                teamName = 'Flames';\r\n                teamCity = 'Calgary';\r\n           break;\r\n            case 24:\r\n                teamName = 'Oilers';\r\n                teamCity = 'Edmonton';\r\n           break;\r\n            case 25:\r\n                teamName = 'Wild';\r\n                teamCity = 'Minnesota';\r\n           break;\r\n            case 26:\r\n                teamName = 'Sharks';\r\n                teamCity = 'San Jose';\r\n           break;\r\n            case 27:\r\n                teamName = 'Stars';\r\n                teamCity = 'Dallas';\r\n           break;\r\n            case 28:\r\n                teamName = 'Kings';\r\n                teamCity = 'Los Angeles';\r\n           break;\r\n            case 29:\r\n                teamName = 'Ducks';\r\n                teamCity = 'Anaheim';\r\n           break;\r\n            case 30:\r\n                teamName = 'Coyotes';\r\n                teamCity = 'Arizona';\r\n           break;\r\n            case 142:\r\n                teamName = 'Golden Knights';\r\n                teamCity = 'Los Vegas';\r\n           break;\r\n          default:\r\n            console.log('error converting data');\r\n        }\r\n\r\n        if(isHomeTeam){\r\n\r\n            return(\r\n                <HomeTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={didHomeWin}\r\n                    homeTeamScore={homeTeamScore}\r\n                    logoValue={logoValue}\r\n                />\r\n            )\r\n\r\n    } else {\r\n\r\n            return(\r\n                <AwayTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={didHomeWin}\r\n                    awayTeamScore={awayTeamScore}\r\n                    logoValue={logoValue}\r\n                    {...props}\r\n                />\r\n            )\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n export default Team;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledGameDateContainer = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    width: 100%;\r\n    left:0;\r\n    right:0;\r\n    margin:auto;\r\n    color: #fff;\r\n    height: 1.2em;\r\n    padding-top: 5px;\r\n    display: flex;\r\n`;\r\n\r\nconst StyledGameDate = styled.p`\r\n    margin: auto;\r\n`;\r\n\r\ninterface GameDateContainerProps {\r\n    gameDateTime: Date,\r\n    activeTeamID: string,\r\n}\r\n\r\nconst GameDateContainer: React.FC<GameDateContainerProps> = (props) => {\r\n    const { activeTeamID, gameDateTime} = props;\r\n\r\n        //Gets date from API response and converts it to a readable format for the Card\r\n        //Needs to get split off into its own component\r\n        let jsonDate = new Date(gameDateTime),\r\n            weekday = new Array(7);\r\n                weekday[0] = \"Sunday\";\r\n                weekday[1] = \"Monday\";\r\n                weekday[2] = \"Tuesday\";\r\n                weekday[3] = \"Wednesday\";\r\n                weekday[4] = \"Thursday\";\r\n                weekday[5] = \"Friday\";\r\n                weekday[6] = \"Saturday\";\r\n\r\n        let formattedGameDate = weekday[jsonDate.getDay()] + ', ' + jsonDate.toLocaleDateString() + ' at ' + jsonDate.toLocaleTimeString();\r\n\r\n  return (\r\n        <StyledGameDateContainer gameDateTime={props.gameDateTime} className={`team${activeTeamID}`} {...props}>\r\n            <StyledGameDate> {formattedGameDate}</StyledGameDate>\r\n        </StyledGameDateContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default GameDateContainer;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport Team from '../TeamCard/Team';\r\nimport GameDateContainer from './GameDateContainer';\r\nimport styled from 'styled-components';\r\n\r\n//#region STYLES\r\nconst StyledScheduleCard = styled.div`\r\n    margin: auto 10px;\r\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n    height: 300px;\r\n    width: 100%;\r\n    min-width: 350px;\r\n    transition: .25s ease-in-out;\r\n    background-color: ${(props: ScheduleCardProps) => props.isPast === \"past\" ? \"lightgray\" : \"#fff\"};\r\n    position: relative;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    scroll-behavior: smooth;\r\n    scroll-snap-align: center;\r\n    opacity: ${(props: ScheduleCardProps) => props.isPast === \"past\" ? \".6\" : \"1\"};\r\n\r\n    @media (min-width: 600px) {\r\n        width: 350px;\r\n        height: 450px;\r\n        margin: auto 20px;\r\n\r\n            :hover{\r\n                box-shadow: 0 2px 6px rgba(0,0,0,0.2), 0 2px 4px rgba(0,0,0,0.4);\r\n                transform: translateY(-5px);\r\n                opacity: .85;\r\n            }\r\n    }\r\n`;\r\n\r\nconst StyledGameScore = styled.div`\r\n    position: absolute;\r\n    top: 15px;\r\n    height: calc(100% - 15px);\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & *{\r\n        margin: auto;\r\n    }\r\n\r\n    & p{\r\n        font-weight: 600;\r\n    }\r\n`\r\n//#endregion STYLES\r\ninterface ScheduleCardProps {\r\n    activeTeamID: string,\r\n    awayTeamID: string,\r\n    awayTeamScore: string,\r\n    awayTeamName: string,\r\n    awayTeamCity: string,\r\n    gameDateTime: Date,\r\n    homeTeamID: number,\r\n    homeTeamName: string,\r\n    homeTeamCity: string,\r\n    homeTeamScore: string,\r\n    teamCity?: string,\r\n    teamName: string,\r\n    isPast?: string\r\n    isHomeTeam?: string,\r\n    onClick: () => void,\r\n    month: string,\r\n    cardType: string\r\n}\r\n\r\nconst ScheduleCard: React.FC<ScheduleCardProps> = (props) => {\r\n\r\n\r\n    const [isGamePast, setIsGamePast] = useState(true);\r\n    const { activeTeamID, awayTeamID, awayTeamScore, gameDateTime, homeTeamID, homeTeamScore, teamCity, teamName} = props;\r\n\r\n    const pastOrFuture = isGamePast ? \"past\" : \"future\";\r\n\r\n    let currentGameDate = new Date(gameDateTime),\r\n        month = currentGameDate.getMonth(),\r\n        didHomeWin;\r\n\r\n    if (homeTeamScore > awayTeamScore){\r\n        didHomeWin = \"homeWin\";\r\n    } else {\r\n        didHomeWin = \"homeLose\"; \r\n    }\r\n\r\n    function dateCheck() {\r\n        let currentDate: Date = new Date(),\r\n            currentGameDate = new Date(gameDateTime);\r\n\r\n        if (currentDate < currentGameDate) {\r\n            setIsGamePast(true);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        dateCheck();\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n        <StyledScheduleCard data-month={month} data-pastfuture={pastOrFuture} cardType={\"scheduleCard\"} isPast={isGamePast ? 'past' : 'future'} {...props}>\r\n            <GameDateContainer\r\n                gameDateTime={currentGameDate}\r\n                activeTeamID={activeTeamID}\r\n            />\r\n            <StyledGameScore>\r\n                <Team\r\n                    didHomeWin={didHomeWin}\r\n                    awayTeamID={awayTeamID}\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    awayTeamScore={awayTeamScore}\r\n                    homeTeamID={homeTeamID}\r\n                    homeTeamScore={homeTeamScore}\r\n                />\r\n                <p>At</p>\r\n                <Team\r\n                    isHomeTeam={true}\r\n                    didHomeWin={didHomeWin}\r\n                    homeTeamID={homeTeamID}\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    homeTeamScore={homeTeamScore}\r\n                    awayTeamID={awayTeamID}\r\n                    awayTeamScore={awayTeamScore}\r\n                />\r\n            </StyledGameScore>\r\n        </StyledScheduleCard>\r\n    )\r\n\r\n}\r\n\r\nexport default ScheduleCard;","import React from 'react';\r\nimport TeamCard from './TeamCard/TeamCard';\r\nimport ScheduleCard from './ScheduleCard/ScheduleCard';\r\n\r\n\r\ninterface CardProps {\r\n    activeTeamID?: string,\r\n    activeTeamName?: string,\r\n    awayTeamCity?: string,\r\n    awayTeamID?: string,\r\n    awayTeamName?: string, \r\n    awayTeamScore?: string,\r\n    cardType: string, \r\n    cityName?: string,\r\n    gameID?: number,\r\n    gameDateTime?: Date, \r\n    handleClick?: any,\r\n    homeTeamCity?: string, \r\n    homeTeamID?: number, \r\n    homeTeamName?: string, \r\n    homeTeamScore?: string,\r\n    isPast?: string,\r\n    key?: string,\r\n    onClick?: any,\r\n    month?: string,\r\n    teamName?: string,\r\n    teamValue?: string\r\n}\r\n\r\nconst Card: React.FC<CardProps> = (props) => {\r\n\r\n    const { activeTeamID, awayTeamCity, awayTeamID, awayTeamName, awayTeamScore, cardType, cityName, gameDateTime, handleClick, homeTeamCity, homeTeamID, homeTeamName, homeTeamScore, isPast, onClick, month, teamName, teamValue } = props;\r\n     \r\n        //Team Cards\r\n        if(cardType === \"teamCard\") {\r\n            return (\r\n                <TeamCard\r\n                    cityName={cityName!}\r\n                    teamName={teamName!}\r\n                    onClick={onClick!}\r\n                    teamValue={teamValue!}\r\n                />\r\n                );\r\n            }\r\n        //Schedule Cards\r\n        if(cardType === \"scheduleCard\") {\r\n            return(\r\n                <ScheduleCard\r\n                    gameDateTime={gameDateTime!}\r\n                    awayTeamID={awayTeamID!}\r\n                    awayTeamName={awayTeamName!}\r\n                    awayTeamCity={awayTeamCity!}\r\n                    awayTeamScore={awayTeamScore!}\r\n                    homeTeamID={homeTeamID!}\r\n                    homeTeamName={homeTeamName!}\r\n                    homeTeamCity={homeTeamCity!}\r\n                    homeTeamScore={homeTeamScore!}\r\n                    onClick={handleClick!}\r\n                    activeTeamID={activeTeamID!}\r\n                    month={month!}\r\n                    teamName={teamName!}\r\n                    isPast={isPast}\r\n                    cardType={'ScheduleCard'}\r\n                />\r\n            )\r\n        }\r\n\r\n        else return null\r\n    }\r\n\r\nexport default Card;","import React, {useState, useEffect} from 'react';\r\nimport CardContainer from '../Components/Containers/CardContainer';\r\nimport Card from '../Components/Cards/Card';\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\n\r\n/**\r\n */\r\n\r\ninterface ApiCallProps {\r\n    activeTeamID: string,\r\n    activeTeamName?: string,\r\n    ApiLink: string,\r\n    awayTeamName?: string,\r\n    awayTeamCity?: string,\r\n    awayTeamID?: string,\r\n    url: string,\r\n    cityName?: string,\r\n    handleClick?: any,\r\n    homeTeamName?: string,\r\n    homeTeamCity?: string,\r\n    homeTeamID?: number,\r\n    onClick?: any,\r\n    month?: any,\r\n    teamName?: any,\r\n    teamValue?: string\r\n}\r\n\r\nconst ApiCall: React.FC<ApiCallProps> = (props) => {\r\n    //schedule: placeholder for data recieved from fetch request\r\n    //isLoaded: boolean for loading animation\r\n    //error: if something doesn't go right, load Error component\r\n\r\n    const [schedule, setSchedule] = useState();\r\n    const [isLoaded, setIsLoaded] = useState(Boolean);\r\n\r\n    function fetchSchedule() {\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                };\r\n        fetch(url, init)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                setSchedule(data);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(error => {\r\n                console.log('API call failed with error ', error);\r\n            });\r\n        return;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchSchedule();\r\n    }, []);\r\n    \r\n\r\n    if (props.ApiLink === \"gameScheduleQuery\") {\r\n\r\n        //Loading Animation\r\n        if (!isLoaded) { return <LoadingCircle /> }\r\n        \r\n        //Map JSON Data to Card component\r\n        else {\r\n            const gameCard = schedule.games.map((game: any) =>\r\n                <Card key={game.schedule.id}\r\n                    cardType=\"scheduleCard\"\r\n                    awayTeamName={props.awayTeamName!}\r\n                    awayTeamCity={props.awayTeamCity!}\r\n                    awayTeamID={game.schedule.awayTeam.id!}\r\n                    awayTeamScore={game.score.awayScoreTotal!}\r\n                    homeTeamName={props.homeTeamName!}\r\n                    homeTeamCity={props.homeTeamCity!}\r\n                    homeTeamID={game.schedule.homeTeam.id!}\r\n                    homeTeamScore={game.score.homeScoreTotal!}\r\n                    gameDateTime={game.schedule.startTime!}\r\n                    gameID={game.schedule.id!}\r\n                    activeTeamID={props.activeTeamID!}\r\n                    activeTeamName={props.activeTeamName!}\r\n                    cityName={props.cityName!}\r\n                    teamValue={props.teamValue!}\r\n                    {...props}\r\n                />\r\n\r\n                );\r\n            //Return Schedule Card container with mapped Schedule Cards\r\n            return (\r\n                <CardContainer containerType=\"card_container_schedule_list\" >\r\n                    {gameCard}\r\n                </CardContainer>\r\n            )\r\n        }\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n\r\nexport default ApiCall","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDivisionContainer = styled.section`\r\n    width:100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    padding-bottom: 25px;\r\n    position: relative;\r\n\r\n    @media (min-width: 600px) {\r\n        display: inline-block;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledDivisionName = styled.h2`\r\n    text-align: left;\r\n    width: 100%;\r\n`\r\n\r\ninterface DivisionContainerProps {\r\n    divisionTitle: string\r\n}\r\n\r\nconst DivisionContainer: React.FC<DivisionContainerProps> = (props) => {\r\n    window.scrollTo(0,0);\r\n    \r\n    return(\r\n        <StyledDivisionContainer>\r\n            <StyledDivisionName>{ props.divisionTitle }</StyledDivisionName>\r\n            {props.children}\r\n        </StyledDivisionContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default DivisionContainer;","import React from 'react';\r\n\r\nimport CardContainer from '../../Containers/CardContainer';\r\nimport DivisionContainer from '../../Containers/DivisionContainer';\r\nimport Card from '../Card';\r\n\r\n\r\ninterface TeamListProps {\r\n    handleClick: any,\r\n}\r\n\r\nconst TeamList: React.FC<TeamListProps> = (props) => {\r\n\r\n    const { handleClick } = props;\r\n        return (\r\n\r\n            <CardContainer containerType=\"division-container\">\r\n                <DivisionContainer divisionTitle=\"Atlantic\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Boston\"\r\n                        teamName=\"Bruins\"\r\n                        teamValue=\"11\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Buffalo\"\r\n                        teamName=\"Sabres\"\r\n                        teamValue=\"15\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Detroit\"\r\n                        teamName=\"Red Wings\"\r\n                        teamValue=\"16\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Florida\"\r\n                        teamName=\"Panthers\"\r\n                        teamValue=\"4\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Montreal\"\r\n                        teamName=\"Canadians\"\r\n                        teamValue=\"14\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Ottawa\"\r\n                        teamName=\"Senators\"\r\n                        teamValue=\"13\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Tampa Bay\"\r\n                        teamName=\"Lightning\"\r\n                        teamValue=\"1\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Toronto\"\r\n                        teamName=\"Maple Leafs\"\r\n                        teamValue=\"12\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Metropolitan\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Carolina\"\r\n                        teamName=\"Hurricanes\"\r\n                        teamValue=\"3\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Columbus\"\r\n                        teamName=\"Blue Jackets\"\r\n                        teamValue=\"19\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New Jersey\"\r\n                        teamName=\"Devils\"\r\n                        teamValue=\"7\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Islanders\"\r\n                        teamValue=\"8\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Rangers\"\r\n                        teamValue=\"9\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Philadelphia\"\r\n                        teamName=\"Flyers\"\r\n                        teamValue=\"6\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Pittsburgh\"\r\n                        teamName=\"Penguins\"\r\n                        teamValue=\"10\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Washington\"\r\n                        teamName=\"Capitals\"\r\n                        teamValue=\"5\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Central\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Chicago\"\r\n                        teamName=\"Black Hawks\"\r\n                        teamValue=\"20\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Colorado\"\r\n                        teamName=\"Avalanche\"\r\n                        teamValue=\"22\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Dallas\"\r\n                        teamName=\"Stars\"\r\n                        teamValue=\"27\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Minnesota\"\r\n                        teamName=\"Wild\"\r\n                        teamValue=\"25\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Nashville\"\r\n                        teamName=\"Predators\"\r\n                        teamValue=\"18\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"St. Louis\"\r\n                        teamName=\"Blues\"\r\n                        teamValue=\"17\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Winnipeg\"\r\n                        teamName=\"Jets\"\r\n                        teamValue=\"2\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Pacific\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Anaheim\"\r\n                        teamName=\"Ducks\"\r\n                        teamValue=\"29\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Arizona\"\r\n                        teamName=\"Coyotes\"\r\n                        teamValue=\"30\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Calgary\"\r\n                        teamName=\"Flames\"\r\n                        teamValue=\"23\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Edmonton\"\r\n                        teamName=\"Oilers\"\r\n                        teamValue=\"24\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Los Angeles\"\r\n                        teamName=\"Kings\"\r\n                        teamValue=\"28\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"San Jose\"\r\n                        teamName=\"Sharks\"\r\n                        teamValue=\"26\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Vancouver\"\r\n                        teamName=\"Canucks\"\r\n                        teamValue=\"21\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Las Vegas\"\r\n                        teamName=\"Golden Knights\"\r\n                        teamValue=\"142\"\r\n                        onClick={handleClick}\r\n                        {...props}\r\n\r\n                    />\r\n                </DivisionContainer>\r\n            </CardContainer>\r\n\r\n        )\r\n    }\r\nexport default TeamList","import React, {useState} from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport '../../Styles/league-colors.css';\r\n\r\n//#region STYLES\r\nconst StyledFab = styled.button`\r\n  border-radius: 50%;\r\n  border: none;\r\n  box-shadow: 2px 2px 6px rgba(0,0,0,.4);\r\n  transition: .5s ease-in-out;\r\n  position: fixed;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  height: 75px;\r\n  width: 75px;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\nconst StyledHamburger = styled.div`\r\n    width: 30px;\r\n    height: 2px;\r\n    margin: auto;\r\n    background-color: currentColor;\r\n    transition: .25s ease-in-out;\r\n\r\n    ::before, ::after{\r\n      content:'';\r\n      width: 30px;\r\n      height: 2px;\r\n      background-color: inherit;\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      margin: auto;\r\n      transition: .2s ease-in-out;\r\n    }\r\n\r\n    ::before{\r\n      top: 35%;\r\n    }\r\n\r\n    ::after{\r\n      bottom: 35%;\r\n    }\r\n`;\r\n\r\nconst StyledFabH2 = styled.h2`\r\n    margin: auto;\r\n    color: currentColor;\r\n    position: relative;\r\n    text-align: center;\r\n`;\r\n\r\nconst ActiveFabWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0,0,0,.4);\r\n    z-index: 9999;\r\n`;\r\n\r\nconst ActiveFabOne = styled(StyledFab)`\r\n\r\n`;\r\n\r\nconst FabSlideUp = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(125px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`\r\n\r\nconst ActiveFabTwo = styled(StyledFab)`\r\n    animation: ${FabSlideUp} .45s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\r\n    bottom: 115px;\r\n`\r\n\r\nconst ActiveFabThree = styled(StyledFab)`\r\n    animation: ${FabSlideUp} .6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\r\n    bottom: 215px;\r\n`\r\n//#endregion STYLES\r\n\r\ninterface FabProps {\r\n  activeTeamID: String,\r\n  handleClick: (event: React.MouseEvent<HTMLButtonElement>) => void,\r\n  isActive: boolean,\r\n  visible: boolean\r\n}\r\n\r\nconst Fab: React.FC<FabProps> = (props) => {\r\n\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  \r\n  const { activeTeamID, handleClick } = props;\r\n\r\n  function scrollToNextGame() {\r\n    \r\n    /* Those exlamation marks are non-null assertion operators. Need to read more about them.\r\n    * https://www.logicbig.com/tutorials/misc/typescript/non-null-assertion-operator.html\r\n    */\r\n\r\n    const lastGame = document.getElementById('card_container_schedule_list')!.lastElementChild;\r\n    const nextGame = document.querySelector('[data-pastfuture=\"future\"]')!;\r\n\r\n    if(!document.querySelector('[data-pastfuture=\"future\"]')){\r\n      if(lastGame){\r\n        lastGame.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start'\r\n        });\r\n      }\r\n      setIsActive(!isActive);\r\n      return;\r\n    } else {\r\n      nextGame.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n      setIsActive(!isActive);\r\n    }\r\n\r\n  }\r\n\r\n    if(isActive) {\r\n      return (\r\n        <ActiveFabWrapper>\r\n          <ActiveFabThree className={`team${activeTeamID}`} onClick={scrollToNextGame}>\r\n            <StyledFabH2>Next Game</StyledFabH2>\r\n          </ActiveFabThree>\r\n\r\n          <ActiveFabTwo className={`team${activeTeamID}`} onClick={handleClick}>\r\n            <StyledFabH2>Teams</StyledFabH2>\r\n          </ActiveFabTwo>\r\n\r\n          <ActiveFabOne className={`team${activeTeamID}`} onClick={() => setIsActive(!isActive)}>\r\n            <StyledFabH2>Close</StyledFabH2>\r\n          </ActiveFabOne>\r\n        </ActiveFabWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <StyledFab className={`team${activeTeamID}`} onClick={() => setIsActive(!isActive)}>\r\n          <StyledHamburger></StyledHamburger>\r\n        </StyledFab>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Fab;\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledMonthContainer = styled.div`\r\n    height: 50px;\r\n    border-bottom: 2px solid #000;\r\n    width: 200px;\r\n    margin-left: 20px;\r\n    top: 180px;\r\n    position: fixed;\r\n    padding-bottom: 10px;\r\n\r\n    & h2{\r\n        text-align: left;\r\n        padding-left: 10px;\r\n        transition: .3s ease-in-out;\r\n        opacity: ${(props: MonthContainerProps) => props.visible ? \"1\" : \"0\"};\r\n        transform: ${(props: MonthContainerProps) => props.visible ? \"\" : \"translateY(15px)\"};\r\n        padding-bottom: 10px;\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n        margin-left: 45px;\r\n    }\r\n`;\r\n\r\ninterface MonthContainerProps {\r\n    visible?: boolean,\r\n\r\n}\r\n\r\nconst MonthContainer: React.FC<MonthContainerProps> = (props) => {\r\n\r\n    const [currentMonth, setCurrentMonth] = useState('October');\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    function updateH2 (){\r\n        //Issue\r\n         const scheduleList = document.getElementById(\"card_container_schedule_list\");\r\n         \r\n        const   Months = {\r\n                    January:  (document.querySelectorAll(\"[data-month='0']\")[0] as any).offsetLeft,\r\n                    February: (document.querySelectorAll(\"[data-month='1']\")[0] as any).offsetLeft,\r\n                    March:    (document.querySelectorAll(\"[data-month='2']\")[0] as any).offsetLeft,\r\n                    April:    (document.querySelectorAll(\"[data-month='3']\")[0] as any).offsetLeft,\r\n                    October:  (document.querySelectorAll(\"[data-month='9']\")[0] as any).offsetLeft,\r\n                    November: (document.querySelectorAll(\"[data-month='10']\")[0] as any).offsetLeft,\r\n                    December: (document.querySelectorAll(\"[data-month='11']\")[0] as any).offsetLeft,\r\n                };\r\n\r\n        const setMonthState = (month: string) => {\r\n            setIsVisible(false)\r\n\r\n            setTimeout(()=>{\r\n               setIsVisible(true);\r\n               setCurrentMonth(month);\r\n            }, 600);\r\n\r\n        };\r\n        \r\n        scheduleList!.addEventListener(\"scroll\", () => {\r\n\r\n                let scheduleListCheckPoint = scheduleList!.scrollLeft + 300;                \r\n\r\n            //If the distance between the first card of month X to the left side of card_container_schedule_list is \r\n            //less than or equal to the distance the card_container_schedule_list has been scrolled (plus the size of one card)\r\n            //set state of current month to month X.\r\n\r\n            switch(true){\r\n                case scheduleListCheckPoint > 0 && scheduleListCheckPoint < Months.November:\r\n                    if (currentMonth === \"October\") { break; }\r\n                        setMonthState(\"October\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.October && scheduleListCheckPoint < Months.December:\r\n                    if (currentMonth === \"November\") { break; }\r\n                        setMonthState(\"November\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.November && scheduleListCheckPoint < Months.January:\r\n                    if (currentMonth === \"December\") { break; } \r\n                        setMonthState(\"December\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.December && scheduleListCheckPoint < Months.February:\r\n                    if (currentMonth === \"January\") { break; }\r\n                        setMonthState(\"January\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.January && scheduleListCheckPoint < Months.March:\r\n                    if (currentMonth === \"February\") { break; }\r\n                        setMonthState(\"February\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.February && scheduleListCheckPoint < Months.April:\r\n                    if (currentMonth === \"March\") { break; }\r\n                        setMonthState(\"March\");\r\n                        break;\r\n                case scheduleListCheckPoint > Months.March:\r\n                    if (currentMonth === \"April\") { break; }\r\n                        setMonthState(\"April\");\r\n                        break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n//I need to figure out why #card_container_schedule_list returns UNDEFINED if I don't use setTimeout. \r\n        //Until then, setTimeout works around that\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        updateH2();\r\n        setIsVisible(true);    \r\n    }, 1000);\r\n})\r\n \r\n    return (\r\n        <StyledMonthContainer visible={isVisible}>\r\n            <h2> { currentMonth } </h2>\r\n        </StyledMonthContainer>\r\n    )\r\n}\r\n\r\nexport default MonthContainer;","import React, {useState} from 'react';\r\nimport Header from '../Components/Header/Header';\r\nimport ApiCall from '../API/ApiCall';\r\nimport GetTeamStats from '../API/GetTeamStats';\r\nimport TeamList from '../Components/Cards/TeamCard/TeamList';\r\nimport Fab from '../Components/Buttons/Fab';\r\nimport MonthContainer from '../Components/Containers/MonthContainer';\r\nimport styled from 'styled-components';\r\nimport '../Styles/league-colors.css';\r\n\r\n//#region STYLES\r\nconst StyledWrapper = styled.main`\r\n        position: relative;\r\n        margin-top: 175px;\r\n`\r\n\r\n//#endregion STYLES\r\n\r\ninterface HomeProps {\r\n    currentTeamRecord: string,\r\n}\r\n\r\nconst Home: React.FC<HomeProps> = (props) => {\r\n\r\n    const [activeTeamID, setActiveTeamID] = useState('');\r\n    const [headerH1, setHeaderH1] = useState('Face Off');\r\n    const [headerH2, setHeaderH2] = useState('');\r\n    const [headerH3, setHeaderH3] = useState('');\r\n    const [isFabActive, setIsFabActive] = useState(false);\r\n    const [isScheduleListActive, setIsScheduleListActive] = useState(false);\r\n    const [isTeamListActive, setIsTeamListActive] = useState(true);\r\n    const [scheduleQueryRecipe, setScheduleQueryRecipe] = useState('');\r\n    const [teamStatsQueryRecipe, setTeamStatsQueryRecipe] = useState('');\r\n\r\n    const { currentTeamRecord } = props;\r\n\r\n\r\n   function handleClick(e: Event) {\r\n        //Properly handles clicks to nested elements. Deep down in my heart I know this isn't right.\r\n        let targetTeam = (e.target as HTMLElement).closest(\".card\") as HTMLElement,\r\n            targetTeamValue = targetTeam.dataset.teamid as any,\r\n\r\n            //Gets chosen card, then derives teamName and teamCity from its inner HTML\r\n            currentTeamName = (targetTeam.firstChild as HTMLElement).innerHTML,\r\n            currentTeamCityEl = (targetTeam.firstChild as HTMLElement),\r\n            currentTeamCity = currentTeamCityEl.nextElementSibling!.innerHTML,\r\n            scheduleBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2019-2020-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2019-2020-regular/team_stats_totals.json?team=',\r\n            divisionContainer = document.getElementById(\"division-container\");\r\n        //Transitions TeamCards Out\r\n        divisionContainer!.classList.remove(\"fade-in\");\r\n        divisionContainer!.classList.add(\"fade-out\");\r\n\r\n        if (!currentTeamName) { return }\r\n\r\n        setActiveTeamID(targetTeamValue);\r\n        setHeaderH1(currentTeamName);\r\n        setHeaderH2(currentTeamCity);\r\n        setHeaderH3(currentTeamRecord);\r\n        setIsFabActive(true);\r\n        setIsScheduleListActive(true);\r\n        setIsTeamListActive(false);\r\n        setScheduleQueryRecipe(scheduleBaseURL + targetTeamValue);\r\n        setTeamStatsQueryRecipe(teamStatsBaseURL + targetTeamValue);\r\n    };\r\n\r\n    function resetAPICall() {\r\n        let scheduleQueryBaseURL = 'https://api.mysportsfeeds.com/v2.1/pull/nhl/2019-2020-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.1/pull/nhl/2019-2020-regular/team_stats_totals.json?team='\r\n\r\n            setActiveTeamID('');\r\n            setHeaderH1('Face Off');\r\n            setHeaderH2('');\r\n            setHeaderH3('');\r\n            setIsFabActive(false);\r\n            setIsScheduleListActive(false);\r\n            setIsTeamListActive(true);\r\n            setScheduleQueryRecipe(scheduleQueryBaseURL);\r\n            setTeamStatsQueryRecipe(teamStatsBaseURL);\r\n\r\n            window.scrollTo(0,0);\r\n    };\r\n\r\n\r\n        if (isScheduleListActive) {\r\n            //Good to have reference to the API link...\r\n            console.log(\"The current TeamStatsQueryRecipe is \" + teamStatsQueryRecipe);\r\n            console.log(\"The current scheduleQueryRecipe is \" + scheduleQueryRecipe);\r\n\r\n            return (\r\n                <>\r\n                    <Header headerStyle=\"TeamHeader\" activeTeamID={activeTeamID} headerH1={headerH1} headerH2={headerH2}>\r\n                        <GetTeamStats teamStatsLocation=\"header\" ApiLink=\"teamStatsQuery\" url={teamStatsQueryRecipe} />\r\n                    </Header>\r\n\r\n                    <div className=\"wrapper wrapper__home\">\r\n                        <h2 className=\"page__title page__title_schedule\">Choose a Game</h2>\r\n                        <MonthContainer />\r\n                        <ApiCall activeTeamID={activeTeamID} ApiLink=\"gameScheduleQuery\" url={scheduleQueryRecipe}/>\r\n                        <Fab activeTeamID={activeTeamID} visible={isFabActive} isActive={isFabActive} handleClick={resetAPICall} />\r\n                    </div>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        if (isTeamListActive) {\r\n\r\n            return (\r\n                <>\r\n                    <Header headerStyle=\"homeHeader\" headerH1={headerH1} headerH2={headerH2} />\r\n                    <StyledWrapper>\r\n                        <TeamList handleClick={handleClick} {...props} />\r\n                    </StyledWrapper>\r\n                </>\r\n            )\r\n        }\r\n\r\n        else return null\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\nimport Home from './Pages/Home';\r\n\r\nconst StyledApp = styled.div`\r\n    text-align: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App = () => {\r\n  const baseUrl = process.env.PUBLIC_URL;\r\n\r\n  return (\r\n    <Router>\r\n      <StyledApp>\r\n        <Route path={baseUrl + \"/\"} component={Home as any} />\r\n      </StyledApp>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}