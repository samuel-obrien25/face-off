{"version":3,"sources":["Components/Loading/LoadingCircle.js","Components/Header/Header.js","Components/Containers/CardContainer.js","Components/Logo/Logo.js","API/GetTeamStats.js","Components/Cards/TeamCard/TeamCard.js","Components/Cards/ScheduleCard/HomeTeam.js","Components/Cards/ScheduleCard/AwayTeam.js","Components/Cards/TeamCard/Team.js","Components/Cards/ScheduleCard/GameDateContainer.js","Components/Cards/ScheduleCard/ScheduleCard.js","Components/Cards/Card.js","Components/Buttons/Reload.js","Utilities/Error.js","API/ApiCall.js","Components/Containers/DivisionContainer.js","Components/Cards/TeamCard/TeamList.js","Components/Buttons/Fab.js","Components/Containers/MonthContainer.js","Pages/Schedule.js","App.js","registerServiceWorker.js","index.js"],"names":["spin","keyframes","_templateObject","StyledLoadingCircle","styled","div","_templateObject2","LoadingCircle","react_default","a","createElement","StyledHeader","header","Header_templateObject","props","activeTeamID","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","setState","_this$props","children","headerH1","headerH2","className","concat","Loading_LoadingCircle","React","Component","StyledCardContainer","CardContainer_templateObject","StyledScheduleCardContainer","CardContainer_templateObject2","CardContainer","containerType","window","scrollTo","id","onScroll","addCardScale","StyledLogoContainer","Logo_templateObject","cardType","StyledLogo","img","Logo_templateObject2","Logo","currentLogo","teamValue","src","alt","TeamName","StyledH3","h3","GetTeamStats_templateObject","teamStatsLocation","GetTeamStats","teamStats","_this2","url","init","type","dataType","async","headers","Authorization","btoa","username","fetch","then","resp","json","prevProps","fetchTeamStats","_this$state","ApiLink","teamWins","teamStatsTotals","stats","standings","wins","teamLosses","losses","teamOvertimeLosses","overtimeLosses","console","log","StyledTeamCard","TeamCard_templateObject","StyledCityName","h2","TeamCard_templateObject2","StyledTeamName","_templateObject3","TeamCard","recordQuery","onClick","data-teamid","cityName","teamName","GetTeamStats_GetTeamStats","Components_Logo_Logo","StyledHomeTeam","HomeTeam_templateObject","didHomeWin","StyledTeamNameWrapper","HomeTeam_templateObject2","HomeTeam","logoValue","teamCity","homeTeamScore","StyledAwayTeam","AwayTeam_templateObject","AwayTeam_templateObject2","AwayTeam","awayTeamScore","AwayTeam_StyledTeamNameWrapper","Team","awayTeamID","homeTeamID","isHomeTeam","toString","ScheduleCard_HomeTeam","ScheduleCard_AwayTeam","StyledGameDateContainer","GameDateContainer_templateObject","StyledGameDate","p","GameDateContainer_templateObject2","GameDateContainer","jsonDate","Date","gameDateTime","weekday","Array","formattedGameDate","getDay","toLocaleDateString","toLocaleTimeString","StyledScheduleCard","ScheduleCard_templateObject","isPast","StyledGameScore","ScheduleCard_templateObject2","ScheduleCard","isGamePast","scaleValue","cardsList","document","getElementsByClassName","viewCenterPoint","outerWidth","i","length","cardScrollPoint","offsetLeft","cardsListContainer","parentElement","scrollLeft","style","transform","dateCheck","pastOrFuture","currentGameDate","month","getMonth","data-month","data-pastfuture","ScheduleCard_GameDateContainer","TeamCard_Team","Card","awayTeamCity","awayTeamName","handleClick","homeTeamCity","homeTeamName","Cards_TeamCard_TeamCard","Cards_ScheduleCard_ScheduleCard","Reload","location","reload","Error","Buttons_Reload","ApiCall","schedule","isLoaded","error","data","fetchSchedule","_this3","src_Utilities_Error","gameCard","games","map","game","Cards_Card","key","awayTeam","score","awayScoreTotal","homeTeam","homeScoreTotal","startTime","gameID","activeTeamName","Containers_CardContainer","StyledDivisionContainer","section","DivisionContainer_templateObject","StyledDivisionName","DivisionContainer_templateObject2","DivisionContainer","divisionTitle","TeamList","Containers_DivisionContainer","StyledFab","button","Fab_templateObject","StyledHamburger","Fab_templateObject2","StyledFabH2","Fab_templateObject3","_templateObject4","isFabActive","ActiveFabWrapper","_templateObject5","ActiveFabOne","_templateObject6","FabSlideUp","_templateObject7","ActiveFabTwo","_templateObject8","ActiveFabThree","_templateObject9","Fab","handleMenuClick","CurrentFabText","scrollToNextGame","querySelector","scrollIntoView","behavior","block","isFabHidden","isActive","StyledMonthContainer","MonthContainer_templateObject","visible","MonthContainer","updateH2","SCHEDULE_LIST","getElementById","MONTHS","querySelectorAll","setMonthState","isVisible","setTimeout","currentMonth","addEventListener","scheduleListCheckPoint","StyledWrapper","main","Schedule_templateObject","Schedule","e","targetTeam","target","closest","targetTeamValue","dataset","teamid","currentTeamName","firstChild","innerHTML","currentTeamCity","nextElementSibling","divisionContainer","classList","remove","add","scheduleQueryRecipe","teamStatsQueryRecipe","isTeamListActive","isScheduleListActive","headerH3","currentTeamRecord","resetAPICall","teamStatsBaseURL","Components_Header_Header","Containers_MonthContainer","ApiCall_ApiCall","Buttons_Fab","TeamCard_TeamList","StyledApp","App_templateObject","App","BrowserRouter","Route","path","baseUrl","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","URL","process","origin","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.641a4ef2.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n//#region Styles\r\nconst spin = keyframes`\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to{\r\n        transform: rotate(360deg);\r\n    }\r\n`\r\n\r\nconst StyledLoadingCircle = styled.div`\r\n    .loading-circle{\r\n        width: 2vw;\r\n        height: 2vw;\r\n        border-radius: 50%;\r\n        border: 1vw solid #999;\r\n        border-top-color: #444;\r\n        animation: 2s ${spin} infinite linear;\r\n        margin:auto;\r\n    }`\r\n//#endregion Styles\r\n\r\nconst LoadingCircle = () => {\r\n    return(\r\n        <StyledLoadingCircle/>\r\n    )\r\n}\r\n    \r\nexport default LoadingCircle;","import React from 'react';\r\nimport LoadingCircle from '../Loading/LoadingCircle';\r\nimport styled from 'styled-components';\r\nimport '../../Utilities/league-colors.css';\r\n\r\n\r\n//#region Styles\r\nconst StyledHeader = styled.header`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    background-color: #222;\r\n    width: 100%;\r\n    height: 150px;\r\n    padding: 20px 0;\r\n    color: white;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    text-align:center;\r\n    transition: .25s ease-in-out;\r\n    z-index:8000;\r\n\r\n    & h1, h2, h3{\r\n        width: 80%;\r\n        margin: auto;\r\n        padding-left: 0px;\r\n    }\r\n\r\n    h1 {\r\n        margin: auto;\r\n        margin-bottom: 0px;\r\n        font-size: ${props => props.activeTeamID ? '24px' : '42px'};\r\n    }\r\n\r\n    h2 {\r\n        font-size: ${props => props.activeTeamID ? '42px' : '24px'};\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\n//#endregion Styles\r\n\r\nclass Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isLoading: false});\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const { activeTeamID, children, headerH1, headerH2 } = this.props;\r\n        if(this.state.isLoading) {\r\n            return (\r\n                <StyledHeader className={`team${activeTeamID}`}>\r\n                    <LoadingCircle />\r\n                </StyledHeader>\r\n            )\r\n        } else{\r\n            return (\r\n            <StyledHeader className={`team${activeTeamID}`}>\r\n                <h1>{headerH1}</h1>\r\n                <h2>{headerH2}</h2>\r\n                    {children}\r\n            </StyledHeader>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Header;\r\n    ","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledCardContainer = styled.div`\r\n        position: relative;\r\n        width: 85%;\r\n        margin: 15px auto;\r\n        height: inherit;\r\n        display: inline-block;\r\n        text-align: center;\r\n        scroll-behavior: smooth;\r\n\r\n        @media (min-width: 600px) {\r\n        display: inline-block;\r\n        max-width: 1100px;\r\n        }\r\n`;\r\n\r\nconst StyledScheduleCardContainer = styled(StyledCardContainer)`\r\n        overflow: auto;\r\n        overflow-y: hidden;\r\n        white-space: nowrap;\r\n        display: flex;\r\n        position: relative;\r\n        height: auto;\r\n        padding: 20px 0px;\r\n        width: 95vw;\r\n        left: 0;\r\n        margin-top: 200px;\r\n        scroll-snap-type: x proximity;\r\n        @media (min-width: 600px) {\r\n            display: flex;\r\n            flex-direction: row;\r\n            max-width: 98vw;\r\n        }\r\n`;\r\n\r\nclass CardContainer extends React.Component {\r\n\r\n    render(){\r\n        const { containerType } = this.props;\r\n        window.scrollTo(0, 0);\r\n \r\n        if (containerType === \"division-container\") {\r\n            return (\r\n                <StyledCardContainer id={containerType}>\r\n                    {this.props.children}\r\n                </StyledCardContainer>\r\n            )\r\n        }\r\n\r\n        if (containerType === \"card_container_schedule_list\") {\r\n            return (\r\n                <StyledScheduleCardContainer onScroll={this.addCardScale} id={containerType}>\r\n                    {this.props.children}\r\n                </StyledScheduleCardContainer>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default CardContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//#region STYLES\r\nconst StyledLogoContainer = styled.div`\r\n    border-radius: 50%;\r\n    width: 80px;\r\n    height: 100%;\r\n    position: relative;\r\n    margin: auto;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    margin-left: 0;\r\n    position: ${ props=>props.cardType === \"teamCard\" ? \"absolute\" : \"relative\"};\r\n    left: ${ props=>props.cardType === \"teamCard\" ? \"20px\" : \"0px\"};\r\n    \r\n    @media screen and (min-width:600px){\r\n        position: relative;\r\n        height: auto;\r\n        left: auto;\r\n        margin: auto;\r\n        width: 125px;\r\n    }\r\n`;\r\n\r\nconst StyledLogo = styled.img`\r\n    margin: auto;\r\n    width: 100%;\r\n    position: relative;\r\n    height: auto;\r\n`;\r\n//#endregion STYLES\r\n\r\nconst Logo = (props) => {\r\n    const { cardType, teamValue } = props;\r\n    let currentLogo;\r\n\r\n        //Huge switch statement that determines the logo based on team value. Also added some logic to check for card type.\r\n        //If cardType===teamCard, some teams go to *light* version of logo.\r\n    switch(teamValue) {\r\n        case \"1\":\r\n            if(cardType === \"teamCard\"){\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-dark.svg\";\r\n                break;\r\n            }\r\n        case \"2\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-52-dark.svg\";\r\n            break;\r\n        case \"3\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-12-dark.svg\" ;\r\n            break;\r\n        case \"4\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-13-dark.svg\" ;\r\n            break;\r\n        case \"5\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-dark.svg\";\r\n                break;\r\n            }\r\n        case \"6\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-4-dark.svg\" ;\r\n            break;\r\n        case \"7\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-1-dark.svg\" ;\r\n            break;\r\n        case \"8\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-2-dark.svg\" ;\r\n            break;\r\n        case \"9\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-3-dark.svg\" ;\r\n            break;\r\n        case \"10\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-5-dark.svg\" ;\r\n            break;\r\n        case \"11\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-6-dark.svg\" ;\r\n            break;\r\n        case \"12\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-dark.svg\";\r\n                break;\r\n            }\r\n        case \"13\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-9-dark.svg\" ;\r\n            break;\r\n        case \"14\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-8-dark.svg\" ;\r\n            break;\r\n        case \"15\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-7-dark.svg\" ;\r\n            break;\r\n        case \"16\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-17-dark.svg\" ;\r\n            break;\r\n        case \"17\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-19-dark.svg\" ;\r\n            break;        \r\n        case \"18\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-18-dark.svg\" ;\r\n            break;       \r\n        case \"19\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-29-dark.svg\" ;\r\n            break;\r\n        case \"20\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-16-dark.svg\" ;\r\n            break;\r\n        case \"21\":\r\n            if (cardType === \"teamCard\") {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-light.svg\";\r\n                break;\r\n            } else {\r\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-dark.svg\" ;\r\n                break;\r\n            }\r\n        case \"22\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-21-dark.svg\" ;\r\n            break;        \r\n        case \"23\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-20-dark.svg\" ;\r\n            break;        \r\n        case \"24\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-22-dark.svg\" ;\r\n            break;        \r\n        case \"25\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-30-dark.svg\" ;\r\n            break;        \r\n        case \"26\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-28-dark.svg\" ;\r\n            break;        \r\n        case \"27\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-25-dark.svg\" ;\r\n            break;        \r\n        case \"28\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-26-dark.svg\" ;\r\n            break;        \r\n        case \"29\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-24-dark.svg\" ;\r\n            break;        \r\n        case \"30\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-53-dark.svg\" ;\r\n            break;        \r\n        case \"142\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/images/logos/teams-current-circle/54.svg\"\r\n            break;\r\n        default:\r\n            currentLogo = 'https://www-league.nhlstatic.com/images/logos/league-light/133.svg';\r\n            break;        \r\n    }\r\n\r\n    return(\r\n        <StyledLogoContainer cardType = {cardType}>\r\n            <StyledLogo src = {currentLogo}\r\n                alt = {`${props.TeamName} logo`}\r\n                />\r\n        </StyledLogoContainer>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport styled from 'styled-components' ;\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\n\r\nconst StyledH3 = styled.h3`\r\n    font-size: ${props => props.teamStatsLocation === \"header\" ? \"24px\" : \"16px\"};\r\n    padding-left: 20px;\r\n`;\r\n\r\nexport default class GetTeamStats extends React.Component{\r\n\r\n    constructor (props){\r\n        super(props);\r\n\r\n        //teamStats: Placeholder for data fetched from an API call\r\n        this.state = {\r\n            teamStats: '',\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    fetchTeamStats(){\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = this.props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                 };\r\n        fetch(url, init)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                this.setState({\r\n                    teamStats: resp,\r\n                    isLoading: false\r\n                });\r\n                });\r\n                return;\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.url !== prevProps.url){\r\n            this.fetchTeamStats();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\r\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because spoiler alert, the component didn't update.\r\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\r\n        this.fetchTeamStats();\r\n    }\r\n\r\n    render(){\r\n        const { isLoading, teamStats } = this.state;\r\n\r\n        if(this.props.ApiLink === \"teamStatsQuery\") {\r\n\r\n            if (isLoading){ \r\n                //Doesn't work as intended\r\n                return (\r\n                    <LoadingCircle />\r\n                ) \r\n            }\r\n            \r\n            else{\r\n                const teamWins = teamStats.teamStatsTotals[0].stats.standings.wins,\r\n                      teamLosses = teamStats.teamStatsTotals[0].stats.standings.losses,\r\n                      teamOvertimeLosses = teamStats.teamStatsTotals[0].stats.standings.overtimeLosses;\r\n                \r\n                    console.log(teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses);\r\n                    return (\r\n                       <StyledH3 teamStatsLocation={this.props.teamStatsLocation}>({teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses})</StyledH3>    \r\n                    )\r\n                }\r\n        }\r\n    }    \r\n}\r\n\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\nimport '../../../Utilities/league-colors.css';\r\nimport GetTeamStats from '../../../API/GetTeamStats';\r\n\r\n//#region STYLES\r\nconst StyledTeamCard = styled.div`\r\n        margin: 10px auto;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100px;\r\n        width: 100%;\r\n        transition: .25s ease-in-out;\r\n        background: #fff;\r\n        position: relative;\r\n        border-radius: 5px;\r\n        float: left;\r\n        overflow: hidden;\r\n        scroll-behavior: smooth;\r\n\r\n        :hover {\r\n            cursor: pointer;\r\n        }\r\n\r\n        & h2, h3, .logo-container{\r\n            position: relative;\r\n            margin: auto;\r\n            left: auto;\r\n            right: auto;\r\n        }\r\n\r\n        @media (min-width: 600px) {\r\n            width: 250px;\r\n            height: 350px;\r\n            margin: 10px;\r\n\r\n           :hover {\r\n                transform:translateY(-5px);\r\n                box-shadow: 2px 4px 6px rgba(0,0,0,.4);\r\n            }\r\n\r\n            & h2, h3{\r\n                padding-left: 0px;\r\n                margin-bottom: 0px;\r\n            }\r\n\r\n        }\r\n`;\r\n\r\nconst StyledCityName = styled.h2`\r\n            font-size: 18px;\r\n            padding-left:20px;\r\n\r\n`;\r\n\r\nconst StyledTeamName = styled.h3`\r\n    font-size: 28px;\r\n    padding-left: 20px;\r\n\r\n`;\r\n\r\n\r\n//#endregion STYLES\r\n\r\n\r\n\r\nconst TeamCard = (props) => {\r\n\r\n    const teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\r\n           recordQuery = teamStatsBaseURL + props.teamValue;\r\n\r\n    return (\r\n        <StyledTeamCard className={`card team-card team${props.teamValue}`} onClick={props.onClick} teamValue={props.teamValue} data-teamid={props.teamValue}>\r\n            <StyledCityName>{props.cityName}</StyledCityName>\r\n            <StyledTeamName>{props.teamName}</StyledTeamName>\r\n            <GetTeamStats teamStatsLocation=\"teamCard\" ApiLink=\"teamStatsQuery\" url={recordQuery}/>\r\n            <Logo cardType={\"teamCard\"} teamValue={props.teamValue} />\r\n        </StyledTeamCard>\r\n    )\r\n}\r\n\r\nexport default TeamCard;","\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\n\r\n//#region Styles\r\nconst StyledHomeTeam = styled.div`\r\n    opacity: ${props => props.didHomeWin === \"homeWin\" ? \"1\" : \".4\"};\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: auto;\r\n    width: 100%;\r\n    position: relative;\r\n    margin: auto;\r\n    padding: 30px 0;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n\r\nconst StyledTeamNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n//#endregion Styles\r\n\r\nconst HomeTeam = (props) => {\r\n    return (\r\n        <StyledHomeTeam didHomeWin={props.didHomeWin}>\r\n        <Logo teamValue={props.logoValue} />\r\n        <StyledTeamNameWrapper>\r\n            <h3>{props.teamCity}</h3>\r\n            <h2>{props.teamName}</h2>\r\n        </StyledTeamNameWrapper>\r\n            <h2 className=\"score home-score\">{props.homeTeamScore}</h2>\r\n        </StyledHomeTeam>\r\n    )\r\n}\r\n\r\nexport default HomeTeam;","\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport styled from 'styled-components';\r\n\r\n//#region Styles\r\nconst StyledAwayTeam = styled.div`\r\n    opacity: ${props => props.didHomeWin === \"homeWin\" ? \".4\" : \"1\"};\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: relative;\r\n    margin: auto;\r\n    width: 100%;\r\n    height:auto;\r\n    padding: 30px 0;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n\r\nconst StyledTeamNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & * {\r\n        margin: auto;\r\n    }\r\n`;\r\n//#endregion Styles\r\n\r\nconst AwayTeam = (props) => {\r\n    \r\n    return (\r\n        <StyledAwayTeam didHomeWin={props.didHomeWin}>\r\n            <h2 className=\"score away-score\">{props.awayTeamScore}</h2>\r\n            <StyledTeamNameWrapper>\r\n                <h2>{props.teamName}</h2>\r\n                <h3>{props.teamCity}</h3>\r\n            </StyledTeamNameWrapper>\r\n            <Logo teamValue={props.logoValue} />\r\n        </StyledAwayTeam>\r\n    )\r\n}\r\n\r\nexport default AwayTeam;","import React from 'react';\r\n\r\nimport HomeTeam from '../ScheduleCard/HomeTeam';\r\nimport AwayTeam from '../ScheduleCard/AwayTeam';\r\n\r\n\r\nconst Team = (props) => {\r\n    \r\n        //Variables that feed into Home team and Away team components\r\n        let teamName,\r\n            teamCity,\r\n            teamValue,\r\n            logoValue;\r\n\r\n        const { awayTeamID, awayTeamScore, didHomeWin, homeTeamID, homeTeamScore, isHomeTeam } = props;\r\n\r\n        //Gets props.isHomeTeam from Card.js\r\n        if(isHomeTeam){\r\n            teamValue = homeTeamID;\r\n            logoValue = teamValue.toString();\r\n\r\n        } else {\r\n            teamValue = awayTeamID;\r\n            logoValue = teamValue.toString();\r\n        }\r\n        \r\n        //Assign teamName and TeamCity data based on teamID\r\n        switch (teamValue) {\r\n            case 1:\r\n                teamName = 'Lightning';\r\n                teamCity = 'Tampa Bay';\r\n            break;\r\n            case 2:\r\n                teamName = 'Jets';\r\n                teamCity = 'Winnipeg';\r\n            break;\r\n            case 3:\r\n                teamName = 'Hurricanes';\r\n                teamCity = 'Carolina';\r\n            break;\r\n            case 4:\r\n                teamName = 'Panthers';\r\n                teamCity = 'Florida';\r\n           break;\r\n            case 5:\r\n                teamName = 'Capitals';\r\n                teamCity = 'Washington';\r\n           break;\r\n            case 6:\r\n                teamName = 'Flyers';\r\n                teamCity = 'Philadelphia';\r\n           break;\r\n            case 7:\r\n                teamName = 'Devils';\r\n                teamCity = 'New Jersey';\r\n           break;\r\n            case 8:\r\n                teamName = 'Islanders';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 9:\r\n                teamName = 'Rangers';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 10:\r\n                teamName = 'Penguins';\r\n                teamCity = 'Pittsburgh';\r\n           break;\r\n            case 11:\r\n                teamName = 'Bruins';\r\n                teamCity = 'Boston';\r\n           break;\r\n            case 12:\r\n                teamName = 'Maple Leafs';\r\n                teamCity = 'Toronto';\r\n           break;\r\n            case 13:\r\n                teamName = 'Senators';\r\n                teamCity = 'Ottawa';\r\n           break;\r\n            case 14:\r\n                teamName = 'Canadians';\r\n                teamCity = 'Montreal';\r\n           break;\r\n            case 15:\r\n                teamName = 'Sabres';\r\n                teamCity = 'Buffalo';\r\n           break;\r\n            case 16:\r\n                teamName = 'Red Wings';\r\n                teamCity = 'Detroit';\r\n           break;\r\n            case 17:\r\n                teamName = 'Blues';\r\n                teamCity = 'St. Louis';\r\n           break;\r\n            case 18:\r\n                teamName = 'Predators';\r\n                teamCity = 'Nasheville';\r\n           break;\r\n            case 19:\r\n                teamName = 'Blue Jackets';\r\n                teamCity = 'Columbus';\r\n           break;\r\n            case 20:\r\n                teamName = 'Blackhawks';\r\n                teamCity = 'Chicago';\r\n           break;\r\n            case 21:\r\n                teamName = 'Canucks';\r\n                teamCity = 'Vancouver';\r\n           break;\r\n            case 22:\r\n                teamName = 'Avalanche';\r\n                teamCity = 'Colorado';\r\n           break;\r\n            case 23:\r\n                teamName = 'Flames';\r\n                teamCity = 'Calgary';\r\n           break;\r\n            case 24:\r\n                teamName = 'Oilers';\r\n                teamCity = 'Edmonton';\r\n           break;\r\n            case 25:\r\n                teamName = 'Wild';\r\n                teamCity = 'Minnesota';\r\n           break;\r\n            case 26:\r\n                teamName = 'Sharks';\r\n                teamCity = 'San Jose';\r\n           break;\r\n            case 27:\r\n                teamName = 'Stars';\r\n                teamCity = 'Dallas';\r\n           break;\r\n            case 28:\r\n                teamName = 'Kings';\r\n                teamCity = 'Los Angeles';\r\n           break;\r\n            case 29:\r\n                teamName = 'Ducks';\r\n                teamCity = 'Anaheim';\r\n           break;\r\n            case 30:\r\n                teamName = 'Coyotes';\r\n                teamCity = 'Arizona';\r\n           break;\r\n            case 142:\r\n                teamName = 'Golden Knights';\r\n                teamCity = 'Los Vegas';\r\n           break;\r\n          default:\r\n            console.log('error converting data');\r\n        }\r\n\r\n        if(isHomeTeam){\r\n\r\n            return(\r\n                <HomeTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={didHomeWin}\r\n                    homeTeamScore={homeTeamScore}\r\n                    logoValue={logoValue}\r\n                />\r\n            )\r\n\r\n    } else {\r\n\r\n            return(\r\n                <AwayTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={didHomeWin}\r\n                    awayTeamScore={awayTeamScore}\r\n                    logoValue={logoValue}\r\n                />\r\n            )\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n export default Team;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledGameDateContainer = styled.div`\r\n    position: absolute;\r\n    top:0;\r\n    width: 100%;\r\n    left:0;\r\n    right:0;\r\n    margin:auto;\r\n    background-color: #222;\r\n    color: #fff;\r\n    height: 1.2em;\r\n    padding-top: 5px;\r\n    display: flex;\r\n`;\r\n\r\nconst StyledGameDate = styled.p`\r\n    margin: auto;\r\n`;\r\n\r\n\r\nconst GameDateContainer = (props) => {\r\n\r\n        //Gets date from API response and converts it to a readable format for the Card\r\n        //Needs to get split off into its own component\r\n        let jsonDate = new Date(props.gameDateTime),\r\n            weekday = new Array(7);\r\n                weekday[0] = \"Sunday\";\r\n                weekday[1] = \"Monday\";\r\n                weekday[2] = \"Tuesday\";\r\n                weekday[3] = \"Wednesday\";\r\n                weekday[4] = \"Thursday\";\r\n                weekday[5] = \"Friday\";\r\n                weekday[6] = \"Saturday\";\r\n\r\n        let formattedGameDate = weekday[jsonDate.getDay()] + ', ' + jsonDate.toLocaleDateString() + ' at ' + jsonDate.toLocaleTimeString();\r\n\r\n  return (\r\n        <StyledGameDateContainer gameDateTime={props.gameDateTime} className={`team${props.activeTeamID}`}>\r\n            <StyledGameDate> {formattedGameDate}</StyledGameDate>\r\n        </StyledGameDateContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default GameDateContainer;\r\n\r\n","import React from 'react';\r\nimport Team from '../TeamCard/Team';\r\nimport GameDateContainer from './GameDateContainer';\r\nimport styled from 'styled-components';\r\n\r\n//#region STYLES\r\nconst StyledScheduleCard = styled.div`\r\n    margin: auto 10px;\r\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\r\n    height: 300px;\r\n    width: 100%;\r\n    min-width: 350px;\r\n    transition: .25s ease-in-out;\r\n    background-color: ${props => props.isPast === \"past\" ? \"lightgray\" : \"#fff\"};\r\n    position: relative;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    scroll-behavior: smooth;\r\n    scroll-snap-align: center;\r\n    opacity: ${props => props.isPast === \"past\" ? \".6\" : \"1\"};\r\n\r\n    @media (min-width: 600px) {\r\n        width: 350px;\r\n        height: 450px;\r\n        margin: auto 20px;\r\n\r\n            :hover{\r\n                box-shadow: 0 2px 6px rgba(0,0,0,0.2), 0 2px 4px rgba(0,0,0,0.4);\r\n                transform: translateY(-5px);\r\n            }\r\n    }\r\n`;\r\n\r\nconst StyledGameScore = styled.div`\r\n    position: absolute;\r\n    top: 15px;\r\n    height: calc(100% - 15px);\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & *{\r\n        margin: auto;\r\n    }\r\n\r\n    & p{\r\n        font-weight: 600;\r\n    }\r\n`\r\n\r\n//#endregion STYLES\r\n\r\n\r\n\r\nclass ScheduleCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isGamePast: true,\r\n        };\r\n    }\r\n\r\n    dateCheck () {\r\n        const { gameDateTime } = this.props;\r\n\r\n        let currentDate = new Date(),\r\n            currentGameDate = new Date(gameDateTime);\r\n\r\n        if (currentDate < currentGameDate) {\r\n            this.setState({\r\n                isGamePast: false,\r\n            })\r\n    }\r\n}\r\n\r\n    addCardScale() {\r\n        let cardsList = document.getElementsByClassName(\"schedule-card\"),\r\n            viewCenterPoint = window.outerWidth / 2,\r\n            scaleValue,\r\n            i = 0;\r\n\r\n        for (i; i < cardsList.length; i++) {\r\n            let cardScrollPoint = cardsList[i].offsetLeft,\r\n                cardsListContainer = cardsList[i].parentElement.scrollLeft + 300;\r\n\r\n                if(cardsList[i].scrollLeft )\r\n                scaleValue = (((cardsListContainer - cardScrollPoint) / viewCenterPoint) * 1.2);\r\n\r\n            cardsList[i].style.transform = \"scale(\" + scaleValue + \")\";\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dateCheck();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {activeTeamID, awayTeamID, awayTeamScore, gameDateTime, homeTeamID, homeTeamScore, teamCity, teamName} = this.props,\r\n                pastOrFuture= this.state.isGamePast ? \"past\" : \"future\";\r\n\r\n        let currentGameDate = new Date(gameDateTime),\r\n            month = currentGameDate.getMonth(),\r\n            didHomeWin;\r\n\r\n        if (homeTeamScore > awayTeamScore){\r\n            didHomeWin = \"homeWin\";\r\n        } else {\r\n            didHomeWin = \"homeLose\"; \r\n        }\r\n\r\n        return (\r\n\r\n            <StyledScheduleCard data-month={month} data-pastfuture={pastOrFuture} cardType={\"scheduleCard\"} isPast={this.state.isGamePast ? 'past' : 'future'}>\r\n                <GameDateContainer\r\n                    gameDateTime={currentGameDate}\r\n                    activeTeamID={activeTeamID}\r\n                />\r\n                <StyledGameScore>\r\n                    <Team\r\n                        didHomeWin={didHomeWin}\r\n                        awayTeamID={awayTeamID}\r\n                        teamName={teamName}\r\n                        teamCity={teamCity}\r\n                        awayTeamScore={awayTeamScore}\r\n                    />\r\n                    <p>At</p>\r\n                    <Team\r\n                        isHomeTeam={true}\r\n                        didHomeWin={didHomeWin}\r\n                        homeTeamID={homeTeamID}\r\n                        teamName={teamName}\r\n                        teamCity={teamCity}\r\n                        homeTeamScore={homeTeamScore}\r\n                    />\r\n                </StyledGameScore>\r\n            </StyledScheduleCard>\r\n        )\r\n\r\n    };\r\n}\r\n\r\nexport default ScheduleCard;\r\n\r\n","import React from 'react';\r\nimport TeamCard from './TeamCard/TeamCard';\r\nimport ScheduleCard from './ScheduleCard/ScheduleCard';\r\n\r\nclass Card extends React.Component{\r\n\r\nrender() {\r\n\r\n    const { activeTeamID, awayTeamCity, awayTeamID, awayTeamName, awayTeamScore, cardType, cityName, gameDateTime, handleClick, homeTeamCity, homeTeamID, homeTeamName, homeTeamScore, onClick, month, teamName, teamValue } = this.props;\r\n     \r\n        //Team Cards\r\n        if(cardType === \"teamCard\") {\r\n            return (\r\n                <TeamCard\r\n                    cityName={cityName}\r\n                    teamName={teamName}\r\n                    onClick={onClick}\r\n                    teamValue={teamValue}\r\n                />\r\n                );\r\n            }\r\n\r\n        //Schedule Cards\r\n        if(cardType === \"scheduleCard\") {\r\n            return(\r\n                <ScheduleCard\r\n                    gameDateTime={gameDateTime}\r\n                    awayTeamID={awayTeamID}\r\n                    awayTeamName={awayTeamName}\r\n                    awayTeamCity={awayTeamCity}\r\n                    awayTeamScore={awayTeamScore}\r\n                    homeTeamID={homeTeamID}\r\n                    homeTeamName={homeTeamName}\r\n                    homeTeamCity={homeTeamCity}\r\n                    homeTeamScore={homeTeamScore}\r\n                    onClick={handleClick}\r\n                    activeTeamID={activeTeamID}\r\n                    month={month}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n    \r\nexport default Card;","import React from 'react';\r\n\r\nconst Reload = () => {\r\n  return (\r\n    <button className=\"fade-in reload-button\" onClick={ window.location.reload() }>Try again?</button>\r\n  )\r\n}\r\n\r\nexport default Reload;\r\n","import React from 'react';\r\nimport Reload from '../Components/Buttons/Reload'\r\n\r\n\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n        return(\r\n            <div className=\"error-container\">\r\n                <h2>Sorry about that...</h2>\r\n                <p>Looks like an error occurred.</p>\r\n                <br/>\r\n                <Reload />\r\n            </div>\r\n        )\r\n    }\r\n    \r\nexport default Error;","import React from 'react';\r\nimport CardContainer from '../Components/Containers/CardContainer';\r\nimport Card from '../Components/Cards/Card';\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\nimport Error from '../Utilities/Error';\r\n\r\nexport default class ApiCall extends React.Component {\r\n\r\n    //schedule: placeholder for data recieved from fetch request\r\n    //isLoaded: boolean for loading animation\r\n    //error: if something doesn't go right, load Error component\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schedule: '',\r\n            isLoaded: false,\r\n            error: false\r\n        };\r\n    }\r\n\r\n    fetchSchedule() {\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = this.props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                };\r\n        fetch(url, init)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    schedule: data\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log('API call failed with error ', error);\r\n                this.setState({\r\n                    error: true,\r\n                });\r\n            }\r\n        )\r\n        return;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        //If the component updates and the url prop is changed, make fetch request with updated URL\r\n        if (this.props.url !== prevProps.url) {\r\n            this.fetchSchedule();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\r\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because the component didn't update.\r\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\r\n        this.fetchSchedule();\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, schedule } = this.state;\r\n        \r\n        //Handle failed API Call\r\n        if (error) { return <Error /> }\r\n\r\n        //Is API call \r\n        if (this.props.ApiLink === \"gameScheduleQuery\") {\r\n\r\n            //Loading Animation\r\n            if (!isLoaded) { return <LoadingCircle /> }\r\n\r\n            //Map JSON Data to Card component\r\n            else {\r\n                const   gameCard = schedule.games.map((game) =>\r\n\r\n                            <Card key={game.schedule.id}\r\n                                cardType=\"scheduleCard\"\r\n                                awayTeamName={this.props.awayTeamName}\r\n                                awayTeamCity={this.props.awayTeamCity}\r\n                                awayTeamID={game.schedule.awayTeam.id}\r\n                                awayTeamScore={game.score.awayScoreTotal}\r\n                                homeTeamName={this.props.homeTeamName}\r\n                                homeTeamCity={this.props.homeTeamCity}\r\n                                homeTeamID={game.schedule.homeTeam.id}\r\n                                homeTeamScore={game.score.homeScoreTotal}\r\n                                gameDateTime={game.schedule.startTime}\r\n                                gameID={game.schedule.id}\r\n                                onClick={this.handleClick}\r\n                                activeTeamID={this.props.activeTeamID}\r\n                                activeTeamName={this.props.activeTeamName}\r\n                            />\r\n\r\n                    );\r\n                //Return Schedule Card container with mapped Schedule Cards\r\n                return (\r\n                    <CardContainer containerType=\"card_container_schedule_list\">\r\n                        {gameCard}\r\n                    </CardContainer>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDivisionContainer = styled.section`\r\n    width:100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    padding-bottom: 25px;\r\n    position: relative;\r\n\r\n    @media (min-width: 600px) {\r\n        display: inline-block;\r\n    }\r\n\r\n`;\r\n\r\nconst StyledDivisionName = styled.h2`\r\n    text-align: left;\r\n    width: 100%;\r\n`\r\n\r\nconst DivisionContainer = (props) => {\r\n    window.scrollTo(0,0);\r\n    \r\n    return(\r\n        <StyledDivisionContainer>\r\n            <StyledDivisionName>{ props.divisionTitle }</StyledDivisionName>\r\n            {props.children}\r\n        </StyledDivisionContainer>\r\n    )\r\n    \r\n}\r\n\r\nexport default DivisionContainer;","import React from 'react';\r\n\r\nimport CardContainer from '../../Containers/CardContainer';\r\nimport DivisionContainer from '../../Containers/DivisionContainer';\r\nimport Card from '../../Cards/Card';\r\n\r\n\r\nconst TeamList = (props) => {\r\n\r\n        return (\r\n\r\n            <CardContainer containerType=\"division-container\">\r\n                <DivisionContainer divisionTitle=\"Atlantic\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Boston\"\r\n                        teamName=\"Bruins\"\r\n                        teamValue=\"11\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Buffalo\"\r\n                        teamName=\"Sabres\"\r\n                        teamValue=\"15\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Detroit\"\r\n                        teamName=\"Red Wings\"\r\n                        teamValue=\"16\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Florida\"\r\n                        teamName=\"Panthers\"\r\n                        teamValue=\"4\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Montreal\"\r\n                        teamName=\"Canadians\"\r\n                        teamValue=\"14\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Ottawa\"\r\n                        teamName=\"Senators\"\r\n                        teamValue=\"13\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Tampa Bay\"\r\n                        teamName=\"Lightning\"\r\n                        teamValue=\"1\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Toronto\"\r\n                        teamName=\"Maple Leafs\"\r\n                        teamValue=\"12\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Metropolitan\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Carolina\"\r\n                        teamName=\"Hurricanes\"\r\n                        teamValue=\"3\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Columbus\"\r\n                        teamName=\"Blue Jackets\"\r\n                        teamValue=\"19\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New Jersey\"\r\n                        teamName=\"Devils\"\r\n                        teamValue=\"7\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Islanders\"\r\n                        teamValue=\"8\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Rangers\"\r\n                        teamValue=\"9\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Philadelphia\"\r\n                        teamName=\"Flyers\"\r\n                        teamValue=\"6\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Pittsburgh\"\r\n                        teamName=\"Penguins\"\r\n                        teamValue=\"10\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Washington\"\r\n                        teamName=\"Capitals\"\r\n                        teamValue=\"5\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Central\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Chicago\"\r\n                        teamName=\"Black Hawks\"\r\n                        teamValue=\"20\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Colorado\"\r\n                        teamName=\"Avalanche\"\r\n                        teamValue=\"22\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Dallas\"\r\n                        teamName=\"Stars\"\r\n                        teamValue=\"27\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Minnesota\"\r\n                        teamName=\"Wild\"\r\n                        teamValue=\"25\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Nashville\"\r\n                        teamName=\"Predators\"\r\n                        teamValue=\"18\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"St. Louis\"\r\n                        teamName=\"Blues\"\r\n                        teamValue=\"17\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Winnipeg\"\r\n                        teamName=\"Jets\"\r\n                        teamValue=\"2\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Pacific\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Anaheim\"\r\n                        teamName=\"Ducks\"\r\n                        teamValue=\"29\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Arizona\"\r\n                        teamName=\"Coyotes\"\r\n                        teamValue=\"30\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Calgary\"\r\n                        teamName=\"Flames\"\r\n                        teamValue=\"23\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Edmonton\"\r\n                        teamName=\"Oilers\"\r\n                        teamValue=\"24\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Los Angeles\"\r\n                        teamName=\"Kings\"\r\n                        teamValue=\"28\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"San Jose\"\r\n                        teamName=\"Sharks\"\r\n                        teamValue=\"26\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Vancouver\"\r\n                        teamName=\"Canucks\"\r\n                        teamValue=\"21\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Las Vegas\"\r\n                        teamName=\"Golden Knights\"\r\n                        teamValue=\"142\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n            </CardContainer>\r\n\r\n        )\r\n    }\r\nexport default TeamList","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport '../../Utilities/league-colors.css';\r\n\r\n//#region STYLES\r\nconst StyledFab = styled.button`\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  box-shadow: 2px 2px 6px rgba(0,0,0,.4);\r\n  transition: .5s ease-in-out;\r\n  border: 2px solid rgba(255,255,255,.5);\r\n  position: fixed;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  height: 75px;\r\n  width: 75px;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\nconst StyledHamburger = styled.div`\r\n    width: 30px;\r\n    height: 2px;\r\n    margin: auto;\r\n    margin-top:-11px;\r\n    background-color: currentColor;\r\n    transition: .25s ease-in-out;\r\n\r\n    ::before, ::after{\r\n      content:'';\r\n      width: 30px;\r\n      height: 2px;\r\n      background-color: inherit;\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      margin: auto;\r\n      transition: .2s ease-in-out;\r\n    }\r\n\r\n    ::before{\r\n      top: 15px;\r\n    }\r\n\r\n    ::after{\r\n      bottom: 35px;\r\n    }\r\n`;\r\n\r\nconst StyledActiveHamburger = styled(StyledHamburger)`\r\n  transform: rotate(90deg);\r\n\r\n  ::after{\r\n    display: none;\r\n  }\r\n`;\r\nconst StyledFabH2 = styled.h2`\r\n    margin: auto;\r\n    margin-right: ${props => props.isFabActive ? \"75px\" : \"auto\"};\r\n    padding: 0px 10px;\r\n    color: currentColor;\r\n    position: absolute;\r\n    width: ${props => props.isFabActive ? \"200px\" : \"auto\"};\r\n    right: 0;\r\n    left: 0;\r\n    bottom: ${props => props.isFabActive ? \"25px\" : \"10px\"};\r\n    text-align: ${props => props.isFabActive ? \"right\" : \"center\"};\r\n`;\r\n\r\nconst ActiveFabWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0,0,0,.4);\r\n    z-index: 9999;\r\n`;\r\n\r\nconst ActiveFabOne = styled(StyledFab)`\r\n\r\n`;\r\n\r\nconst FabSlideUp = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(125px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`\r\n\r\nconst ActiveFabTwo = styled(StyledFab)`\r\n    animation: ${FabSlideUp} .45s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\r\n    bottom: 115px;\r\n`\r\n\r\nconst ActiveFabThree = styled(StyledFab)`\r\n    animation: ${FabSlideUp} .6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\r\n    bottom: 215px;\r\n`\r\n//#endregion STYLES\r\n\r\n\r\nclass Fab extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        isFabActive: false,\r\n        isFabHidden: true,\r\n        CurrentFabText: \"Menu\",\r\n      };\r\n    }\r\n\r\n  handleMenuClick = () => {\r\n    this.setState({\r\n      isFabActive: !this.state.isFabActive,\r\n      CurrentFabText: this.state.CurrentFabText === \"Close\" ? \"Menu\" : \"Close\",\r\n    })\r\n  }\r\n\r\n  Handle\r\n\r\n  scrollToNextGame = () => {\r\n      document.querySelector('[data-pastfuture=\"future\"]').scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n      this.handleMenuClick();\r\n  }\r\n\r\n  render(){\r\n    const { activeTeamID } = this.props,\r\n          { isFabActive, isFabHidden, CurrentFabText } = this.state;\r\n\r\n          if(isFabActive) {\r\n            return (\r\n              <ActiveFabWrapper>\r\n                <ActiveFabThree className={`team${activeTeamID}`} onClick={this.scrollToNextGame}>\r\n                  <StyledFabH2 isFabActive={isFabActive}>Next Game</StyledFabH2>\r\n                </ActiveFabThree>\r\n\r\n                <ActiveFabTwo className={`team${activeTeamID}`} onClick={this.props.handleClick}>\r\n                  <StyledFabH2 isFabActive={isFabActive}>Teams</StyledFabH2>\r\n                </ActiveFabTwo>\r\n\r\n                <ActiveFabOne className={`team${activeTeamID}`} isActive=\"true\" onClick={this.handleMenuClick}>\r\n                  <StyledFabH2 isFabActive={isFabActive}>Close</StyledFabH2>\r\n                </ActiveFabOne>\r\n              </ActiveFabWrapper>\r\n            );\r\n          }\r\n\r\n    return (\r\n      <div>\r\n        <StyledFab className={`team${activeTeamID}`} onClick={this.handleMenuClick} isFabHidden={isFabHidden}>\r\n          <StyledHamburger></StyledHamburger>\r\n          <StyledFabH2>{CurrentFabText}</StyledFabH2>\r\n        </StyledFab>\r\n      </div>\r\n    );\r\n\r\n  }\r\n};\r\n\r\nexport default Fab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledMonthContainer = styled.div`\r\n    height: 50px;\r\n    border-bottom: 2px solid #000;\r\n    width: 200px;\r\n    margin-left: 20px;\r\n    top: 180px;\r\n    position: fixed;\r\n    padding-bottom: 10px;\r\n\r\n    & h2{\r\n        text-align: left;\r\n        padding-left: 10px;\r\n        transition: .3s ease-in-out;\r\n        opacity: ${props => props.visible ? \"1\" : \"0\"};\r\n        transform: ${props => props.visible ? \"\" : \"translateY(15px)\"};\r\n        padding-bottom: 10px;\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n        margin-left: 45px;\r\n    }\r\n`;\r\n\r\nclass MonthContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: 'October',\r\n            isVisible: true\r\n        }\r\n    }\r\n\r\n    updateH2 = () => {\r\n         const SCHEDULE_LIST = document.getElementById(\"card_container_schedule_list\"),\r\n               MONTHS = {\r\n                January:  document.querySelectorAll(\"[data-month='0']\")[0].offsetLeft,\r\n                February: document.querySelectorAll(\"[data-month='1']\")[0].offsetLeft,\r\n                March:    document.querySelectorAll(\"[data-month='2']\")[0].offsetLeft,\r\n                April:    document.querySelectorAll(\"[data-month='3']\")[0].offsetLeft,\r\n                October:  document.querySelectorAll(\"[data-month='9']\")[0].offsetLeft,\r\n                November: document.querySelectorAll(\"[data-month='10']\")[0].offsetLeft,\r\n                December: document.querySelectorAll(\"[data-month='11']\")[0].offsetLeft\r\n        };\r\n\r\n        const setMonthState = (month) => {\r\n            this.setState({\r\n                isVisible: false\r\n            });\r\n\r\n           setTimeout(()=>{\r\n               this.setState({\r\n                   currentMonth: month,\r\n                   isVisible: true\r\n               })\r\n            }, 600);\r\n\r\n        };\r\n        \r\n            SCHEDULE_LIST.addEventListener(\"scroll\", () => {\r\n\r\n                const {currentMonth} = this.state;\r\n                let scheduleListCheckPoint = SCHEDULE_LIST.scrollLeft + 300;                \r\n\r\n            //If the distance between the first card of month X to the left side of card_container_schedule_list is \r\n            //less than or equal to the distance the card_container_schedule_list has been scrolled (plus the size of one card)\r\n            //set state of current month to month X.\r\n\r\n            switch(true){\r\n                case scheduleListCheckPoint > 0 && scheduleListCheckPoint < MONTHS.November:\r\n                    if (currentMonth === \"October\") { break; }\r\n                        setMonthState(\"October\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.October && scheduleListCheckPoint < MONTHS.December:\r\n                    if (currentMonth === \"November\") { break; }\r\n                        setMonthState(\"November\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.November && scheduleListCheckPoint < MONTHS.January:\r\n                    if (currentMonth === \"December\") { break; } \r\n                        setMonthState(\"December\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.December && scheduleListCheckPoint < MONTHS.February:\r\n                    if (currentMonth === \"January\") { break; }\r\n                        setMonthState(\"January\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.January && scheduleListCheckPoint < MONTHS.March:\r\n                    if (currentMonth === \"February\") { break; }\r\n                        setMonthState(\"February\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.February && scheduleListCheckPoint < MONTHS.April:\r\n                    if (currentMonth === \"March\") { break; }\r\n                        setMonthState(\"March\");\r\n                        break;\r\n                case scheduleListCheckPoint > MONTHS.March:\r\n                    if (currentMonth === \"April\") { break; }\r\n                        setMonthState(\"April\");\r\n                        break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //I need to figure out why #card_container_schedule_list returns null if I don't use setTimeout. \r\n        //Until then, setTimeout works around that\r\n        setTimeout(() => {\r\n            this.updateH2();\r\n            this.setState({\r\n                isVisible: true\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    render() {\r\n        const {currentMonth, isVisible} = this.state;\r\n\r\n        return (\r\n            <StyledMonthContainer visible={isVisible}>\r\n               <h2> { currentMonth } </h2>\r\n            </StyledMonthContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonthContainer;","import React from 'react';\r\nimport Header from '../Components/Header/Header';\r\nimport ApiCall from '../API/ApiCall';\r\nimport GetTeamStats from '../API/GetTeamStats';\r\nimport TeamList from '../Components/Cards/TeamCard/TeamList';\r\nimport Fab from '../Components/Buttons/Fab';\r\nimport MonthContainer from '../Components/Containers/MonthContainer';\r\nimport styled from 'styled-components';\r\nimport '../Utilities/league-colors.css';\r\n\r\n//#region STYLES\r\nconst StyledWrapper = styled.main `\r\n        position: relative;\r\n        margin-top: 175px;\r\n`\r\n\r\n//#endregion STYLES\r\n\r\nclass Schedule extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            scheduleQueryRecipe: '',\r\n            teamStatsQueryRecipe: '',\r\n            isFabActive: false,\r\n            isTeamListActive: true,\r\n            isScheduleListActive: false,\r\n            activeTeamID: '',\r\n            headerH1: 'Face Off',\r\n            headerH2: 'Quick access to NHL Schedule, Stats, and more',\r\n        };\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        //Properly handles clicks to nested elements. Deep down in my heart I know this isn't right.\r\n        let targetTeam = e.target.closest(\".card\"),\r\n            targetTeamValue = targetTeam.dataset.teamid,\r\n\r\n            //Gets chosen card, then derives teamName and teamCity from its inner HTML\r\n            currentTeamName = targetTeam.firstChild.innerHTML,\r\n            currentTeamCity =  targetTeam.firstChild.nextElementSibling.innerHTML,\r\n            scheduleBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\r\n            divisionContainer = document.getElementById(\"division-container\");\r\n            //Transitions TeamCards Out\r\n            divisionContainer.classList.remove(\"fade-in\");\r\n            divisionContainer.classList.add(\"fade-out\");\r\n\r\n            if(!currentTeamName){ return }\r\n        this.setState(() => {\r\n           return {\r\n                scheduleQueryRecipe: scheduleBaseURL + targetTeamValue,\r\n                teamStatsQueryRecipe: teamStatsBaseURL + targetTeamValue,\r\n                isFabActive: true,\r\n                isTeamListActive: false,\r\n                isScheduleListActive:true,\r\n                activeTeamID: targetTeamValue,\r\n                headerH1: currentTeamName,\r\n                headerH2: currentTeamCity,\r\n                headerH3: this.props.currentTeamRecord,\r\n           };\r\n        });\r\n    };\r\n    \r\n    resetAPICall = () => {\r\n        let scheduleQueryBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team='\r\n        \r\n\r\n        this.setState(()=>{\r\n            return{\r\n                scheduleQueryRecipe: scheduleQueryBaseURL,\r\n                teamStatsBaseURL: teamStatsBaseURL,\r\n                isFabActive: false,\r\n                isScheduleListActive: false,\r\n                isTeamListActive: true,\r\n                headerH1: 'Face Off',\r\n                headerH2: 'Quick access to NHL Schedule, Stats, and more',\r\n            };\r\n        }, window.scrollTo(0,0));\r\n    };\r\n\r\n    render(){\r\n\r\n        const {activeTeamID, headerH1, headerH2, isFabActive, isScheduleListActive, isTeamListActive, scheduleQueryRecipe, teamStatsQueryRecipe} = this.state;\r\n\r\n        if(isScheduleListActive){\r\n            //Good to have reference to the API link...\r\n            console.log(\"The current TeamStatsQueryRecipe is \" + teamStatsQueryRecipe);\r\n            console.log(\"The current scheduleQueryRecipe is \" + scheduleQueryRecipe);\r\n\r\n                return (\r\n                    <div>\r\n                        <Header activeTeamID={activeTeamID} headerH1={headerH1} headerH2={headerH2}> \r\n                            <GetTeamStats teamStatsLocation=\"header\" ApiLink=\"teamStatsQuery\" url={teamStatsQueryRecipe} />\r\n                        </Header>\r\n                        \r\n                        <div className=\"wrapper wrapper__home\">\r\n                            <h2 className=\"page__title page__title_schedule\">Choose a Game</h2>\r\n                            \r\n                            <MonthContainer/>\r\n                            <ApiCall activeTeamID={activeTeamID} ApiLink=\"gameScheduleQuery\" url={scheduleQueryRecipe}/>\r\n                                <Fab activeTeamID={activeTeamID} visible={isFabActive} handleClick={this.resetAPICall}/>\r\n                        </div>\r\n                    </div>\r\n        \r\n                )\r\n        }\r\n\r\n        if(isTeamListActive){\r\n\r\n            return (\r\n                <div>\r\n                    <Header headerH1 = {headerH1} headerH2 = {headerH2} />\r\n                    <StyledWrapper>\r\n                        <TeamList handleClick={this.handleClick} teamValue={this.targetTeamValue} />\r\n                    </StyledWrapper>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Schedule;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"../node_modules/react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Schedule from './Pages/Schedule';\r\n\r\nconst StyledApp = styled.div`\r\n    text-align: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App = () => {\r\n  const baseUrl = process.env.PUBLIC_URL;\r\n\r\n  return (\r\n    <Router>\r\n      <StyledApp>\r\n        <Route path={baseUrl + \"/\"} component={Schedule} />\r\n      </StyledApp>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}