{"version":3,"sources":["Components/Loading/LoadingCircle.js","Components/Header/Header.js","Components/Containers/CardContainer.js","Components/Logo/Logo.js","API/GetTeamStats.js","Components/Cards/TeamCard/TeamCard.js","Components/Cards/ScheduleCard/HomeTeam.js","Components/Cards/ScheduleCard/AwayTeam.js","Components/Cards/TeamCard/Team.js","Components/Cards/ScheduleCard/GameDateContainer.js","Components/Cards/ScheduleCard/ScheduleCard.js","Components/Cards/Card.js","Components/Buttons/Reload.js","Utilities/Error.js","API/ApiCall.js","Components/Containers/DivisionContainer.js","Components/Cards/TeamCard/TeamList.js","Components/Buttons/Fab.js","Components/Containers/MonthContainer.js","Pages/Schedule.js","App.js","registerServiceWorker.js","index.js"],"names":["spin","keyframes","_templateObject","StyledLoadingCircle","styled","div","_templateObject2","LoadingCircle","react_default","a","createElement","StyledHeader","header","Header_templateObject","props","headerStyle","activeTeamID","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","setState","_this$props","children","headerH1","headerH2","className","concat","Loading_LoadingCircle","React","Component","StyledCardContainer","CardContainer_templateObject","StyledScheduleCardContainer","CardContainer_templateObject2","CardContainer","containerType","window","scrollTo","id","onScroll","addCardScale","StyledLogoContainer","Logo_templateObject","cardType","StyledLogo","img","Logo_templateObject2","Logo","currentLogo","teamValue","src","alt","TeamName","StyledH3","h3","GetTeamStats_templateObject","teamStatsLocation","GetTeamStats","teamStats","_this2","url","init","type","dataType","async","headers","Authorization","btoa","username","fetch","then","resp","json","prevProps","fetchTeamStats","_this$state","ApiLink","teamWins","teamStatsTotals","stats","standings","wins","teamLosses","losses","teamOvertimeLosses","overtimeLosses","console","log","StyledTeamCard","TeamCard_templateObject","StyledCityName","h2","TeamCard_templateObject2","StyledTeamName","_templateObject3","TeamCard","recordQuery","onClick","data-teamid","cityName","teamName","GetTeamStats_GetTeamStats","Components_Logo_Logo","StyledHomeTeam","HomeTeam_templateObject","didHomeWin","StyledTeamNameWrapper","HomeTeam_templateObject2","HomeTeam","logoValue","teamCity","homeTeamScore","StyledAwayTeam","AwayTeam_templateObject","AwayTeam_templateObject2","AwayTeam","awayTeamScore","AwayTeam_StyledTeamNameWrapper","Team","awayTeamID","homeTeamID","isHomeTeam","toString","ScheduleCard_HomeTeam","ScheduleCard_AwayTeam","StyledGameDateContainer","GameDateContainer_templateObject","StyledGameDate","p","GameDateContainer_templateObject2","GameDateContainer","jsonDate","Date","gameDateTime","weekday","Array","formattedGameDate","getDay","toLocaleDateString","toLocaleTimeString","StyledScheduleCard","ScheduleCard_templateObject","isPast","StyledGameScore","ScheduleCard_templateObject2","ScheduleCard","isGamePast","scaleValue","cardsList","document","getElementsByClassName","viewCenterPoint","outerWidth","i","length","cardScrollPoint","offsetLeft","cardsListContainer","parentElement","scrollLeft","style","transform","dateCheck","pastOrFuture","currentGameDate","month","getMonth","data-month","data-pastfuture","ScheduleCard_GameDateContainer","TeamCard_Team","Card","awayTeamCity","awayTeamName","handleClick","homeTeamCity","homeTeamName","Cards_TeamCard_TeamCard","Cards_ScheduleCard_ScheduleCard","Reload","location","reload","Error","Buttons_Reload","ApiCall","schedule","isLoaded","error","data","fetchSchedule","_this3","src_Utilities_Error","gameCard","games","map","game","Cards_Card","key","awayTeam","score","awayScoreTotal","homeTeam","homeScoreTotal","startTime","gameID","activeTeamName","Containers_CardContainer","StyledDivisionContainer","section","DivisionContainer_templateObject","StyledDivisionName","DivisionContainer_templateObject2","DivisionContainer","divisionTitle","TeamList","Containers_DivisionContainer","StyledFab","button","Fab_templateObject","StyledHamburger","Fab_templateObject2","StyledFabH2","Fab_templateObject3","_templateObject4","isFabActive","ActiveFabWrapper","_templateObject5","ActiveFabOne","_templateObject6","FabSlideUp","_templateObject7","ActiveFabTwo","_templateObject8","ActiveFabThree","_templateObject9","Fab","handleMenuClick","CurrentFabText","scrollToNextGame","querySelector","scrollIntoView","behavior","block","isFabHidden","isActive","StyledMonthContainer","MonthContainer_templateObject","visible","MonthContainer","updateH2","SCHEDULE_LIST","getElementById","MONTHS","querySelectorAll","setMonthState","isVisible","setTimeout","currentMonth","addEventListener","scheduleListCheckPoint","StyledWrapper","main","Schedule_templateObject","Schedule","e","targetTeam","target","closest","targetTeamValue","dataset","teamid","currentTeamName","firstChild","innerHTML","currentTeamCity","nextElementSibling","divisionContainer","classList","remove","add","scheduleQueryRecipe","teamStatsQueryRecipe","isTeamListActive","isScheduleListActive","headerH3","currentTeamRecord","resetAPICall","teamStatsBaseURL","Components_Header_Header","Containers_MonthContainer","ApiCall_ApiCall","Buttons_Fab","TeamCard_TeamList","StyledApp","App_templateObject","App","BrowserRouter","Route","path","baseUrl","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","URL","process","origin","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.293c9b38.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n//#region Styles\nconst spin = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to{\n        transform: rotate(360deg);\n    }\n`\n\nconst StyledLoadingCircle = styled.div`\n    .loading-circle{\n        width: 2vw;\n        height: 2vw;\n        border-radius: 50%;\n        border: 1vw solid #999;\n        border-top-color: #444;\n        animation: 2s ${spin} infinite linear;\n        margin:auto;\n    }`\n//#endregion Styles\n\nconst LoadingCircle = () => {\n    return(\n        <StyledLoadingCircle/>\n    )\n}\n    \nexport default LoadingCircle;","import React from 'react';\nimport LoadingCircle from '../Loading/LoadingCircle';\nimport styled from 'styled-components';\nimport '../../Utilities/league-colors.css';\n\n\n//#region Styles\nconst StyledHeader = styled.header`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    background-color: ${props => props.headerStyle === \"homeHeader\" ? \"#222\" : \"\"};\n    width: 100%;\n    height: 150px;\n    padding: 20px 0;\n    color: white;\n    position: fixed;\n    top:0;\n    left:0;\n    text-align:center;\n    transition: .25s ease-in-out;\n    z-index:8000;\n\n    & h1, h2, h3{\n        width: 80%;\n        margin: auto;\n        padding-left: 0px;\n    }\n\n    h1 {\n        margin: auto;\n        margin-bottom: 0px;\n        font-size: ${props => props.activeTeamID ? '24px' : '42px'};\n    }\n\n    h2 {\n        font-size: ${props => props.activeTeamID ? '42px' : '24px'};\n        margin-top: 10px;\n    }\n`;\n\n//#endregion Styles\n\nclass Header extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading: true,\n        };\n    }\n\n    componentDidMount(){\n        this.setState({isLoading: false});\n    }\n    \n    render() {\n        \n        const { activeTeamID, children, headerH1, headerH2, headerStyle } = this.props;\n        if(this.state.isLoading) {\n            return (\n                <StyledHeader headerStyle={headerStyle} className={`team${activeTeamID}`}>\n                    <LoadingCircle />\n                </StyledHeader>\n            )\n        } else{\n            return (\n            <StyledHeader headerStyle={headerStyle} className={`team${activeTeamID}`}>\n                <h1>{headerH1}</h1>\n                <h2>{headerH2}</h2>\n                    {children}\n            </StyledHeader>\n            );\n        }\n    }\n}\nexport default Header;\n    ","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledCardContainer = styled.div`\n        position: relative;\n        width: 85%;\n        margin: 15px auto;\n        height: inherit;\n        display: inline-block;\n        text-align: center;\n        scroll-behavior: smooth;\n\n        @media (min-width: 600px) {\n        display: inline-block;\n        max-width: 1100px;\n        }\n`;\n\nconst StyledScheduleCardContainer = styled(StyledCardContainer)`\n        overflow: auto;\n        overflow-y: hidden;\n        white-space: nowrap;\n        display: flex;\n        position: relative;\n        height: auto;\n        padding: 20px 0px;\n        width: 95vw;\n        left: 0;\n        margin-top: 200px;\n        scroll-snap-type: x proximity;\n        @media (min-width: 600px) {\n            display: flex;\n            flex-direction: row;\n            max-width: 98vw;\n        }\n`;\n\nclass CardContainer extends React.Component {\n\n    render(){\n        const { containerType } = this.props;\n        window.scrollTo(0, 0);\n \n        if (containerType === \"division-container\") {\n            return (\n                <StyledCardContainer id={containerType}>\n                    {this.props.children}\n                </StyledCardContainer>\n            )\n        }\n\n        if (containerType === \"card_container_schedule_list\") {\n            return (\n                <StyledScheduleCardContainer onScroll={this.addCardScale} id={containerType}>\n                    {this.props.children}\n                </StyledScheduleCardContainer>\n            )\n        }\n\n    }\n}\nexport default CardContainer;","import React from 'react';\nimport styled from 'styled-components';\n\n//#region STYLES\nconst StyledLogoContainer = styled.div`\n    border-radius: 50%;\n    width: 80px;\n    height: 100%;\n    position: relative;\n    margin: auto;\n    display: -ms-flexbox;\n    display: flex;\n    margin-left: 0;\n    position: ${ props=>props.cardType === \"teamCard\" ? \"absolute\" : \"relative\"};\n    left: ${ props=>props.cardType === \"teamCard\" ? \"20px\" : \"0px\"};\n    \n    @media screen and (min-width:600px){\n        position: relative;\n        height: auto;\n        left: auto;\n        margin: auto;\n        width: 125px;\n    }\n`;\n\nconst StyledLogo = styled.img`\n    margin: auto;\n    width: 100%;\n    position: relative;\n    height: auto;\n`;\n//#endregion STYLES\n\nconst Logo = (props) => {\n    const { cardType, teamValue } = props;\n    let currentLogo;\n\n        //Huge switch statement that determines the logo based on team value. Also added some logic to check for card type.\n        //If cardType===teamCard, some teams go to *light* version of logo.\n    switch(teamValue) {\n        case \"1\":\n            if(cardType === \"teamCard\"){\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-light.svg\";\n                break;\n            } else {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-dark.svg\";\n                break;\n            }\n        case \"2\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-52-dark.svg\";\n            break;\n        case \"3\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-12-dark.svg\" ;\n            break;\n        case \"4\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-13-dark.svg\" ;\n            break;\n        case \"5\":\n            if (cardType === \"teamCard\") {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-light.svg\";\n                break;\n            } else {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-dark.svg\";\n                break;\n            }\n        case \"6\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-4-dark.svg\" ;\n            break;\n        case \"7\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-1-dark.svg\" ;\n            break;\n        case \"8\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-2-dark.svg\" ;\n            break;\n        case \"9\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-3-dark.svg\" ;\n            break;\n        case \"10\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-5-dark.svg\" ;\n            break;\n        case \"11\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-6-dark.svg\" ;\n            break;\n        case \"12\":\n            if (cardType === \"teamCard\") {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-light.svg\";\n                break;\n            } else {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-dark.svg\";\n                break;\n            }\n        case \"13\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-9-dark.svg\" ;\n            break;\n        case \"14\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-8-dark.svg\" ;\n            break;\n        case \"15\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-7-dark.svg\" ;\n            break;\n        case \"16\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-17-dark.svg\" ;\n            break;\n        case \"17\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-19-dark.svg\" ;\n            break;        \n        case \"18\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-18-dark.svg\" ;\n            break;       \n        case \"19\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-29-dark.svg\" ;\n            break;\n        case \"20\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-16-dark.svg\" ;\n            break;\n        case \"21\":\n            if (cardType === \"teamCard\") {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-light.svg\";\n                break;\n            } else {\n                currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-dark.svg\" ;\n                break;\n            }\n        case \"22\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-21-dark.svg\" ;\n            break;        \n        case \"23\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-20-dark.svg\" ;\n            break;        \n        case \"24\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-22-dark.svg\" ;\n            break;        \n        case \"25\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-30-dark.svg\" ;\n            break;        \n        case \"26\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-28-dark.svg\" ;\n            break;        \n        case \"27\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-25-dark.svg\" ;\n            break;        \n        case \"28\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-26-dark.svg\" ;\n            break;        \n        case \"29\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-24-dark.svg\" ;\n            break;        \n        case \"30\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-53-dark.svg\" ;\n            break;        \n        case \"142\":\n            currentLogo = \"https://www-league.nhlstatic.com/images/logos/teams-current-circle/54.svg\"\n            break;\n        default:\n            currentLogo = 'https://www-league.nhlstatic.com/images/logos/league-light/133.svg';\n            break;        \n    }\n\n    return(\n        <StyledLogoContainer cardType = {cardType}>\n            <StyledLogo src = {currentLogo}\n                alt = {`${props.TeamName} logo`}\n                />\n        </StyledLogoContainer>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport styled from 'styled-components' ;\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\n\nconst StyledH3 = styled.h3`\n    font-size: ${props => props.teamStatsLocation === \"header\" ? \"24px\" : \"16px\"};\n    padding-left: 20px;\n`;\n\nexport default class GetTeamStats extends React.Component{\n\n    constructor (props){\n        super(props);\n\n        //teamStats: Placeholder for data fetched from an API call\n        this.state = {\n            teamStats: '',\n            isLoading: true,\n        };\n    }\n\n    fetchTeamStats(){\n        const   username = 'sobrien',\n                password = 'MYSPORTSFEEDS',\n                url = this.props.url,\n                init = {\n                    type: \"GET\",\n                    dataType: 'json',\n                    async: false,\n                    headers: {\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\n                    }\n                 };\n        fetch(url, init)\n            .then(resp => resp.json())\n            .then(resp => {\n                this.setState({\n                    teamStats: resp,\n                    isLoading: false\n                });\n                });\n                return;\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.url !== prevProps.url){\n            this.fetchTeamStats();\n        }\n    }\n\n    componentDidMount(){\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because spoiler alert, the component didn't update.\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\n        this.fetchTeamStats();\n    }\n\n    render(){\n        const { isLoading, teamStats } = this.state;\n\n        if(this.props.ApiLink === \"teamStatsQuery\") {\n\n            if (isLoading){ \n                //Doesn't work as intended\n                return (\n                    <LoadingCircle />\n                ) \n            }\n            \n            else{\n                const teamWins = teamStats.teamStatsTotals[0].stats.standings.wins,\n                      teamLosses = teamStats.teamStatsTotals[0].stats.standings.losses,\n                      teamOvertimeLosses = teamStats.teamStatsTotals[0].stats.standings.overtimeLosses;\n                \n                    console.log(teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses);\n                    return (\n                       <StyledH3 teamStatsLocation={this.props.teamStatsLocation}>({teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses})</StyledH3>    \n                    )\n                }\n        }\n    }    \n}\n\n","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport styled from 'styled-components';\nimport '../../../Utilities/league-colors.css';\nimport GetTeamStats from '../../../API/GetTeamStats';\n\n//#region STYLES\nconst StyledTeamCard = styled.div`\n        margin: 10px auto;\n        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n        display: flex;\n        flex-direction: column;\n        height: 100px;\n        width: 100%;\n        transition: .25s ease-in-out;\n        position: relative;\n        border-radius: 5px;\n        float: left;\n        overflow: hidden;\n        scroll-behavior: smooth;\n\n        :hover {\n            cursor: pointer;\n        }\n\n        & h2, h3, .logo-container{\n            position: relative;\n            margin: auto;\n            left: auto;\n            right: auto;\n        }\n\n        @media (min-width: 600px) {\n            width: 250px;\n            height: 350px;\n            margin: 10px;\n\n           :hover {\n                transform:translateY(-5px);\n                box-shadow: 2px 4px 6px rgba(0,0,0,.4);\n            }\n\n            & h2, h3{\n                padding-left: 0px;\n                margin-bottom: 0px;\n            }\n\n        }\n`;\n\nconst StyledCityName = styled.h2`\n            font-size: 18px;\n            padding-left:20px;\n\n`;\n\nconst StyledTeamName = styled.h3`\n    font-size: 28px;\n    padding-left: 20px;\n\n`;\n\n\n//#endregion STYLES\n\n\n\nconst TeamCard = (props) => {\n\n    const teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\n           recordQuery = teamStatsBaseURL + props.teamValue;\n\n    return (\n        <StyledTeamCard className={`card team-card team${props.teamValue}`} onClick={props.onClick} teamValue={props.teamValue} data-teamid={props.teamValue}>\n            <StyledCityName>{props.cityName}</StyledCityName>\n            <StyledTeamName>{props.teamName}</StyledTeamName>\n            <GetTeamStats teamStatsLocation=\"teamCard\" ApiLink=\"teamStatsQuery\" url={recordQuery}/>\n            <Logo cardType={\"teamCard\"} teamValue={props.teamValue} />\n        </StyledTeamCard>\n    )\n}\n\nexport default TeamCard;","\nimport React from 'react';\nimport Logo from '../../Logo/Logo';\nimport styled from 'styled-components';\n\n//#region Styles\nconst StyledHomeTeam = styled.div`\n    opacity: ${props => props.didHomeWin === \"homeWin\" ? \"1\" : \".4\"};\n    display: flex;\n    flex-direction: row;\n    height: auto;\n    width: 100%;\n    position: relative;\n    margin: auto;\n    padding: 30px 0;\n\n    & * {\n        margin: auto;\n    }\n`;\n\nconst StyledTeamNameWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & * {\n        margin: auto;\n    }\n`;\n//#endregion Styles\n\nconst HomeTeam = (props) => {\n    return (\n        <StyledHomeTeam didHomeWin={props.didHomeWin}>\n        <Logo teamValue={props.logoValue} />\n        <StyledTeamNameWrapper>\n            <h3>{props.teamCity}</h3>\n            <h2>{props.teamName}</h2>\n        </StyledTeamNameWrapper>\n            <h2 className=\"score home-score\">{props.homeTeamScore}</h2>\n        </StyledHomeTeam>\n    )\n}\n\nexport default HomeTeam;","\nimport React from 'react';\nimport Logo from '../../Logo/Logo';\nimport styled from 'styled-components';\n\n//#region Styles\nconst StyledAwayTeam = styled.div`\n    opacity: ${props => props.didHomeWin === \"homeWin\" ? \".4\" : \"1\"};\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    margin: auto;\n    width: 100%;\n    height:auto;\n    padding: 30px 0;\n\n    & * {\n        margin: auto;\n    }\n`;\n\nconst StyledTeamNameWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & * {\n        margin: auto;\n    }\n`;\n//#endregion Styles\n\nconst AwayTeam = (props) => {\n    \n    return (\n        <StyledAwayTeam didHomeWin={props.didHomeWin}>\n            <h2 className=\"score away-score\">{props.awayTeamScore}</h2>\n            <StyledTeamNameWrapper>\n                <h2>{props.teamName}</h2>\n                <h3>{props.teamCity}</h3>\n            </StyledTeamNameWrapper>\n            <Logo teamValue={props.logoValue} />\n        </StyledAwayTeam>\n    )\n}\n\nexport default AwayTeam;","import React from 'react';\n\nimport HomeTeam from '../ScheduleCard/HomeTeam';\nimport AwayTeam from '../ScheduleCard/AwayTeam';\n\n\nconst Team = (props) => {\n    \n        //Variables that feed into Home team and Away team components\n        let teamName,\n            teamCity,\n            teamValue,\n            logoValue;\n\n        const { awayTeamID, awayTeamScore, didHomeWin, homeTeamID, homeTeamScore, isHomeTeam } = props;\n\n        //Gets props.isHomeTeam from Card.js\n        if(isHomeTeam){\n            teamValue = homeTeamID;\n            logoValue = teamValue.toString();\n\n        } else {\n            teamValue = awayTeamID;\n            logoValue = teamValue.toString();\n        }\n        \n        //Assign teamName and TeamCity data based on teamID\n        switch (teamValue) {\n            case 1:\n                teamName = 'Lightning';\n                teamCity = 'Tampa Bay';\n            break;\n            case 2:\n                teamName = 'Jets';\n                teamCity = 'Winnipeg';\n            break;\n            case 3:\n                teamName = 'Hurricanes';\n                teamCity = 'Carolina';\n            break;\n            case 4:\n                teamName = 'Panthers';\n                teamCity = 'Florida';\n           break;\n            case 5:\n                teamName = 'Capitals';\n                teamCity = 'Washington';\n           break;\n            case 6:\n                teamName = 'Flyers';\n                teamCity = 'Philadelphia';\n           break;\n            case 7:\n                teamName = 'Devils';\n                teamCity = 'New Jersey';\n           break;\n            case 8:\n                teamName = 'Islanders';\n                teamCity = 'New York';\n           break;\n            case 9:\n                teamName = 'Rangers';\n                teamCity = 'New York';\n           break;\n            case 10:\n                teamName = 'Penguins';\n                teamCity = 'Pittsburgh';\n           break;\n            case 11:\n                teamName = 'Bruins';\n                teamCity = 'Boston';\n           break;\n            case 12:\n                teamName = 'Maple Leafs';\n                teamCity = 'Toronto';\n           break;\n            case 13:\n                teamName = 'Senators';\n                teamCity = 'Ottawa';\n           break;\n            case 14:\n                teamName = 'Canadians';\n                teamCity = 'Montreal';\n           break;\n            case 15:\n                teamName = 'Sabres';\n                teamCity = 'Buffalo';\n           break;\n            case 16:\n                teamName = 'Red Wings';\n                teamCity = 'Detroit';\n           break;\n            case 17:\n                teamName = 'Blues';\n                teamCity = 'St. Louis';\n           break;\n            case 18:\n                teamName = 'Predators';\n                teamCity = 'Nasheville';\n           break;\n            case 19:\n                teamName = 'Blue Jackets';\n                teamCity = 'Columbus';\n           break;\n            case 20:\n                teamName = 'Blackhawks';\n                teamCity = 'Chicago';\n           break;\n            case 21:\n                teamName = 'Canucks';\n                teamCity = 'Vancouver';\n           break;\n            case 22:\n                teamName = 'Avalanche';\n                teamCity = 'Colorado';\n           break;\n            case 23:\n                teamName = 'Flames';\n                teamCity = 'Calgary';\n           break;\n            case 24:\n                teamName = 'Oilers';\n                teamCity = 'Edmonton';\n           break;\n            case 25:\n                teamName = 'Wild';\n                teamCity = 'Minnesota';\n           break;\n            case 26:\n                teamName = 'Sharks';\n                teamCity = 'San Jose';\n           break;\n            case 27:\n                teamName = 'Stars';\n                teamCity = 'Dallas';\n           break;\n            case 28:\n                teamName = 'Kings';\n                teamCity = 'Los Angeles';\n           break;\n            case 29:\n                teamName = 'Ducks';\n                teamCity = 'Anaheim';\n           break;\n            case 30:\n                teamName = 'Coyotes';\n                teamCity = 'Arizona';\n           break;\n            case 142:\n                teamName = 'Golden Knights';\n                teamCity = 'Los Vegas';\n           break;\n          default:\n            console.log('error converting data');\n        }\n\n        if(isHomeTeam){\n\n            return(\n                <HomeTeam\n                    teamName={teamName}\n                    teamCity={teamCity}\n                    didHomeWin={didHomeWin}\n                    homeTeamScore={homeTeamScore}\n                    logoValue={logoValue}\n                />\n            )\n\n    } else {\n\n            return(\n                <AwayTeam\n                    teamName={teamName}\n                    teamCity={teamCity}\n                    didHomeWin={didHomeWin}\n                    awayTeamScore={awayTeamScore}\n                    logoValue={logoValue}\n                />\n            )\n        \n        }\n        \n    }\n\n export default Team;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledGameDateContainer = styled.div`\n    position: absolute;\n    top:0;\n    width: 100%;\n    left:0;\n    right:0;\n    margin:auto;\n    background-color: #222;\n    color: #fff;\n    height: 1.2em;\n    padding-top: 5px;\n    display: flex;\n`;\n\nconst StyledGameDate = styled.p`\n    margin: auto;\n`;\n\n\nconst GameDateContainer = (props) => {\n\n        //Gets date from API response and converts it to a readable format for the Card\n        //Needs to get split off into its own component\n        let jsonDate = new Date(props.gameDateTime),\n            weekday = new Array(7);\n                weekday[0] = \"Sunday\";\n                weekday[1] = \"Monday\";\n                weekday[2] = \"Tuesday\";\n                weekday[3] = \"Wednesday\";\n                weekday[4] = \"Thursday\";\n                weekday[5] = \"Friday\";\n                weekday[6] = \"Saturday\";\n\n        let formattedGameDate = weekday[jsonDate.getDay()] + ', ' + jsonDate.toLocaleDateString() + ' at ' + jsonDate.toLocaleTimeString();\n\n  return (\n        <StyledGameDateContainer gameDateTime={props.gameDateTime} className={`team${props.activeTeamID}`}>\n            <StyledGameDate> {formattedGameDate}</StyledGameDate>\n        </StyledGameDateContainer>\n  )\n\n}\n\nexport default GameDateContainer;\n\n","import React from 'react';\nimport Team from '../TeamCard/Team';\nimport GameDateContainer from './GameDateContainer';\nimport styled from 'styled-components';\n\n//#region STYLES\nconst StyledScheduleCard = styled.div`\n    margin: auto 10px;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n    height: 300px;\n    width: 100%;\n    min-width: 350px;\n    transition: .25s ease-in-out;\n    background-color: ${props => props.isPast === \"past\" ? \"lightgray\" : \"#fff\"};\n    position: relative;\n    border-radius: 5px;\n    overflow: hidden;\n    scroll-behavior: smooth;\n    scroll-snap-align: center;\n    opacity: ${props => props.isPast === \"past\" ? \".6\" : \"1\"};\n\n    @media (min-width: 600px) {\n        width: 350px;\n        height: 450px;\n        margin: auto 20px;\n\n            :hover{\n                box-shadow: 0 2px 6px rgba(0,0,0,0.2), 0 2px 4px rgba(0,0,0,0.4);\n                transform: translateY(-5px);\n            }\n    }\n`;\n\nconst StyledGameScore = styled.div`\n    position: absolute;\n    top: 15px;\n    height: calc(100% - 15px);\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n    & *{\n        margin: auto;\n    }\n\n    & p{\n        font-weight: 600;\n    }\n`\n\n//#endregion STYLES\n\n\n\nclass ScheduleCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isGamePast: true,\n        };\n    }\n\n    dateCheck () {\n        const { gameDateTime } = this.props;\n\n        let currentDate = new Date(),\n            currentGameDate = new Date(gameDateTime);\n\n        if (currentDate < currentGameDate) {\n            this.setState({\n                isGamePast: false,\n            })\n    }\n}\n\n    addCardScale() {\n        let cardsList = document.getElementsByClassName(\"schedule-card\"),\n            viewCenterPoint = window.outerWidth / 2,\n            scaleValue,\n            i = 0;\n\n        for (i; i < cardsList.length; i++) {\n            let cardScrollPoint = cardsList[i].offsetLeft,\n                cardsListContainer = cardsList[i].parentElement.scrollLeft + 300;\n\n                if(cardsList[i].scrollLeft )\n                scaleValue = (((cardsListContainer - cardScrollPoint) / viewCenterPoint) * 1.2);\n\n            cardsList[i].style.transform = \"scale(\" + scaleValue + \")\";\n        }\n    }\n\n    componentDidMount() {\n        this.dateCheck();\n    }\n\n    render() {\n\n        const {activeTeamID, awayTeamID, awayTeamScore, gameDateTime, homeTeamID, homeTeamScore, teamCity, teamName} = this.props,\n                pastOrFuture= this.state.isGamePast ? \"past\" : \"future\";\n\n        let currentGameDate = new Date(gameDateTime),\n            month = currentGameDate.getMonth(),\n            didHomeWin;\n\n        if (homeTeamScore > awayTeamScore){\n            didHomeWin = \"homeWin\";\n        } else {\n            didHomeWin = \"homeLose\"; \n        }\n\n        return (\n\n            <StyledScheduleCard data-month={month} data-pastfuture={pastOrFuture} cardType={\"scheduleCard\"} isPast={this.state.isGamePast ? 'past' : 'future'}>\n                <GameDateContainer\n                    gameDateTime={currentGameDate}\n                    activeTeamID={activeTeamID}\n                />\n                <StyledGameScore>\n                    <Team\n                        didHomeWin={didHomeWin}\n                        awayTeamID={awayTeamID}\n                        teamName={teamName}\n                        teamCity={teamCity}\n                        awayTeamScore={awayTeamScore}\n                    />\n                    <p>At</p>\n                    <Team\n                        isHomeTeam={true}\n                        didHomeWin={didHomeWin}\n                        homeTeamID={homeTeamID}\n                        teamName={teamName}\n                        teamCity={teamCity}\n                        homeTeamScore={homeTeamScore}\n                    />\n                </StyledGameScore>\n            </StyledScheduleCard>\n        )\n\n    };\n}\n\nexport default ScheduleCard;\n\n","import React from 'react';\nimport TeamCard from './TeamCard/TeamCard';\nimport ScheduleCard from './ScheduleCard/ScheduleCard';\n\nclass Card extends React.Component{\n\nrender() {\n\n    const { activeTeamID, awayTeamCity, awayTeamID, awayTeamName, awayTeamScore, cardType, cityName, gameDateTime, handleClick, homeTeamCity, homeTeamID, homeTeamName, homeTeamScore, onClick, month, teamName, teamValue } = this.props;\n     \n        //Team Cards\n        if(cardType === \"teamCard\") {\n            return (\n                <TeamCard\n                    cityName={cityName}\n                    teamName={teamName}\n                    onClick={onClick}\n                    teamValue={teamValue}\n                />\n                );\n            }\n\n        //Schedule Cards\n        if(cardType === \"scheduleCard\") {\n            return(\n                <ScheduleCard\n                    gameDateTime={gameDateTime}\n                    awayTeamID={awayTeamID}\n                    awayTeamName={awayTeamName}\n                    awayTeamCity={awayTeamCity}\n                    awayTeamScore={awayTeamScore}\n                    homeTeamID={homeTeamID}\n                    homeTeamName={homeTeamName}\n                    homeTeamCity={homeTeamCity}\n                    homeTeamScore={homeTeamScore}\n                    onClick={handleClick}\n                    activeTeamID={activeTeamID}\n                    month={month}\n                />\n            )\n        }\n    }\n}\n    \nexport default Card;","import React from 'react';\n\nconst Reload = () => {\n  return (\n    <button className=\"fade-in reload-button\" onClick={ window.location.reload() }>Try again?</button>\n  )\n}\n\nexport default Reload;\n","import React from 'react';\nimport Reload from '../Components/Buttons/Reload'\n\n\n\nimport \"./Error.css\";\n\nconst Error = () => {\n        return(\n            <div className=\"error-container\">\n                <h2>Sorry about that...</h2>\n                <p>Looks like an error occurred.</p>\n                <br/>\n                <Reload />\n            </div>\n        )\n    }\n    \nexport default Error;","import React from 'react';\nimport CardContainer from '../Components/Containers/CardContainer';\nimport Card from '../Components/Cards/Card';\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\nimport Error from '../Utilities/Error';\n\nexport default class ApiCall extends React.Component {\n\n    //schedule: placeholder for data recieved from fetch request\n    //isLoaded: boolean for loading animation\n    //error: if something doesn't go right, load Error component\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            schedule: '',\n            isLoaded: false,\n            error: false\n        };\n    }\n\n    fetchSchedule() {\n        const   username = 'sobrien',\n                password = 'MYSPORTSFEEDS',\n                url = this.props.url,\n                init = {\n                    type: \"GET\",\n                    dataType: 'json',\n                    async: false,\n                    headers: {\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\n                    }\n                };\n        fetch(url, init)\n            .then(data => data.json())\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    schedule: data\n                });\n            },\n            (error) => {\n                console.log('API call failed with error ', error);\n                this.setState({\n                    error: true,\n                });\n            }\n        )\n        return;\n    }\n\n    componentDidUpdate(prevProps) {\n        //If the component updates and the url prop is changed, make fetch request with updated URL\n        if (this.props.url !== prevProps.url) {\n            this.fetchSchedule();\n        }\n    }\n\n    componentDidMount() {\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because the component didn't update.\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\n        this.fetchSchedule();\n    }\n\n    render() {\n        const { error, isLoaded, schedule } = this.state;\n        \n        //Handle failed API Call\n        if (error) { return <Error /> }\n\n        //Is API call \n        if (this.props.ApiLink === \"gameScheduleQuery\") {\n\n            //Loading Animation\n            if (!isLoaded) { return <LoadingCircle /> }\n\n            //Map JSON Data to Card component\n            else {\n                const   gameCard = schedule.games.map((game) =>\n\n                            <Card key={game.schedule.id}\n                                cardType=\"scheduleCard\"\n                                awayTeamName={this.props.awayTeamName}\n                                awayTeamCity={this.props.awayTeamCity}\n                                awayTeamID={game.schedule.awayTeam.id}\n                                awayTeamScore={game.score.awayScoreTotal}\n                                homeTeamName={this.props.homeTeamName}\n                                homeTeamCity={this.props.homeTeamCity}\n                                homeTeamID={game.schedule.homeTeam.id}\n                                homeTeamScore={game.score.homeScoreTotal}\n                                gameDateTime={game.schedule.startTime}\n                                gameID={game.schedule.id}\n                                onClick={this.handleClick}\n                                activeTeamID={this.props.activeTeamID}\n                                activeTeamName={this.props.activeTeamName}\n                            />\n\n                    );\n                //Return Schedule Card container with mapped Schedule Cards\n                return (\n                    <CardContainer containerType=\"card_container_schedule_list\">\n                        {gameCard}\n                    </CardContainer>\n                )\n            }\n        }\n    }\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDivisionContainer = styled.section`\n    width:100%;\n    height: 100%;\n    overflow: auto;\n    padding-bottom: 25px;\n    position: relative;\n\n    @media (min-width: 600px) {\n        display: inline-block;\n    }\n\n`;\n\nconst StyledDivisionName = styled.h2`\n    text-align: left;\n    width: 100%;\n`\n\nconst DivisionContainer = (props) => {\n    window.scrollTo(0,0);\n    \n    return(\n        <StyledDivisionContainer>\n            <StyledDivisionName>{ props.divisionTitle }</StyledDivisionName>\n            {props.children}\n        </StyledDivisionContainer>\n    )\n    \n}\n\nexport default DivisionContainer;","import React from 'react';\n\nimport CardContainer from '../../Containers/CardContainer';\nimport DivisionContainer from '../../Containers/DivisionContainer';\nimport Card from '../../Cards/Card';\n\n\nconst TeamList = (props) => {\n\n        return (\n\n            <CardContainer containerType=\"division-container\">\n                <DivisionContainer divisionTitle=\"Atlantic\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Boston\"\n                        teamName=\"Bruins\"\n                        teamValue=\"11\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Buffalo\"\n                        teamName=\"Sabres\"\n                        teamValue=\"15\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Detroit\"\n                        teamName=\"Red Wings\"\n                        teamValue=\"16\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Florida\"\n                        teamName=\"Panthers\"\n                        teamValue=\"4\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Montreal\"\n                        teamName=\"Canadians\"\n                        teamValue=\"14\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Ottawa\"\n                        teamName=\"Senators\"\n                        teamValue=\"13\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Tampa Bay\"\n                        teamName=\"Lightning\"\n                        teamValue=\"1\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Toronto\"\n                        teamName=\"Maple Leafs\"\n                        teamValue=\"12\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Metropolitan\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Carolina\"\n                        teamName=\"Hurricanes\"\n                        teamValue=\"3\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Columbus\"\n                        teamName=\"Blue Jackets\"\n                        teamValue=\"19\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New Jersey\"\n                        teamName=\"Devils\"\n                        teamValue=\"7\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New York\"\n                        teamName=\"Islanders\"\n                        teamValue=\"8\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New York\"\n                        teamName=\"Rangers\"\n                        teamValue=\"9\"\n                        onClick={props.handleClick}\n                    />\n\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Philadelphia\"\n                        teamName=\"Flyers\"\n                        teamValue=\"6\"\n                        onClick={props.handleClick}\n                    />\n\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Pittsburgh\"\n                        teamName=\"Penguins\"\n                        teamValue=\"10\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Washington\"\n                        teamName=\"Capitals\"\n                        teamValue=\"5\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Central\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Chicago\"\n                        teamName=\"Black Hawks\"\n                        teamValue=\"20\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Colorado\"\n                        teamName=\"Avalanche\"\n                        teamValue=\"22\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Dallas\"\n                        teamName=\"Stars\"\n                        teamValue=\"27\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Minnesota\"\n                        teamName=\"Wild\"\n                        teamValue=\"25\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Nashville\"\n                        teamName=\"Predators\"\n                        teamValue=\"18\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"St. Louis\"\n                        teamName=\"Blues\"\n                        teamValue=\"17\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Winnipeg\"\n                        teamName=\"Jets\"\n                        teamValue=\"2\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Pacific\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Anaheim\"\n                        teamName=\"Ducks\"\n                        teamValue=\"29\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Arizona\"\n                        teamName=\"Coyotes\"\n                        teamValue=\"30\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Calgary\"\n                        teamName=\"Flames\"\n                        teamValue=\"23\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Edmonton\"\n                        teamName=\"Oilers\"\n                        teamValue=\"24\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Los Angeles\"\n                        teamName=\"Kings\"\n                        teamValue=\"28\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"San Jose\"\n                        teamName=\"Sharks\"\n                        teamValue=\"26\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Vancouver\"\n                        teamName=\"Canucks\"\n                        teamValue=\"21\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Las Vegas\"\n                        teamName=\"Golden Knights\"\n                        teamValue=\"142\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n            </CardContainer>\n\n        )\n    }\nexport default TeamList","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport '../../Utilities/league-colors.css';\n\n//#region STYLES\nconst StyledFab = styled.button`\n  background-color: #fff;\n  border-radius: 50%;\n  box-shadow: 2px 2px 6px rgba(0,0,0,.4);\n  transition: .5s ease-in-out;\n  border: 2px solid rgba(255,255,255,.5);\n  position: fixed;\n  bottom: 15px;\n  right: 15px;\n  height: 75px;\n  width: 75px;\n    &:focus {\n      outline: none;\n    }\n`;\nconst StyledHamburger = styled.div`\n    width: 30px;\n    height: 2px;\n    margin: auto;\n    margin-top:-11px;\n    background-color: currentColor;\n    transition: .25s ease-in-out;\n\n    ::before, ::after{\n      content:'';\n      width: 30px;\n      height: 2px;\n      background-color: inherit;\n      position: absolute;\n      left: 0;\n      right: 0;\n      margin: auto;\n      transition: .2s ease-in-out;\n    }\n\n    ::before{\n      top: 15px;\n    }\n\n    ::after{\n      bottom: 35px;\n    }\n`;\n\nconst StyledActiveHamburger = styled(StyledHamburger)`\n  transform: rotate(90deg);\n\n  ::after{\n    display: none;\n  }\n`;\nconst StyledFabH2 = styled.h2`\n    margin: auto;\n    margin-right: ${props => props.isFabActive ? \"75px\" : \"auto\"};\n    padding: 0px 10px;\n    color: currentColor;\n    position: absolute;\n    width: ${props => props.isFabActive ? \"200px\" : \"auto\"};\n    right: 0;\n    left: 0;\n    bottom: ${props => props.isFabActive ? \"25px\" : \"10px\"};\n    text-align: ${props => props.isFabActive ? \"right\" : \"center\"};\n`;\n\nconst ActiveFabWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0,0,0,.4);\n    z-index: 9999;\n`;\n\nconst ActiveFabOne = styled(StyledFab)`\n\n`;\n\nconst FabSlideUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(125px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`\n\nconst ActiveFabTwo = styled(StyledFab)`\n    animation: ${FabSlideUp} .45s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n    bottom: 115px;\n`\n\nconst ActiveFabThree = styled(StyledFab)`\n    animation: ${FabSlideUp} .6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;\n    bottom: 215px;\n`\n//#endregion STYLES\n\n\nclass Fab extends React.Component{\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        isFabActive: false,\n        isFabHidden: true,\n        CurrentFabText: \"Menu\",\n      };\n    }\n\n  handleMenuClick = () => {\n    this.setState({\n      isFabActive: !this.state.isFabActive,\n      CurrentFabText: this.state.CurrentFabText === \"Close\" ? \"Menu\" : \"Close\",\n    })\n  }\n\n  Handle\n\n  scrollToNextGame = () => {\n      document.querySelector('[data-pastfuture=\"future\"]').scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n      this.handleMenuClick();\n  }\n\n  render(){\n    const { activeTeamID } = this.props,\n          { isFabActive, isFabHidden, CurrentFabText } = this.state;\n\n          if(isFabActive) {\n            return (\n              <ActiveFabWrapper>\n                <ActiveFabThree className={`team${activeTeamID}`} onClick={this.scrollToNextGame}>\n                  <StyledFabH2 isFabActive={isFabActive}>Next Game</StyledFabH2>\n                </ActiveFabThree>\n\n                <ActiveFabTwo className={`team${activeTeamID}`} onClick={this.props.handleClick}>\n                  <StyledFabH2 isFabActive={isFabActive}>Teams</StyledFabH2>\n                </ActiveFabTwo>\n\n                <ActiveFabOne className={`team${activeTeamID}`} isActive=\"true\" onClick={this.handleMenuClick}>\n                  <StyledFabH2 isFabActive={isFabActive}>Close</StyledFabH2>\n                </ActiveFabOne>\n              </ActiveFabWrapper>\n            );\n          }\n\n    return (\n      <div>\n        <StyledFab className={`team${activeTeamID}`} onClick={this.handleMenuClick} isFabHidden={isFabHidden}>\n          <StyledHamburger></StyledHamburger>\n          <StyledFabH2>{CurrentFabText}</StyledFabH2>\n        </StyledFab>\n      </div>\n    );\n\n  }\n};\n\nexport default Fab;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledMonthContainer = styled.div`\n    height: 50px;\n    border-bottom: 2px solid #000;\n    width: 200px;\n    margin-left: 20px;\n    top: 180px;\n    position: fixed;\n    padding-bottom: 10px;\n\n    & h2{\n        text-align: left;\n        padding-left: 10px;\n        transition: .3s ease-in-out;\n        opacity: ${props => props.visible ? \"1\" : \"0\"};\n        transform: ${props => props.visible ? \"\" : \"translateY(15px)\"};\n        padding-bottom: 10px;\n    }\n\n    @media (min-width: 600px) {\n        margin-left: 45px;\n    }\n`;\n\nclass MonthContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentMonth: 'October',\n            isVisible: true\n        }\n    }\n\n    updateH2 = () => {\n         const SCHEDULE_LIST = document.getElementById(\"card_container_schedule_list\"),\n               MONTHS = {\n                January:  document.querySelectorAll(\"[data-month='0']\")[0].offsetLeft,\n                February: document.querySelectorAll(\"[data-month='1']\")[0].offsetLeft,\n                March:    document.querySelectorAll(\"[data-month='2']\")[0].offsetLeft,\n                April:    document.querySelectorAll(\"[data-month='3']\")[0].offsetLeft,\n                October:  document.querySelectorAll(\"[data-month='9']\")[0].offsetLeft,\n                November: document.querySelectorAll(\"[data-month='10']\")[0].offsetLeft,\n                December: document.querySelectorAll(\"[data-month='11']\")[0].offsetLeft\n        };\n\n        const setMonthState = (month) => {\n            this.setState({\n                isVisible: false\n            });\n\n           setTimeout(()=>{\n               this.setState({\n                   currentMonth: month,\n                   isVisible: true\n               })\n            }, 600);\n\n        };\n        \n            SCHEDULE_LIST.addEventListener(\"scroll\", () => {\n\n                const {currentMonth} = this.state;\n                let scheduleListCheckPoint = SCHEDULE_LIST.scrollLeft + 300;                \n\n            //If the distance between the first card of month X to the left side of card_container_schedule_list is \n            //less than or equal to the distance the card_container_schedule_list has been scrolled (plus the size of one card)\n            //set state of current month to month X.\n\n            switch(true){\n                case scheduleListCheckPoint > 0 && scheduleListCheckPoint < MONTHS.November:\n                    if (currentMonth === \"October\") { break; }\n                        setMonthState(\"October\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.October && scheduleListCheckPoint < MONTHS.December:\n                    if (currentMonth === \"November\") { break; }\n                        setMonthState(\"November\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.November && scheduleListCheckPoint < MONTHS.January:\n                    if (currentMonth === \"December\") { break; } \n                        setMonthState(\"December\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.December && scheduleListCheckPoint < MONTHS.February:\n                    if (currentMonth === \"January\") { break; }\n                        setMonthState(\"January\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.January && scheduleListCheckPoint < MONTHS.March:\n                    if (currentMonth === \"February\") { break; }\n                        setMonthState(\"February\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.February && scheduleListCheckPoint < MONTHS.April:\n                    if (currentMonth === \"March\") { break; }\n                        setMonthState(\"March\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.March:\n                    if (currentMonth === \"April\") { break; }\n                        setMonthState(\"April\");\n                        break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    componentDidMount() {\n        //I need to figure out why #card_container_schedule_list returns null if I don't use setTimeout. \n        //Until then, setTimeout works around that\n        setTimeout(() => {\n            this.updateH2();\n            this.setState({\n                isVisible: true\n            });\n        }, 1000);\n    };\n\n    render() {\n        const {currentMonth, isVisible} = this.state;\n\n        return (\n            <StyledMonthContainer visible={isVisible}>\n               <h2> { currentMonth } </h2>\n            </StyledMonthContainer>\n        )\n    }\n}\n\nexport default MonthContainer;","import React from 'react';\nimport Header from '../Components/Header/Header';\nimport ApiCall from '../API/ApiCall';\nimport GetTeamStats from '../API/GetTeamStats';\nimport TeamList from '../Components/Cards/TeamCard/TeamList';\nimport Fab from '../Components/Buttons/Fab';\nimport MonthContainer from '../Components/Containers/MonthContainer';\nimport styled from 'styled-components';\nimport '../Utilities/league-colors.css';\n\n//#region STYLES\nconst StyledWrapper = styled.main `\n        position: relative;\n        margin-top: 175px;\n`\n\n//#endregion STYLES\n\nclass Schedule extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            scheduleQueryRecipe: '',\n            teamStatsQueryRecipe: '',\n            isFabActive: false,\n            isTeamListActive: true,\n            isScheduleListActive: false,\n            activeTeamID: '',\n            headerH1: 'Face Off',\n            headerH2: 'Quick access to NHL Schedule, Stats, and more',\n        };\n    }\n\n    handleClick = (e) => {\n        //Properly handles clicks to nested elements. Deep down in my heart I know this isn't right.\n        let targetTeam = e.target.closest(\".card\"),\n            targetTeamValue = targetTeam.dataset.teamid,\n\n            //Gets chosen card, then derives teamName and teamCity from its inner HTML\n            currentTeamName = targetTeam.firstChild.innerHTML,\n            currentTeamCity =  targetTeam.firstChild.nextElementSibling.innerHTML,\n            scheduleBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\n            divisionContainer = document.getElementById(\"division-container\");\n            //Transitions TeamCards Out\n            divisionContainer.classList.remove(\"fade-in\");\n            divisionContainer.classList.add(\"fade-out\");\n\n            if(!currentTeamName){ return }\n        this.setState(() => {\n           return {\n                scheduleQueryRecipe: scheduleBaseURL + targetTeamValue,\n                teamStatsQueryRecipe: teamStatsBaseURL + targetTeamValue,\n                isFabActive: true,\n                isTeamListActive: false,\n                isScheduleListActive:true,\n                activeTeamID: targetTeamValue,\n                headerH1: currentTeamName,\n                headerH2: currentTeamCity,\n                headerH3: this.props.currentTeamRecord,\n           };\n        });\n    };\n    \n    resetAPICall = () => {\n        let scheduleQueryBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team='\n        \n\n        this.setState(()=>{\n            return{\n                scheduleQueryRecipe: scheduleQueryBaseURL,\n                teamStatsBaseURL: teamStatsBaseURL,\n                isFabActive: false,\n                isScheduleListActive: false,\n                isTeamListActive: true,\n                headerH1: 'Face Off',\n                headerH2: 'Quick access to NHL Schedule, Stats, and more',\n            };\n        }, window.scrollTo(0,0));\n    };\n\n    render(){\n\n        const {activeTeamID, headerH1, headerH2, isFabActive, isScheduleListActive, isTeamListActive, scheduleQueryRecipe, teamStatsQueryRecipe} = this.state;\n\n        if(isScheduleListActive){\n            //Good to have reference to the API link...\n            console.log(\"The current TeamStatsQueryRecipe is \" + teamStatsQueryRecipe);\n            console.log(\"The current scheduleQueryRecipe is \" + scheduleQueryRecipe);\n\n                return (\n                    <div>\n                        <Header headerStyle=\"TeamHeader\" activeTeamID={activeTeamID} headerH1={headerH1} headerH2={headerH2}> \n                            <GetTeamStats teamStatsLocation=\"header\" ApiLink=\"teamStatsQuery\" url={teamStatsQueryRecipe} />\n                        </Header>\n                        \n                        <div className=\"wrapper wrapper__home\">\n                            <h2 className=\"page__title page__title_schedule\">Choose a Game</h2>\n                            \n                            <MonthContainer/>\n                            <ApiCall activeTeamID={activeTeamID} ApiLink=\"gameScheduleQuery\" url={scheduleQueryRecipe}/>\n                                <Fab activeTeamID={activeTeamID} visible={isFabActive} handleClick={this.resetAPICall}/>\n                        </div>\n                    </div>\n        \n                )\n        }\n\n        if(isTeamListActive){\n\n            return (\n                <div>\n                    <Header headerStyle=\"homeHeader\" headerH1 = {headerH1} headerH2 = {headerH2} />\n                    <StyledWrapper>\n                        <TeamList handleClick={this.handleClick} teamValue={this.targetTeamValue} />\n                    </StyledWrapper>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Schedule;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"../node_modules/react-router-dom\";\nimport styled from 'styled-components';\nimport Schedule from './Pages/Schedule';\n\nconst StyledApp = styled.div`\n    text-align: center;\n    overflow: hidden;\n`;\n\nconst App = () => {\n  const baseUrl = process.env.PUBLIC_URL;\n\n  return (\n    <Router>\n      <StyledApp>\n        <Route path={baseUrl + \"/\"} component={Schedule} />\n      </StyledApp>\n    </Router>\n  );\n};\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}