{"version":3,"sources":["Components/Loading/LoadingCircle.js","Components/Header/Header.js","Components/Containers/CardContainer.js","Components/Logo/Logo.js","Components/Cards/TeamCard/TeamCard.js","Components/Cards/ScheduleCard/HomeTeam.js","Components/Cards/ScheduleCard/AwayTeam.js","Components/Cards/TeamCard/Team.js","Components/Cards/ScheduleCard/GameDateContainer.js","Components/Cards/ScheduleCard/ScheduleCard.js","Components/Cards/Card.js","Components/Buttons/Reload.js","Utilities/Error.js","API/ApiCall.js","API/GetTeamStats.js","Components/Containers/DivisionContainer.js","Components/Cards/TeamCard/TeamList.js","Components/Buttons/Fab.js","Components/Containers/MonthContainer.js","Pages/Schedule.js","App.js","registerServiceWorker.js","index.js"],"names":["spin","keyframes","_templateObject","StyledLoadingCircle","styled","div","_templateObject2","LoadingCircle","react_default","a","createElement","StyledHeader","header","Header_templateObject","props","activeTeamID","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","setState","_this$props","children","headerH1","headerH2","className","concat","Loading_LoadingCircle","React","Component","StyledCardContainer","CardContainer_templateObject","StyledScheduleCardContainer","CardContainer_templateObject2","CardContainer","containerType","window","scrollTo","id","onScroll","addCardScale","Logo","currentLogo","teamValue","src","alt","TeamName","TeamCard_templateObject","TeamCard","onClick","cityName","teamName","Components_Logo_Logo","HomeTeam","homeWin","didHomeWin","teamCity","logoValue","homeTeamScore","AwayTeam_templateObject","AwayTeam","awayTeamScore","Team","awayTeamID","homeTeamID","isHomeTeam","toString","console","log","ScheduleCard_HomeTeam","ScheduleCard_AwayTeam","GameDateContainer","jsonDate","Date","gameDateTime","weekday","Array","formattedGameDate","getDay","toLocaleDateString","toLocaleTimeString","ScheduleCard","currentDate","currentGameDate","month","getMonth","isGamePast","data-month","ScheduleCard_GameDateContainer","TeamCard_Team","Card","awayTeamCity","awayTeamName","cardType","handleClick","homeTeamCity","homeTeamName","Cards_TeamCard_TeamCard","Cards_ScheduleCard_ScheduleCard","Reload","location","reload","Error","Buttons_Reload","ApiCall","schedule","isLoaded","error","_this2","url","init","type","dataType","async","headers","Authorization","btoa","username","fetch","then","data","json","prevProps","fetchSchedule","_this3","_this$state","src_Utilities_Error","ApiLink","gameCard","games","map","game","Cards_Card","key","awayTeam","score","awayScoreTotal","homeTeam","homeScoreTotal","startTime","gameID","activeTeamName","Containers_CardContainer","GetTeamStats","teamStats","resp","fetchTeamStats","teamWins","teamStatsTotals","stats","standings","wins","teamLosses","losses","teamOvertimeLosses","overtimeLosses","StyledDivisionContainer","section","DivisionContainer_templateObject","StyledDivisionName","h2","DivisionContainer_templateObject2","DivisionContainer","divisionTitle","TeamList","Containers_DivisionContainer","StyledFab","button","Fab_templateObject","StyledFabH2","Fab_templateObject2","Fab","isActive","visibile","fabText","StyledMonthH2","MonthContainer_templateObject","visible","StyledMonthContainer","MonthContainer_templateObject2","MonthContainer","updateH2","SCHEDULE_LIST","document","getElementById","MONTHS","querySelectorAll","offsetLeft","setMonthState","isVisible","setTimeout","currentMonth","addEventListener","scheduleListCheckPoint","scrollLeft","StyledFabWrapper","Schedule_templateObject","StyledWrapper","main","Schedule_templateObject2","Schedule","e","targetTeam","target","closest","targetTeamValue","getAttribute","currentTeamName","firstChild","innerHTML","currentTeamCity","nextElementSibling","divisionContainer","classList","remove","add","scheduleQueryRecipe","teamStatsQueryRecipe","isFabActive","isTeamListActive","isScheduleListActive","headerH3","currentTeamRecord","scrollToNextGame","getElementsByClassName","length","previousElementSibling","scrollIntoView","behavior","block","resetAPICall","teamStatsBaseURL","Components_Header_Header","GetTeamStats_GetTeamStats","Containers_MonthContainer","ApiCall_ApiCall","Buttons_Fab","TeamCard_TeamList","StyledApp","App_templateObject","App","BrowserRouter","Route","path","baseUrl","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","URL","process","origin","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"yzBAIA,IAAMA,EAAOC,YAAHC,KASJC,EAAsBC,IAAOC,IAAVC,IAODN,GAWTO,EANO,WAClB,OACIC,EAAAC,EAAAC,cAACP,EAAD,wlBCpBR,IAAMQ,EAAeP,IAAOQ,OAAVC,IAkBG,SAAAC,GAAK,OAAIA,EAAMC,aAAe,OAAS,QAIvC,SAAAD,GAAK,OAAIA,EAAMC,aAAe,OAAS,SA2C7CC,cA/BX,SAAAA,EAAYF,GAAM,IAAAG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMN,KACDU,MAAQ,CACTC,WAAW,GAHDR,mFAQdG,KAAKM,SAAS,CAACD,WAAW,qCAGrB,IAAAE,EAEkDP,KAAKN,MAApDC,EAFHY,EAEGZ,aAAca,EAFjBD,EAEiBC,SAAUC,EAF3BF,EAE2BE,SAAUC,EAFrCH,EAEqCG,SAC1C,OAAGV,KAAKI,MAAMC,UAENjB,EAAAC,EAAAC,cAACC,EAAD,CAAcoB,UAAS,OAAAC,OAASjB,IAC5BP,EAAAC,EAAAC,cAACuB,EAAD,OAKRzB,EAAAC,EAAAC,cAACC,EAAD,CAAcoB,UAAS,OAAAC,OAASjB,IAC5BP,EAAAC,EAAAC,cAAA,UAAKmB,GACLrB,EAAAC,EAAAC,cAAA,UAAKoB,GACAF,UA3BAM,IAAMC,urBCpC3B,IAAMC,EAAsBhC,IAAOC,IAAVgC,KAWnBC,EAA8BlC,YAAOgC,EAAPhC,CAAHmC,KA2DlBC,cA1CX,SAAAA,EAAY1B,GAAO,OAAAI,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,GAAAtB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsB,GAAAjB,KAAAH,KACTN,kHAmBF,IACI2B,EAAkBrB,KAAKN,MAAvB2B,cAGR,OAFAC,OAAOC,SAAS,EAAG,GAEG,uBAAlBF,EAEIjC,EAAAC,EAAAC,cAAC0B,EAAD,CAAqBQ,GAAIH,GACpBrB,KAAKN,MAAMc,UAKF,iCAAlBa,EAEIjC,EAAAC,EAAAC,cAAC4B,EAAD,CAA6BO,SAAUzB,KAAK0B,aAAcF,GAAIH,GACzDrB,KAAKN,MAAMc,eAHxB,SAlCoBM,IAAMC,WCsFnBY,eAhHF,SAACjC,GACV,IACIkC,EAEJ,OAHgBlC,EAAMmC,WAIlB,IAAK,IACDD,EAAc,2JACd,MACJ,IAAK,IACDA,EAAc,2JACd,MACJ,IAAK,IACDA,EAAc,2JACd,MACJ,IAAK,IACDA,EAAc,2JACd,MACJ,IAAK,IACDA,EAAc,2JACd,MACJ,IAAK,IACDA,EAAc,0JACd,MACJ,IAAK,IACDA,EAAc,0JACd,MACJ,IAAK,IACDA,EAAc,0JACd,MACJ,IAAK,IACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,0JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,KACDA,EAAc,2JACd,MACJ,IAAK,MACDA,EAAc,4EACd,MACJ,QACIA,EAAc,qEAItB,OACIxC,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,kBACXvB,EAAAC,EAAAC,cAAA,OAAKwC,IAAOF,EACRG,IAAG,GAAAnB,OAAOlB,EAAMsC,SAAb,uFCvGIhD,IAAOC,IAAVgD,KAApB,IAsBeC,EAfE,SAACxC,GAEd,OACIN,EAAAC,EAAAC,cAAA,OAAKqB,UAAW,iBACXwB,QAASzC,EAAMyC,QACfN,UAAWnC,EAAMmC,WAEdzC,EAAAC,EAAAC,cAAA,UAAKI,EAAM0C,UACXhD,EAAAC,EAAAC,cAAA,UAAKI,EAAM2C,UACXjD,EAAAC,EAAAC,cAACgD,EAAD,CAAMT,UAAWnC,EAAMmC,cCCxBU,EAlBE,SAAC7C,GAEd,IAAI8C,EAMJ,OAJG9C,EAAM+C,aAC4BD,EAAZ,YAArB9C,EAAM+C,WAAqC,SAAqB,SAIhErD,EAAAC,EAAAC,cAAA,OAAKqB,UAAS,kBAAAC,OAAoB4B,IAC9BpD,EAAAC,EAAAC,cAAA,UAAKI,EAAM2C,UACXjD,EAAAC,EAAAC,cAAA,UAAKI,EAAMgD,UACXtD,EAAAC,EAAAC,cAACgD,EAAD,CAAMT,UAAWnC,EAAMiD,YACvBvD,EAAAC,EAAAC,cAAA,MAAIqB,UAAU,oBAAoBjB,EAAMkD,8FCZ7B5D,IAAOC,IAAV4D,KAApB,IAsBeC,EAlBE,SAACpD,GAEd,IAAI8C,EAMJ,OAJG9C,EAAM+C,aAC4BD,EAAZ,YAArB9C,EAAM+C,WAAqC,QAAoB,UAI/DrD,EAAAC,EAAAC,cAAA,OAAKqB,UAAS,kBAAAC,OAAoB4B,IAC9BpD,EAAAC,EAAAC,cAAA,UAAKI,EAAM2C,UACXjD,EAAAC,EAAAC,cAAA,UAAKI,EAAMgD,UACXtD,EAAAC,EAAAC,cAACgD,EAAD,CAAMT,UAAWnC,EAAMiD,YACvBvD,EAAAC,EAAAC,cAAA,MAAIqB,UAAU,oBAAoBjB,EAAMqD,iBCkKpCC,EAlLH,SAACtD,GAGN,IAAI2C,EACAK,EACAb,EACAc,EAEIM,EAAiFvD,EAAjFuD,WAAYF,EAAqErD,EAArEqD,cAAeN,EAAsD/C,EAAtD+C,WAAYS,EAA0CxD,EAA1CwD,WAAYN,EAA8BlD,EAA9BkD,cAAeO,EAAezD,EAAfyD,WAa1E,OARIR,EAFDQ,GACCtB,EAAYqB,GACUE,YAGtBvB,EAAYoB,GACUG,WAIlBvB,GACJ,KAAK,EACDQ,EAAW,YACXK,EAAW,YACf,MACA,KAAK,EACDL,EAAW,OACXK,EAAW,WACf,MACA,KAAK,EACDL,EAAW,aACXK,EAAW,WACf,MACA,KAAK,EACDL,EAAW,WACXK,EAAW,UAChB,MACC,KAAK,EACDL,EAAW,WACXK,EAAW,aAChB,MACC,KAAK,EACDL,EAAW,SACXK,EAAW,eAChB,MACC,KAAK,EACDL,EAAW,SACXK,EAAW,aAChB,MACC,KAAK,EACDL,EAAW,YACXK,EAAW,WAChB,MACC,KAAK,EACDL,EAAW,UACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,WACXK,EAAW,aAChB,MACC,KAAK,GACDL,EAAW,SACXK,EAAW,SAChB,MACC,KAAK,GACDL,EAAW,cACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,WACXK,EAAW,SAChB,MACC,KAAK,GACDL,EAAW,YACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,SACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,YACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,QACXK,EAAW,YAChB,MACC,KAAK,GACDL,EAAW,YACXK,EAAW,aAChB,MACC,KAAK,GACDL,EAAW,eACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,aACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,UACXK,EAAW,YAChB,MACC,KAAK,GACDL,EAAW,YACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,SACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,SACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,OACXK,EAAW,YAChB,MACC,KAAK,GACDL,EAAW,SACXK,EAAW,WAChB,MACC,KAAK,GACDL,EAAW,QACXK,EAAW,SAChB,MACC,KAAK,GACDL,EAAW,QACXK,EAAW,cAChB,MACC,KAAK,GACDL,EAAW,QACXK,EAAW,UAChB,MACC,KAAK,GACDL,EAAW,UACXK,EAAW,UAChB,MACC,KAAK,IACDL,EAAW,iBACXK,EAAW,YAChB,MACD,QACEW,QAAQC,IAAI,yBAGhB,OAAGH,EAGK/D,EAAAC,EAAAC,cAACiE,EAAD,CACIlB,SAAUA,EACVK,SAAUA,EACVD,WAAYA,EACZG,cAAeA,EACfD,UAAWA,IAOfvD,EAAAC,EAAAC,cAACkE,EAAD,CACInB,SAAUA,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","file":"static/js/main.a2b4a5de.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\n//#region Styles\nconst spin = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to{\n        transform: rotate(360deg);\n    }\n`\n\nconst StyledLoadingCircle = styled.div`\n    .loading-circle{\n        width: 2vw;\n        height: 2vw;\n        border-radius: 50%;\n        border: 1vw solid #999;\n        border-top-color: #444;\n        animation: 2s ${spin} infinite linear;\n        margin:auto;\n    }`\n//#endregion Styles\n\nconst LoadingCircle = () => {\n    return(\n        <StyledLoadingCircle/>\n    )\n}\n    \nexport default LoadingCircle;","import React from 'react';\nimport LoadingCircle from '../Loading/LoadingCircle';\nimport styled from 'styled-components';\nimport '../../Utilities/league-colors.css';\n\n\n//#region Styles\nconst StyledHeader = styled.header`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    background-color: #222;\n    width: auto;\n    height: 150px;\n    margin-bottom: 25px;\n    padding: 20px;\n    color: white;\n    position: relative;\n    z-index: 9000;\n    text-align:center;\n    transition: .25s ease-in-out;\n\n    h1 {\n        margin: auto;\n        margin-bottom: 0px;\n        font-size: ${props => props.activeTeamID ? '24px' : '42px'};\n    }\n\n    h2 {\n        font-size: ${props => props.activeTeamID ? '42px' : '24px'};\n        margin-top: 10px;\n    }\n\n    h3 {\n        margin: auto;\n    }\n`\n//#endregion Styles\n\nclass Header extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading: true,\n        };\n    }\n\n    componentDidMount(){\n        this.setState({isLoading: false});\n    }\n    \n    render() {\n        \n        const { activeTeamID, children, headerH1, headerH2 } = this.props;\n        if(this.state.isLoading) {\n            return (\n                <StyledHeader className={`team${activeTeamID}`}>\n                    <LoadingCircle />\n                </StyledHeader>\n            )\n        } else{\n            return (\n            <StyledHeader className={`team${activeTeamID}`}>\n                <h1>{headerH1}</h1>\n                <h2>{headerH2}</h2>\n                    {children}\n            </StyledHeader>\n            );\n        }\n    }\n}\nexport default Header;\n    ","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledCardContainer = styled.div`\n        position: relative;\n        top: 50px;\n        width: 80%;\n        margin: auto;\n        height: inherit;\n        display: inline-block;\n        text-align: center;\n        scroll-behavior: smooth;\n`;\n\nconst StyledScheduleCardContainer = styled(StyledCardContainer)`\n        overflow: auto;\n        overflow-y: hidden;\n        white-space: nowrap;\n        display: flex;\n        position: relative;\n        height: auto;\n        padding: 20px 0px;\n        width: 95vw;\n        left: 0;\n        margin-top: -25px;\n        padding-bottom: 100px;\n        scroll-snap-type: x proximity;\n`\n\nclass CardContainer extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    addCardScale(){\n        /*\n        let cardsList = document.getElementsByClassName(\"schedule-card\"),\n            viewCenterPoint = window.outerWidth / 2,\n            i = 0;\n\n        for (i; i < cardsList.length; i++) {\n            let cardScrollPoint = cardsList[i].offsetLeft,\n                cardsListContainer = cardsList[i].parentElement.scrollLeft + 300,\n                scaleValue = (((cardsListContainer - cardScrollPoint) / viewCenterPoint) * 1.2);\n\n            cardsList[i].style.transform = \"scale(\" + scaleValue + \")\";\n        }\n        */\n    }\n\n    render(){\n        const { containerType } = this.props;\n        window.scrollTo(0, 0);\n \n        if (containerType === \"division-container\") {\n            return (\n                <StyledCardContainer id={containerType}>\n                    {this.props.children}\n                </StyledCardContainer>\n            )\n        }\n\n        if (containerType === \"card_container_schedule_list\") {\n            return (\n                <StyledScheduleCardContainer onScroll={this.addCardScale} id={containerType}>\n                    {this.props.children}\n                </StyledScheduleCardContainer>\n            )\n        }\n\n    }\n}\nexport default CardContainer;","import React from 'react';\nimport '../Logo/Logo.css';\n\nconst Logo = (props) => {\n    let teamValue = props.teamValue,\n        currentLogo;\n\n    switch(teamValue) {\n        case \"1\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-dark.svg\";\n            break;\n        case \"2\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-52-dark.svg\";\n            break;\n        case \"3\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-12-dark.svg\" ;\n            break;\n        case \"4\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-13-dark.svg\" ;\n            break;\n        case \"5\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-dark.svg\";\n            break;\n        case \"6\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-4-dark.svg\" ;\n            break;\n        case \"7\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-1-dark.svg\" ;\n            break;\n        case \"8\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-2-dark.svg\" ;\n            break;\n        case \"9\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-3-dark.svg\" ;\n            break;\n        case \"10\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-5-dark.svg\" ;\n            break;\n        case \"11\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-6-dark.svg\" ;\n            break;\n        case \"12\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-dark.svg\" ;\n            break;\n        case \"13\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-9-dark.svg\" ;\n            break;\n        case \"14\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-8-dark.svg\" ;\n            break;\n        case \"15\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-7-dark.svg\" ;\n            break;\n        case \"16\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-17-dark.svg\" ;\n            break;\n        case \"17\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-19-dark.svg\" ;\n            break;        \n        case \"18\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-18-dark.svg\" ;\n            break;       \n        case \"19\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-29-dark.svg\" ;\n            break;\n        case \"20\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-16-dark.svg\" ;\n            break;\n        case \"21\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-dark.svg\" ;\n            break;        \n        case \"22\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-21-dark.svg\" ;\n            break;        \n        case \"23\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-20-dark.svg\" ;\n            break;        \n        case \"24\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-22-dark.svg\" ;\n            break;        \n        case \"25\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-30-dark.svg\" ;\n            break;        \n        case \"26\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-28-dark.svg\" ;\n            break;        \n        case \"27\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-25-dark.svg\" ;\n            break;        \n        case \"28\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-26-dark.svg\" ;\n            break;        \n        case \"29\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-24-dark.svg\" ;\n            break;        \n        case \"30\":\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-53-dark.svg\" ;\n            break;        \n        case \"142\":\n            currentLogo = \"https://www-league.nhlstatic.com/images/logos/teams-current-circle/54.svg\"\n            break;\n        default:\n            currentLogo = 'https://www-league.nhlstatic.com/images/logos/league-light/133.svg';\n            break;        \n    }\n\n    return(\n        <div className=\"logo-container\">\n            <img src = {currentLogo}\n                alt = {`${props.TeamName} logo`}\n                />\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport '../card.css';\nimport styled from 'styled-components';\n\n//#region STYLES\nconst StyledTeamCard = styled.div`\n\n`\n\n//#endregion STYLES\n\n\nconst TeamCard = (props) => {\n    \n    return(\n        <div className= \"card team-card\"\n             onClick={props.onClick}\n             teamValue={props.teamValue}//Might be redundant?\n             >\n                <h2>{props.cityName}</h2>\n                <h3>{props.teamName}</h3>\n                <Logo teamValue={props.teamValue} />\n        </div>\n    )\n\n}\n\nexport default TeamCard;","\nimport React from 'react';\nimport '../../Cards/card.css'\nimport Logo from '../../Logo/Logo'\n\nconst HomeTeam = (props) => {\n\n    let homeWin;\n    \n    if(props.didHomeWin) {\n        props.didHomeWin === \"homeWin\" ? homeWin = \"winner\" : homeWin = \"loser\";\n    }\n\n    return (\n        <div className={`team home-team ${homeWin}`}>\n            <h2>{props.teamName}</h2>\n            <h3>{props.teamCity}</h3>\n            <Logo teamValue={props.logoValue} />\n            <h2 className=\"score home-score\">{props.homeTeamScore}</h2>\n        </div>\n    )\n}\n\nexport default HomeTeam;","\nimport React from 'react';\nimport '../../Cards/card.css'\nimport Logo from '../../Logo/Logo';\nimport styled from 'styled-components';\n\nconst StyledAwayTeam = styled.div`\n    \n`\n\nconst AwayTeam = (props) => {\n\n    let homeWin;\n    \n    if(props.didHomeWin) {\n        props.didHomeWin === \"homeWin\" ? homeWin = \"loser\" : homeWin = \"winner\";\n    }\n    \n    return (\n        <div className={`team away-team ${homeWin}`}>\n            <h2>{props.teamName}</h2>\n            <h3>{props.teamCity}</h3>\n            <Logo teamValue={props.logoValue} />\n            <h2 className=\"score away-score\">{props.awayTeamScore}</h2>\n        </div>\n    )\n}\n\nexport default AwayTeam;","import React from 'react';\nimport '../../Cards/card.css';\n\nimport HomeTeam from '../ScheduleCard/HomeTeam';\nimport AwayTeam from '../ScheduleCard/AwayTeam';\n\n\nconst Team = (props) => {\n    \n        //Variables that feed into Home team and Away team components\n        let teamName,\n            teamCity,\n            teamValue,\n            logoValue;\n\n        const { awayTeamID, awayTeamScore, didHomeWin, homeTeamID, homeTeamScore, isHomeTeam } = props;\n\n        //Gets props.isHomeTeam from Card.js\n        if(isHomeTeam){\n            teamValue = homeTeamID;\n            logoValue = teamValue.toString();\n\n        } else {\n            teamValue = awayTeamID;\n            logoValue = teamValue.toString();\n        }\n        \n        //Assign teamName and TeamCity data based on teamID\n        switch (teamValue) {\n            case 1:\n                teamName = 'Lightning';\n                teamCity = 'Tampa Bay';\n            break;\n            case 2:\n                teamName = 'Jets';\n                teamCity = 'Winnipeg';\n            break;\n            case 3:\n                teamName = 'Hurricanes';\n                teamCity = 'Carolina';\n            break;\n            case 4:\n                teamName = 'Panthers';\n                teamCity = 'Florida';\n           break;\n            case 5:\n                teamName = 'Capitals';\n                teamCity = 'Washington';\n           break;\n            case 6:\n                teamName = 'Flyers';\n                teamCity = 'Philadelphia';\n           break;\n            case 7:\n                teamName = 'Devils';\n                teamCity = 'New Jersey';\n           break;\n            case 8:\n                teamName = 'Islanders';\n                teamCity = 'New York';\n           break;\n            case 9:\n                teamName = 'Rangers';\n                teamCity = 'New York';\n           break;\n            case 10:\n                teamName = 'Penguins';\n                teamCity = 'Pittsburgh';\n           break;\n            case 11:\n                teamName = 'Bruins';\n                teamCity = 'Boston';\n           break;\n            case 12:\n                teamName = 'Maple Leafs';\n                teamCity = 'Toronto';\n           break;\n            case 13:\n                teamName = 'Senators';\n                teamCity = 'Ottawa';\n           break;\n            case 14:\n                teamName = 'Canadians';\n                teamCity = 'Montreal';\n           break;\n            case 15:\n                teamName = 'Sabres';\n                teamCity = 'Buffalo';\n           break;\n            case 16:\n                teamName = 'Red Wings';\n                teamCity = 'Detroit';\n           break;\n            case 17:\n                teamName = 'Blues';\n                teamCity = 'St. Louis';\n           break;\n            case 18:\n                teamName = 'Predators';\n                teamCity = 'Nasheville';\n           break;\n            case 19:\n                teamName = 'Blue Jackets';\n                teamCity = 'Columbus';\n           break;\n            case 20:\n                teamName = 'Blackhawks';\n                teamCity = 'Chicago';\n           break;\n            case 21:\n                teamName = 'Canucks';\n                teamCity = 'Vancouver';\n           break;\n            case 22:\n                teamName = 'Avalanche';\n                teamCity = 'Colorado';\n           break;\n            case 23:\n                teamName = 'Flames';\n                teamCity = 'Calgary';\n           break;\n            case 24:\n                teamName = 'Oilers';\n                teamCity = 'Edmonton';\n           break;\n            case 25:\n                teamName = 'Wild';\n                teamCity = 'Minnesota';\n           break;\n            case 26:\n                teamName = 'Sharks';\n                teamCity = 'San Jose';\n           break;\n            case 27:\n                teamName = 'Stars';\n                teamCity = 'Dallas';\n           break;\n            case 28:\n                teamName = 'Kings';\n                teamCity = 'Los Angeles';\n           break;\n            case 29:\n                teamName = 'Ducks';\n                teamCity = 'Anaheim';\n           break;\n            case 30:\n                teamName = 'Coyotes';\n                teamCity = 'Arizona';\n           break;\n            case 142:\n                teamName = 'Golden Knights';\n                teamCity = 'Los Vegas';\n           break;\n          default:\n            console.log('error converting data');\n        }\n\n        if(isHomeTeam){\n\n            return(\n                <HomeTeam\n                    teamName={teamName}\n                    teamCity={teamCity}\n                    didHomeWin={didHomeWin}\n                    homeTeamScore={homeTeamScore}\n                    logoValue={logoValue}\n                />\n            )\n\n    } else {\n\n            return(\n                <AwayTeam\n                    teamName={teamName}\n                    teamCity={teamCity}\n                    didHomeWin={didHomeWin}\n                    awayTeamScore={awayTeamScore}\n                    logoValue={logoValue}\n                />\n            )\n        \n        }\n        \n    }\n\n export default Team;","import React from 'react';\nimport '../card.css';\n\n\nconst GameDateContainer = (props) => {\n\n        //Gets date from API response and converts it to a readable format for the Card\n        //Needs to get split off into its own component\n        let jsonDate = new Date(props.gameDateTime),\n            weekday = new Array(7);\n                weekday[0] = \"Sunday\";\n                weekday[1] = \"Monday\";\n                weekday[2] = \"Tuesday\";\n                weekday[3] = \"Wednesday\";\n                weekday[4] = \"Thursday\";\n                weekday[5] = \"Friday\";\n                weekday[6] = \"Saturday\";\n\n        let formattedGameDate = weekday[jsonDate.getDay()] + ', ' + jsonDate.toLocaleDateString() + ' at ' + jsonDate.toLocaleTimeString();\n\n  return (\n        <div className={`date-time team${props.activeTeamID}`}>\n            <p><span className=\"game-date\">{formattedGameDate}</span></p>\n        </div>\n  )\n\n}\n\nexport default GameDateContainer;\n\n","import React from 'react';\nimport '../card.css';\n\nimport Team from '../TeamCard/Team';\nimport GameDateContainer from './GameDateContainer';\n\n\nconst ScheduleCard = (props) => {\n\n    //So... I broke the Game Date Container into its own component.\n    //HOWEVER, I still need to make the current date : game date comparison here, because it affects the style of the whole card.\n\n    let currentDate = new Date(),\n        currentGameDate = new Date(props.gameDateTime),\n        month = currentGameDate.getMonth(),\n        isGamePast = \"past\",\n        didHomeWin;\n\n    if (currentGameDate > currentDate) { isGamePast = \"future\"; }\n    else { props.homeTeamScore > props.awayTeamScore ? didHomeWin = \"homeWin\" : didHomeWin = \"homeLose\"; }\n    \n\n    return (\n\n        <div className={`schedule-card card ${isGamePast} slide-in`}\n            data-month={month}>\n\n            <GameDateContainer\n                gameDateTime={props.gameDateTime}\n                activeTeamID={props.activeTeamID}\n            />\n            <Team\n                didHomeWin={didHomeWin}\n                awayTeamID={props.awayTeamID}\n                teamName={props.teamName}\n                teamCity={props.teamCity}\n                awayTeamScore={props.awayTeamScore}\n            />\n            <p>At</p>\n            <Team\n                isHomeTeam={true}\n                didHomeWin={didHomeWin}\n                homeTeamID={props.homeTeamID}\n                teamName={props.teamName}\n                teamCity={props.teamCity}\n                homeTeamScore={props.homeTeamScore}\n            />\n\n        </div>\n    )\n}\n//TO DO\n//==Fix current games UX\n//==Add more game information onClick\n\nexport default ScheduleCard;\n\n","import React from 'react';\nimport '../Cards/card.css';\nimport TeamCard from './TeamCard/TeamCard';\nimport ScheduleCard from './ScheduleCard/ScheduleCard';\n\nclass Card extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={ }\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n            console.log(\"timeout delay: \");\n    }\n\nrender() {\n\n    const { activeTeamID, awayTeamCity, awayTeamID, awayTeamName, awayTeamScore, cardType, cityName, gameDateTime, handleClick, homeTeamCity, homeTeamID, homeTeamName, homeTeamScore, onClick, month, teamName, teamValue } = this.props;\n     \n        //Team Cards\n        if(cardType === \"teamCard\") {\n            return (\n                <TeamCard\n                    cityName={cityName}\n                    teamName={teamName}\n                    onClick={onClick}\n                    teamValue={teamValue}\n                />\n                );\n            }\n\n        //Schedule Cards\n        if(cardType === \"scheduleCard\") {\n            return(\n                <ScheduleCard\n                    gameDateTime={gameDateTime}\n                    awayTeamID={awayTeamID}\n                    awayTeamName={awayTeamName}\n                    awayTeamCity={awayTeamCity}\n                    awayTeamScore={awayTeamScore}\n                    homeTeamID={homeTeamID}\n                    homeTeamName={homeTeamName}\n                    homeTeamCity={homeTeamCity}\n                    homeTeamScore={homeTeamScore}\n                    onClick={handleClick}\n                    activeTeamID={activeTeamID}\n                    month={month}\n                />\n            )\n        }\n    }\n}\n    \nexport default Card;","import React from 'react';\n\nconst Reload = () => {\n  return (\n    <button className=\"fade-in reload-button\" onClick={ window.location.reload() }>Try again?</button>\n  )\n}\n\nexport default Reload;\n","import React from 'react';\nimport Reload from '../Components/Buttons/Reload'\n\n\n\nimport \"./Error.css\";\n\nconst Error = () => {\n        return(\n            <div className=\"error-container\">\n                <h2>Sorry about that...</h2>\n                <p>Looks like an error occurred.</p>\n                <br/>\n                <Reload />\n            </div>\n        )\n    }\n    \nexport default Error;","import React from 'react';\nimport CardContainer from '../Components/Containers/CardContainer';\nimport Card from '../Components/Cards/Card';\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\nimport Error from '../Utilities/Error';\n\nexport default class ApiCall extends React.Component {\n\n    //schedule: placeholder for data recieved from fetch request\n    //isLoaded: boolean for loading animation\n    //error: if something doesn't go right, load Error component\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            schedule: '',\n            isLoaded: false,\n            error: false\n        };\n    }\n\n    fetchSchedule() {\n        const   username = 'sobrien',\n                password = 'MYSPORTSFEEDS',\n                url = this.props.url,\n                init = {\n                    type: \"GET\",\n                    dataType: 'json',\n                    async: false,\n                    headers: {\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\n                    }\n                };\n        fetch(url, init)\n            .then(data => data.json())\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    schedule: data\n                });\n            },\n            (error) => {\n                console.log('API call failed with error ', error);\n                this.setState({\n                    error: true,\n                });\n            }\n        )\n        return;\n    }\n\n    componentDidUpdate(prevProps) {\n        //If the component updates and the url prop is changed, make fetch request with updated URL\n        if (this.props.url !== prevProps.url) {\n            this.fetchSchedule();\n        }\n    }\n\n    componentDidMount() {\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because the component didn't update.\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\n        this.fetchSchedule();\n    }\n\n    render() {\n        const { error, isLoaded, schedule } = this.state;\n        \n        //Handle failed API Call\n        if (error) { return <Error /> }\n\n        //Is API call \n        if (this.props.ApiLink === \"gameScheduleQuery\") {\n\n            //Loading Animation\n            if (!isLoaded) { return <LoadingCircle /> }\n\n            //Map JSON Data to Card component\n            else {\n                const   gameCard = schedule.games.map((game) =>\n\n                            <Card key={game.schedule.id}\n                                cardType=\"scheduleCard\"\n                                awayTeamName={this.props.awayTeamName}\n                                awayTeamCity={this.props.awayTeamCity}\n                                awayTeamID={game.schedule.awayTeam.id}\n                                awayTeamScore={game.score.awayScoreTotal}\n                                homeTeamName={this.props.homeTeamName}\n                                homeTeamCity={this.props.homeTeamCity}\n                                homeTeamID={game.schedule.homeTeam.id}\n                                homeTeamScore={game.score.homeScoreTotal}\n                                gameDateTime={game.schedule.startTime}\n                                gameID={game.schedule.id}\n                                onClick={this.handleClick}\n                                activeTeamID={this.props.activeTeamID}\n                                activeTeamName={this.props.activeTeamName}\n                            />\n\n                    );\n                //Return Schedule Card container with mapped Schedule Cards\n                return (\n                    <CardContainer containerType=\"card_container_schedule_list\">\n                        {gameCard}\n                    </CardContainer>\n                )\n            }\n        }\n    }\n}\n\n","import React from 'react';\n\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\n\nexport default class GetTeamStats extends React.Component{\n\n//To Do\n// == Document code\n// == Figure out if anything can be broken out into its own component\n\n    constructor (props){\n        super(props);\n\n        //teamStats: Placeholder for data fetched from an API call\n        this.state = {\n            teamStats: '',\n            isLoading: true,\n        };\n    }\n\n    fetchTeamStats(){\n        const   username = 'sobrien',\n                password = 'MYSPORTSFEEDS',\n                url = this.props.url,\n                init = {\n                    type: \"GET\",\n                    dataType: 'json',\n                    async: false,\n                    headers: {\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\n                    }\n                 };\n        fetch(url, init)\n            .then(resp => resp.json())\n            .then(resp => {\n                this.setState({\n                    teamStats: resp,\n                    isLoading: false\n                });\n                });\n                return;\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.url !== prevProps.url){\n            this.fetchTeamStats();\n        }\n    }\n\n    componentDidMount(){\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because spoiler alert, the component didn't update.\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\n        this.fetchTeamStats();\n    }\n\n    render(){\n        if(this.props.ApiLink === \"teamStatsQuery\") {\n\n            if (this.state.isLoading){ \n                //Doesn't work as intended\n                return (\n                    <LoadingCircle />\n                ) \n            }\n            \n            else{\n                const teamWins = this.state.teamStats.teamStatsTotals[0].stats.standings.wins,\n                      teamLosses = this.state.teamStats.teamStatsTotals[0].stats.standings.losses,\n                      teamOvertimeLosses = this.state.teamStats.teamStatsTotals[0].stats.standings.overtimeLosses;\n                \n                    console.log(teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses);\n                    return (\n                       <h3 className=\"fade-in team-record\">Record: ({teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses})</h3>    \n                    )\n                }\n        }\n    }    \n}\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDivisionContainer = styled.section`\n    width:100%;\n    height: 100%;\n    overflow: auto;\n    padding-bottom: 25px;\n    position: relative;\n`;\n\nconst StyledDivisionName = styled.h2`\n    text-align: left;\n`\n\nconst DivisionContainer = (props) => {\n    window.scrollTo(0,0);\n    \n    return(\n        <StyledDivisionContainer>\n            <StyledDivisionName>{ props.divisionTitle }</StyledDivisionName>\n            {props.children}\n        </StyledDivisionContainer>\n    )\n    \n}\n\nexport default DivisionContainer;","import React from 'react';\n\nimport CardContainer from '../../Containers/CardContainer';\nimport DivisionContainer from '../../Containers/DivisionContainer';\nimport Card from '../../Cards/Card';\n\nimport '../../Cards/card.css';\n\nconst TeamList = (props) => {\n\n        return (\n\n            <CardContainer containerType=\"division-container\">\n                <DivisionContainer divisionTitle=\"Atlantic\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Boston\"\n                        teamName=\"Bruins\"\n                        teamValue=\"11\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Buffalo\"\n                        teamName=\"Sabres\"\n                        teamValue=\"15\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Detroit\"\n                        teamName=\"Red Wings\"\n                        teamValue=\"16\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Florida\"\n                        teamName=\"Panthers\"\n                        teamValue=\"4\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Montreal\"\n                        teamName=\"Canadians\"\n                        teamValue=\"14\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Ottawa\"\n                        teamName=\"Senators\"\n                        teamValue=\"13\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Tampa Bay\"\n                        teamName=\"Lightning\"\n                        teamValue=\"1\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Toronto\"\n                        teamName=\"Maple Leafs\"\n                        teamValue=\"12\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Metropolitan\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Carolina\"\n                        teamName=\"Hurricanes\"\n                        teamValue=\"3\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Columbus\"\n                        teamName=\"Blue Jackets\"\n                        teamValue=\"19\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New Jersey\"\n                        teamName=\"Devils\"\n                        teamValue=\"7\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New York\"\n                        teamName=\"Islanders\"\n                        teamValue=\"8\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"New York\"\n                        teamName=\"Rangers\"\n                        teamValue=\"9\"\n                        onClick={props.handleClick}\n                    />\n\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Philadelphia\"\n                        teamName=\"Flyers\"\n                        teamValue=\"6\"\n                        onClick={props.handleClick}\n                    />\n\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Pittsburgh\"\n                        teamName=\"Penguins\"\n                        teamValue=\"10\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Washington\"\n                        teamName=\"Capitals\"\n                        teamValue=\"5\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Central\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Chicago\"\n                        teamName=\"Black Hawks\"\n                        teamValue=\"20\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Colorado\"\n                        teamName=\"Avalanche\"\n                        teamValue=\"22\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Dallas\"\n                        teamName=\"Stars\"\n                        teamValue=\"27\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Minnesota\"\n                        teamName=\"Wild\"\n                        teamValue=\"25\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Nashville\"\n                        teamName=\"Predators\"\n                        teamValue=\"18\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"St. Louis\"\n                        teamName=\"Blues\"\n                        teamValue=\"17\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Winnipeg\"\n                        teamName=\"Jets\"\n                        teamValue=\"2\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n                <DivisionContainer divisionTitle=\"Pacific\">\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Anaheim\"\n                        teamName=\"Ducks\"\n                        teamValue=\"29\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Arizona\"\n                        teamName=\"Coyotes\"\n                        teamValue=\"30\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Calgary\"\n                        teamName=\"Flames\"\n                        teamValue=\"23\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Edmonton\"\n                        teamName=\"Oilers\"\n                        teamValue=\"24\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Los Angeles\"\n                        teamName=\"Kings\"\n                        teamValue=\"28\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"San Jose\"\n                        teamName=\"Sharks\"\n                        teamValue=\"26\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Vancouver\"\n                        teamName=\"Canucks\"\n                        teamValue=\"21\"\n                        onClick={props.handleClick}\n                    />\n                    <Card\n                        cardType=\"teamCard\"\n                        cityName=\"Las Vegas\"\n                        teamName=\"Golden Knights\"\n                        teamValue=\"142\"\n                        onClick={props.handleClick}\n                    />\n                </DivisionContainer>\n            </CardContainer>\n\n        )\n    }\nexport default TeamList","import React from 'react';\nimport styled from 'styled-components';\nimport '../../Utilities/league-colors.css';\n\n//#region STYLES\nconst StyledFab = styled.button`\n  border-radius: 8px;\n  box-shadow: 2px 2px 6px rgba(0,0,0,.4);\n  transition: .5s ease-in-out;\n  border: 2px solid rgba(255,255,255,.5);\n  display: flex;\n  margin:auto;\n  margin-right:0;\n  height: 100%;\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.25);\n      box-shadow: 2px 2px 9px rgba(0,0,0,.65);\n    }\n    &:focus {\n      outline: none;\n    }\n`;\n\nconst StyledFabH2 = styled.h2`\n    margin: auto;\n    padding: 0px 10px;\n    color: currentColor;\n`;\n//#endregion STYLES\n\n\nconst Fab = (props) => {\n\n  const {activeTeamID, onClick, isActive} = props;\n\n  return (\n    <StyledFab className={`team${ activeTeamID }`} onClick={onClick} visibile={isActive}>   \n        <StyledFabH2>{ props.fabText }</StyledFabH2>\n    </StyledFab>\n  );\n};\n\nexport default Fab;\n","import React from 'react';\nimport styled from 'styled-components';\nimport '../Cards/card.css';\n\n\nconst StyledMonthH2 = styled.h2`\n    text-align: left;\n    padding-left: 10px;\n    transition: .3s ease-in-out;\n    opacity: ${props => props.visible ? 1 : 0};\n    transform: ${props => props.visible ? \"\" : \"translateY(15px)\"};\n`\n\nconst StyledMonthContainer = styled.div`\n    height: 50px;\n    border-bottom: 2px solid #000;\n    width: 200px;\n    margin-left: 20px;\n`\n\nclass MonthContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentMonth: 'October',\n            isVisible: false\n        }\n    }\n\n    updateH2 = () => {\n         const SCHEDULE_LIST = document.getElementById(\"card_container_schedule_list\"),\n               MONTHS = {\n                January:  document.querySelectorAll(\"[data-month='0']\")[0].offsetLeft,\n                February: document.querySelectorAll(\"[data-month='1']\")[0].offsetLeft,\n                March:    document.querySelectorAll(\"[data-month='2']\")[0].offsetLeft,\n                April:    document.querySelectorAll(\"[data-month='3']\")[0].offsetLeft,\n                October:  document.querySelectorAll(\"[data-month='9']\")[0].offsetLeft,\n                November: document.querySelectorAll(\"[data-month='10']\")[0].offsetLeft,\n                December: document.querySelectorAll(\"[data-month='11']\")[0].offsetLeft\n        };\n\n        const setMonthState = (month) => {\n            this.setState({\n                isVisible: false\n            });\n\n           setTimeout(()=>{\n               this.setState({\n                   currentMonth: month,\n                   isVisible: true\n               })\n            }, 600);\n\n        };\n        \n            SCHEDULE_LIST.addEventListener(\"scroll\", () => {\n\n                const {currentMonth} = this.state;\n                let scheduleListCheckPoint = SCHEDULE_LIST.scrollLeft + 300;                \n\n            //If the distance between the first card of month X to the left side of card_container_schedule_list is \n            //less than or equal to the distance the card_container_schedule_list has been scrolled (plus the size of one card)\n            //set state of current month to month X.\n\n            switch(true){\n                case scheduleListCheckPoint > 0 && scheduleListCheckPoint < MONTHS.November:\n                    if (currentMonth === \"October\") { break; }\n                        setMonthState(\"October\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.October && scheduleListCheckPoint < MONTHS.December:\n                    if (currentMonth === \"November\") { break; }\n                        setMonthState(\"November\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.November && scheduleListCheckPoint < MONTHS.January:\n                    if (currentMonth === \"December\") { break; } \n                        setMonthState(\"December\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.December && scheduleListCheckPoint < MONTHS.February:\n                    if (currentMonth === \"January\") { break; }\n                        setMonthState(\"January\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.January && scheduleListCheckPoint < MONTHS.March:\n                    if (currentMonth === \"February\") { break; }\n                        setMonthState(\"February\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.February && scheduleListCheckPoint < MONTHS.April:\n                    if (currentMonth === \"March\") { break; }\n                        setMonthState(\"March\");\n                        break;\n                case scheduleListCheckPoint > MONTHS.March:\n                    if (currentMonth === \"April\") { break; }\n                        setMonthState(\"April\");\n                        break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    componentDidMount() {\n        //I need to figure out why #card_container_schedule_list returns null if I don't use setTimeout. \n        //Until then, setTimeout works around that\n        setTimeout(() => {\n            this.updateH2();\n            this.setState({\n                isVisible: true\n            });\n        }, 1000);\n    };\n\n    render() {\n        const {currentMonth, isVisible} = this.state;\n\n        return (\n            <StyledMonthContainer>\n               <StyledMonthH2 visible={isVisible}> { currentMonth } </StyledMonthH2>\n            </StyledMonthContainer>\n        )\n    }\n}\n\nexport default MonthContainer;","import React from 'react';\nimport Header from '../Components/Header/Header';\nimport ApiCall from '../API/ApiCall';\nimport GetTeamStats from '../API/GetTeamStats';\nimport TeamList from '../Components/Cards/TeamCard/TeamList';\nimport Fab from '../Components/Buttons/Fab';\nimport MonthContainer from '../Components/Containers/MonthContainer';\nimport styled from 'styled-components';\nimport '../Utilities/league-colors.css';\n\n//#region STYLES\nconst StyledFabWrapper = styled.div `\n        position: fixed;\n        bottom: 30px;\n        right: 30px;\n        height: 50px;\n        width: 250px;\n        transition: .5s ease-in-out;\n        display: flex;\n`;\n\nconst StyledWrapper = styled.main `\n        position: relative;\n`\n\n//#endregion STYLES\n\nclass Schedule extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            scheduleQueryRecipe: '',\n            teamStatsQueryRecipe: '',\n            isFabActive: false,\n            isTeamListActive: true,\n            isScheduleListActive: false,\n            activeTeamID: '',\n            headerH1: 'Face Off',\n            headerH2: 'Quick access to NHL Schedule, Stats, and more',\n        };\n    }\n\n    handleClick = (e) => {\n        //Properly handles clicks to nested elements. Deep down in my heart I know this isn't right.\n        let targetTeam = e.target.closest(\".card\"),\n            targetTeamValue = targetTeam.getAttribute('teamValue'),\n            //Gets chosen card, then derives teamName and teamCity from its inner HTML\n            currentTeamName = targetTeam.firstChild.innerHTML,\n            currentTeamCity =  targetTeam.firstChild.nextElementSibling.innerHTML,\n            scheduleBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\n            divisionContainer = document.getElementById(\"division-container\");\n            //Transitions TeamCards Out\n            divisionContainer.classList.remove(\"fade-in\");\n            divisionContainer.classList.add(\"fade-out\");\n\n            if(!currentTeamName){ return }\n        this.setState(() => {\n           return {\n                scheduleQueryRecipe: scheduleBaseURL + targetTeamValue,\n                teamStatsQueryRecipe: teamStatsBaseURL + targetTeamValue,\n                isFabActive: true,\n                isTeamListActive: false,\n                isScheduleListActive:true,\n                activeTeamID: targetTeamValue,\n                headerH1: currentTeamName,\n                headerH2: currentTeamCity,\n                headerH3: this.props.currentTeamRecord,\n           };\n        });\n    };\n\n    scrollToNextGame = () => {\n        if (document.getElementsByClassName(\"future\").length > 1) {\n            document.getElementsByClassName(\"future\")[0].previousElementSibling.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        } else { return }\n    }\n\n    \n    resetAPICall = () => {\n        let scheduleQueryBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team='\n        \n\n        this.setState(()=>{\n            return{\n                scheduleQueryRecipe: scheduleQueryBaseURL,\n                teamStatsBaseURL: teamStatsBaseURL,\n                isFabActive: false,\n                isScheduleListActive: false,\n                isTeamListActive: true,\n                headerH1: 'Face Off',\n                headerH2: 'Quick access to NHL Schedule, Stats, and more',\n            };\n        }, window.scrollTo(0,0));\n    };\n\n    render(){\n\n        const {activeTeamID, headerH1, headerH2, isFabActive, isScheduleListActive, isTeamListActive, scheduleQueryRecipe, teamStatsQueryRecipe, teamStatsBaseURL} = this.state;\n\n        if(isScheduleListActive){\n            //Good to have reference to the API link...\n            console.log(\"The current TeamStatsQueryRecipe is \" + teamStatsQueryRecipe);\n            console.log(\"The current scheduleQueryRecipe is \" + scheduleQueryRecipe);\n\n                return (\n                    <div>\n                        <Header activeTeamID={activeTeamID} headerH1={headerH1} headerH2={headerH2}> \n                            <GetTeamStats ApiLink=\"teamStatsQuery\" url={teamStatsQueryRecipe} />\n                        </Header>\n                        \n                        <div className=\"wrapper wrapper__home\">\n                            <h2 className=\"page__title page__title_schedule\">Choose a Game</h2>\n                            \n                            <MonthContainer/>\n                            <ApiCall activeTeamID={activeTeamID} ApiLink=\"gameScheduleQuery\" url={scheduleQueryRecipe}/>\n                            <StyledFabWrapper>\n                                <Fab activeTeamID={activeTeamID} fabText=\"Next Game\" onClick={this.scrollToNextGame} visible={isFabActive} />\n                                <Fab activeTeamID={activeTeamID} fabText=\"Back\" onClick={this.resetAPICall} visible={isFabActive} />\n                            </StyledFabWrapper>        \n                        </div>\n                    </div>\n        \n                )\n        }\n\n        if(isTeamListActive){\n\n            return (\n                <div>\n                    <Header headerH1 = {headerH1} headerH2 = {headerH2} />\n                    <StyledWrapper>\n                        <TeamList handleClick={this.handleClick} teamValue={this.targetTeamValue} />\n                    </StyledWrapper>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Schedule;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"../node_modules/react-router-dom\";\nimport styled from 'styled-components';\nimport Schedule from './Pages/Schedule';\n\nconst StyledApp = styled.div`\n    text-align: center;\n`;\n\nconst App = () => {\n  const baseUrl = process.env.PUBLIC_URL;\n\n  return (\n    <Router>\n      <StyledApp>\n        <Route path={baseUrl + \"/\"} component={Schedule} />\n      </StyledApp>\n    </Router>\n  );\n};\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}