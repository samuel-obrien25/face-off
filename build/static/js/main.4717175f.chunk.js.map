{"version":3,"sources":["Components/Loading/LoadingCircle.js","Components/Header/Header.js","Components/Containers/CardContainer.js","Components/Logo/Logo.js","Components/Cards/TeamCard/TeamCard.js","Components/Cards/ScheduleCard/HomeTeam.js","Components/Cards/ScheduleCard/AwayTeam.js","Components/Cards/TeamCard/Team.js","Components/Cards/ScheduleCard/GameDateContainer.js","Components/Cards/ScheduleCard/ScheduleCard.js","Components/Cards/Card.js","Components/Buttons/Reload.js","Utilities/Error.js","API/ApiCall.js","API/GetTeamStats.js","Components/Containers/DivisionContainer.js","Components/Cards/TeamCard/TeamList.js","Components/Buttons/Fab.js","Pages/Schedule.js","App.js","registerServiceWorker.js","index.js"],"names":["LoadingCircle","react_default","a","createElement","className","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","setState","concat","activeTeamID","Loading_LoadingCircle","headerH1","headerH2","children","React","Component","CardContainer","window","scrollTo","id","containerType","Logo","currentLogo","teamValue","src","alt","TeamName","TeamCard","onClick","cityName","teamName","Components_Logo_Logo","HomeTeam","homeWin","didHomeWin","teamCity","logoValue","homeTeamScore","AwayTeam","awayTeamScore","Team","isHomeTeam","homeTeamID","toString","awayTeamID","console","log","ScheduleCard_HomeTeam","ScheduleCard_AwayTeam","GameDateContainer","jsonDate","Date","gameDateTime","weekday","Array","formattedGameDate","getDay","toLocaleDateString","toLocaleTimeString","ScheduleCard","currentDate","currentGameDate","month","getMonth","isGamePast","data-month","ScheduleCard_GameDateContainer","TeamCard_Team","Card","addCardDelay","cardsList","document","getElementsByClassName","i","length","l","style","animationDelay","cardType","Cards_TeamCard_TeamCard","Cards_ScheduleCard_ScheduleCard","awayTeamName","awayTeamCity","homeTeamName","homeTeamCity","handleClick","Reload","location","reload","Error","Buttons_Reload","ApiCall","schedule","isLoaded","error","_this2","url","init","type","dataType","async","headers","Authorization","btoa","username","fetch","then","data","json","prevProps","fetchSchedule","_this3","_this$state","src_Utilities_Error","ApiLink","gameCard","games","map","game","Cards_Card","key","awayTeam","score","awayScoreTotal","homeTeam","homeScoreTotal","startTime","gameID","activeTeamName","Containers_CardContainer","GetTeamStats","teamStats","resp","fetchTeamStats","teamWins","teamStatsTotals","stats","standings","wins","teamLosses","losses","teamOvertimeLosses","overtimeLosses","DivisionContainer","divisionTitle","TeamList","Containers_DivisionContainer","Fab","fabClass","visibile","isActive","fabText","Schedule","bind","assertThisInitialized","resetAPICall","scrollToNextGame","scheduleQueryRecipe","teamStatsQueryRecipe","isFabActive","isTeamListActive","isScheduleListActive","e","currentTeam","target","closest","getAttribute","currentTeamName","firstChild","innerHTML","nextSibling","divisionContainer","getElementById","classList","remove","add","currentTeamRecord","previousElementSibling","scrollIntoView","behavior","block","teamStatsBaseURL","timer","setInterval","scheduleCardsList","january","february","march","april","october","november","december","monthH2s","clearInterval","querySelectorAll","insertAdjacentElement","setDateH2","Components_Header_Header","GetTeamStats_GetTeamStats","ApiCall_ApiCall","Buttons_Fab","visible","TeamCard_TeamList","App","BrowserRouter","Route","path","baseUrl","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4717175f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./Loading.css\";\r\n\r\nconst LoadingCircle = () => {\r\n        return(\r\n            <div className=\"loading-circle\"></div>\r\n        )\r\n    }\r\n    \r\nexport default LoadingCircle;","import React from 'react';\r\nimport LoadingCircle from '../Loading/LoadingCircle';\r\n\r\nimport '../Header/Header.css';\r\n\r\nclass Header extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isLoading: false});\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isLoading) {\r\n            return (\r\n                <header className={`App-header team${this.props.activeTeamID}`}>\r\n                    <LoadingCircle />\r\n                </header>\r\n            )\r\n        } else{\r\n            return (\r\n            <header className={`App-header team${this.props.activeTeamID}`}>\r\n                <h1 className=\"App-title fade-in\">{this.props.headerH1}</h1>\r\n                <h2 className=\"App-subtitle fade-in\">{this.props.headerH2}</h2>\r\n                    {this.props.children}\r\n            </header>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Header;\r\n    ","import React from 'react';\r\n\r\nimport '../Cards/card.css';\r\n\r\nconst CardContainer = (props) => {\r\n    window.scrollTo(0,0);\r\n\r\n    return(\r\n        <div id={props.containerType} className= \"card-container slide-in\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardContainer;","import React from 'react';\r\nimport '../Logo/Logo.css';\r\n\r\nconst Logo = (props) => {\r\n    let teamValue = props.teamValue,\r\n        currentLogo;\r\n\r\n    switch(teamValue) {\r\n        case \"1\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-14-dark.svg\";\r\n            break;\r\n        case \"2\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-52-dark.svg\";\r\n            break;\r\n        case \"3\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-12-dark.svg\" ;\r\n            break;\r\n        case \"4\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-13-dark.svg\" ;\r\n            break;\r\n        case \"5\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-15-dark.svg\";\r\n            break;\r\n        case \"6\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-4-dark.svg\" ;\r\n            break;\r\n        case \"7\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-1-dark.svg\" ;\r\n            break;\r\n        case \"8\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-2-dark.svg\" ;\r\n            break;\r\n        case \"9\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-3-dark.svg\" ;\r\n            break;\r\n        case \"10\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-5-dark.svg\" ;\r\n            break;\r\n        case \"11\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-6-dark.svg\" ;\r\n            break;\r\n        case \"12\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-10-dark.svg\" ;\r\n            break;\r\n        case \"13\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-9-dark.svg\" ;\r\n            break;\r\n        case \"14\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-8-dark.svg\" ;\r\n            break;\r\n        case \"15\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-7-dark.svg\" ;\r\n            break;\r\n        case \"16\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-17-dark.svg\" ;\r\n            break;\r\n        case \"17\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-19-dark.svg\" ;\r\n            break;        \r\n        case \"18\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-18-dark.svg\" ;\r\n            break;       \r\n        case \"19\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-29-dark.svg\" ;\r\n            break;\r\n        case \"20\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-16-dark.svg\" ;\r\n            break;\r\n        case \"21\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-23-dark.svg\" ;\r\n            break;        \r\n        case \"22\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-21-dark.svg\" ;\r\n            break;        \r\n        case \"23\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-20-dark.svg\" ;\r\n            break;        \r\n        case \"24\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-22-dark.svg\" ;\r\n            break;        \r\n        case \"25\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-30-dark.svg\" ;\r\n            break;        \r\n        case \"26\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-28-dark.svg\" ;\r\n            break;        \r\n        case \"27\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-25-dark.svg\" ;\r\n            break;        \r\n        case \"28\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-26-dark.svg\" ;\r\n            break;        \r\n        case \"29\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-24-dark.svg\" ;\r\n            break;        \r\n        case \"30\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/nhl.com/builds/site-core/3358ed0ede20e7e33cb07ec6be0713405ff6b894_1539029735/images/logos/team/current/team-53-dark.svg\" ;\r\n            break;        \r\n        case \"142\":\r\n            currentLogo = \"https://www-league.nhlstatic.com/images/logos/teams-current-circle/54.svg\"\r\n            break;\r\n        default:\r\n            currentLogo = 'https://www-league.nhlstatic.com/images/logos/league-light/133.svg';\r\n            break;        \r\n    }\r\n\r\n    return(\r\n        <div className=\"logo-container\">\r\n            <img src = {currentLogo}\r\n                alt = {`${props.TeamName} logo`}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport '../card.css';\r\n\r\nconst TeamCard = (props) => {\r\n    \r\n    return(\r\n        <div className= \"card team-card slide-in\"\r\n             onClick={props.onClick}\r\n             teamValue={props.teamValue}//Might be redundant?\r\n             >\r\n                <h2>{props.cityName}</h2>\r\n                <h3>{props.teamName}</h3>\r\n                <Logo teamValue={props.teamValue} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TeamCard;","\r\nimport React from 'react';\r\nimport '../../Cards/card.css'\r\nimport Logo from '../../Logo/Logo'\r\n\r\nconst HomeTeam = (props) => {\r\n\r\n    let homeWin;\r\n    \r\n    if(props.didHomeWin) {\r\n        props.didHomeWin === \"homeWin\" ? homeWin = \"winner\" : homeWin = \"loser\";\r\n    }\r\n\r\n    return (\r\n        <div className={`team home-team ${homeWin}`}>\r\n            <h2>{props.teamName}</h2>\r\n            <h3>{props.teamCity}</h3>\r\n            <Logo teamValue={props.logoValue} />\r\n            <h2 className=\"score home-score\">{props.homeTeamScore}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeTeam;","\r\nimport React from 'react';\r\nimport '../../Cards/card.css'\r\nimport Logo from '../../Logo/Logo'\r\n\r\nconst AwayTeam = (props) => {\r\n\r\n    let homeWin;\r\n    \r\n    if(props.didHomeWin) {\r\n        props.didHomeWin === \"homeWin\" ? homeWin = \"loser\" : homeWin = \"winner\";\r\n    }\r\n    \r\n    return (\r\n        <div className={`team away-team ${homeWin}`}>\r\n            <h2>{props.teamName}</h2>\r\n            <h3>{props.teamCity}</h3>\r\n            <Logo teamValue={props.logoValue} />\r\n            <h2 className=\"score away-score\">{props.awayTeamScore}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AwayTeam;","import React from 'react';\r\nimport '../../Cards/card.css';\r\n\r\nimport HomeTeam from '../ScheduleCard/HomeTeam';\r\nimport AwayTeam from '../ScheduleCard/AwayTeam';\r\n\r\n\r\nconst Team = (props) => {\r\n        //Variables that feed into Home team and Away team components\r\n        let teamName,\r\n            teamCity,\r\n            teamValue,\r\n            logoValue;\r\n\r\n            //Gets props.isHomeTeam from Card.js\r\n            \r\n        if(props.isHomeTeam){\r\n            teamValue = props.homeTeamID;\r\n            logoValue = teamValue.toString();\r\n\r\n        } else {\r\n            teamValue = props.awayTeamID;\r\n            logoValue = teamValue.toString();\r\n        }\r\n            //Assign teamName and TeamCity data based on teamID\r\n        switch (teamValue) {\r\n            case 1:\r\n                teamName = 'Lightning';\r\n                teamCity = 'Tampa Bay';\r\n            break;\r\n            case 2:\r\n                teamName = 'Jets';\r\n                teamCity = 'Winnipeg';\r\n            break;\r\n            case 3:\r\n                teamName = 'Hurricanes';\r\n                teamCity = 'Carolina';\r\n            break;\r\n            case 4:\r\n                teamName = 'Panthers';\r\n                teamCity = 'Florida';\r\n           break;\r\n            case 5:\r\n                teamName = 'Capitals';\r\n                teamCity = 'Washington';\r\n           break;\r\n            case 6:\r\n                teamName = 'Flyers';\r\n                teamCity = 'Philadelphia';\r\n           break;\r\n            case 7:\r\n                teamName = 'Devils';\r\n                teamCity = 'New Jersey';\r\n           break;\r\n            case 8:\r\n                teamName = 'Islanders';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 9:\r\n                teamName = 'Rangers';\r\n                teamCity = 'New York';\r\n           break;\r\n            case 10:\r\n                teamName = 'Penguins';\r\n                teamCity = 'Pittsburgh';\r\n           break;\r\n            case 11:\r\n                teamName = 'Bruins';\r\n                teamCity = 'Boston';\r\n           break;\r\n            case 12:\r\n                teamName = 'Maple Leafs';\r\n                teamCity = 'Toronto';\r\n           break;\r\n            case 13:\r\n                teamName = 'Senators';\r\n                teamCity = 'Ottawa';\r\n           break;\r\n            case 14:\r\n                teamName = 'Canadians';\r\n                teamCity = 'Montreal';\r\n           break;\r\n            case 15:\r\n                teamName = 'Sabres';\r\n                teamCity = 'Buffalo';\r\n           break;\r\n            case 16:\r\n                teamName = 'Red Wings';\r\n                teamCity = 'Detroit';\r\n           break;\r\n            case 17:\r\n                teamName = 'Blues';\r\n                teamCity = 'St. Louis';\r\n           break;\r\n            case 18:\r\n                teamName = 'Predators';\r\n                teamCity = 'Nasheville';\r\n           break;\r\n            case 19:\r\n                teamName = 'Blue Jackets';\r\n                teamCity = 'Columbus';\r\n           break;\r\n            case 20:\r\n                teamName = 'Blackhawks';\r\n                teamCity = 'Chicago';\r\n           break;\r\n            case 21:\r\n                teamName = 'Canucks';\r\n                teamCity = 'Vancouver';\r\n           break;\r\n            case 22:\r\n                teamName = 'Avalanche';\r\n                teamCity = 'Colorado';\r\n           break;\r\n            case 23:\r\n                teamName = 'Flames';\r\n                teamCity = 'Calgary';\r\n           break;\r\n            case 24:\r\n                teamName = 'Oilers';\r\n                teamCity = 'Edmonton';\r\n           break;\r\n            case 25:\r\n                teamName = 'Wild';\r\n                teamCity = 'Minnesota';\r\n           break;\r\n            case 26:\r\n                teamName = 'Sharks';\r\n                teamCity = 'San Jose';\r\n           break;\r\n            case 27:\r\n                teamName = 'Stars';\r\n                teamCity = 'Dallas';\r\n           break;\r\n            case 28:\r\n                teamName = 'Kings';\r\n                teamCity = 'Los Angeles';\r\n           break;\r\n            case 29:\r\n                teamName = 'Ducks';\r\n                teamCity = 'Anaheim';\r\n           break;\r\n            case 30:\r\n                teamName = 'Coyotes';\r\n                teamCity = 'Arizona';\r\n           break;\r\n            case 142:\r\n                teamName = 'Golden Knights';\r\n                teamCity = 'Los Vegas';\r\n           break;\r\n          default:\r\n            console.log('error converting data');\r\n        }\r\n\r\n        if(props.isHomeTeam){\r\n\r\n            return(\r\n                <HomeTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={props.didHomeWin}\r\n                    homeTeamScore={props.homeTeamScore}\r\n                    logoValue={logoValue}\r\n                />\r\n            )\r\n\r\n    } else {\r\n\r\n            return(\r\n                <AwayTeam\r\n                    teamName={teamName}\r\n                    teamCity={teamCity}\r\n                    didHomeWin={props.didHomeWin}\r\n                    awayTeamScore={props.awayTeamScore}\r\n                    logoValue={logoValue}\r\n                />\r\n            )\r\n        \r\n        }\r\n    }\r\n\r\n export default Team;","import React from 'react';\r\nimport '../card.css';\r\n\r\n\r\nconst GameDateContainer = (props) => {\r\n\r\n        //Gets date from API response and converts it to a readable format for the Card\r\n        //Needs to get split off into its own component\r\n        let jsonDate = new Date(props.gameDateTime),\r\n            weekday = new Array(7);\r\n                weekday[0] = \"Sunday\";\r\n                weekday[1] = \"Monday\";\r\n                weekday[2] = \"Tuesday\";\r\n                weekday[3] = \"Wednesday\";\r\n                weekday[4] = \"Thursday\";\r\n                weekday[5] = \"Friday\";\r\n                weekday[6] = \"Saturday\";\r\n\r\n        let formattedGameDate = weekday[jsonDate.getDay()] + ', ' + jsonDate.toLocaleDateString() + ' at ' + jsonDate.toLocaleTimeString();\r\n\r\n  return (\r\n        <div className={`date-time team${props.activeTeamID}`}>\r\n            <p><span className=\"game-date\">{formattedGameDate}</span></p>\r\n        </div>\r\n  )\r\n\r\n}\r\n\r\nexport default GameDateContainer;\r\n\r\n","import React from 'react';\r\nimport '../card.css';\r\n\r\nimport Team from '../TeamCard/Team';\r\nimport GameDateContainer from './GameDateContainer';\r\n\r\n\r\nconst ScheduleCard = (props) => {\r\n\r\n    //So... I broke the Game Date Container into its own component.\r\n    //HOWEVER, I still need to make the current date : game date comparison here, because it affects the style of the whole card.\r\n\r\n    let currentDate = new Date(),\r\n        currentGameDate = new Date(props.gameDateTime),\r\n        month = currentGameDate.getMonth(),\r\n        isGamePast = \"past\",\r\n        didHomeWin;\r\n\r\n    if (currentGameDate > currentDate) { isGamePast = \"future\"; }\r\n    else { props.homeTeamScore > props.awayTeamScore ? didHomeWin = \"homeWin\" : didHomeWin = \"homeLose\"; }\r\n    \r\n\r\n    return (\r\n\r\n        <div className={`schedule-card card ${isGamePast}`}\r\n            data-month={month}>\r\n\r\n            <GameDateContainer\r\n                gameDateTime={props.gameDateTime}\r\n                activeTeamID={props.activeTeamID}\r\n            />\r\n            <Team\r\n                didHomeWin={didHomeWin}\r\n                awayTeamID={props.awayTeamID}\r\n                teamName={props.teamName}\r\n                teamCity={props.teamCity}\r\n                awayTeamScore={props.awayTeamScore}\r\n            />\r\n            <p>At</p>\r\n            <Team\r\n                isHomeTeam={true}\r\n                didHomeWin={didHomeWin}\r\n                homeTeamID={props.homeTeamID}\r\n                teamName={props.teamName}\r\n                teamCity={props.teamCity}\r\n                homeTeamScore={props.homeTeamScore}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n//TO DO\r\n//==Fix current games UX\r\n//==Add more game information onClick\r\n\r\nexport default ScheduleCard;\r\n\r\n","import React from 'react';\r\nimport '../Cards/card.css';\r\nimport TeamCard from './TeamCard/TeamCard';\r\nimport ScheduleCard from './ScheduleCard/ScheduleCard';\r\n\r\nclass Card extends React.Component{\r\n    //Cycles through each card on mount and adds animation delay.\r\n    addCardDelay = () => {\r\n        let cardsList = document.getElementsByClassName(\"card\"),\r\n            i = 0;\r\n\r\n        for (i; i < cardsList.length; i++) {\r\n            let j = (i / 12),\r\n                k = j.toString(),\r\n                l = k + 's';\r\n            cardsList[i].style.animationDelay = l;\r\n        }\r\n    } \r\n\r\n    componentDidMount() {\r\n        this.addCardDelay();\r\n    }\r\n        \r\nrender() {\r\n        //Team Cards\r\n            if(this.props.cardType === \"teamCard\") {\r\n                return (\r\n                    <TeamCard \r\n                        cityName= {this.props.cityName}\r\n                        teamName={this.props.teamName}\r\n                        onClick={this.props.onClick}\r\n                        teamValue={this.props.teamValue}\r\n                    />\r\n                  );\r\n                }\r\n\r\n        //Schedule Cards\r\n        if(this.props.cardType === \"scheduleCard\") {\r\n            //Adds card animation delay effect\r\n            this.addCardDelay();\r\n\r\n            return(\r\n                <ScheduleCard\r\n                    gameDateTime={this.props.gameDateTime}\r\n                    awayTeamID={this.props.awayTeamID}\r\n                    awayTeamName={this.props.awayTeamName}\r\n                    awayTeamCity={this.props.awayTeamCity}\r\n                    awayTeamScore={this.props.awayTeamScore}\r\n                    homeTeamID={this.props.homeTeamID}\r\n                    homeTeamName={this.props.homeTeamName}\r\n                    homeTeamCity={this.props.homeTeamCity}\r\n                    homeTeamScore={this.props.homeTeamScore}\r\n                    onClick={this.props.handleClick}\r\n                    activeTeamID={this.props.activeTeamID}\r\n                    month={this.props.month}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n    \r\nexport default Card;","import React from 'react';\r\nimport '../Buttons/Buttons.css';\r\n\r\nconst Reload = () => {\r\n  return (\r\n    <button className=\"fade-in reload-button\"\r\n            onClick={ window.location.reload() }\r\n    >Try again?</button>\r\n  )\r\n}\r\n\r\nexport default Reload;\r\n","import React from 'react';\r\nimport Reload from '../Components/Buttons/Reload'\r\n\r\n\r\n\r\nimport \"./Error.css\";\r\n\r\nconst Error = () => {\r\n        return(\r\n            <div className=\"error-container\">\r\n                <h2>Sorry about that...</h2>\r\n                <p>Looks like an error occurred.</p>\r\n                <br/>\r\n                <Reload />\r\n            </div>\r\n        )\r\n    }\r\n    \r\nexport default Error;","import React from 'react';\r\nimport CardContainer from '../Components/Containers/CardContainer';\r\nimport Card from '../Components/Cards/Card';\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\nimport Error from '../Utilities/Error';\r\nimport '../App.css'\r\n\r\nexport default class ApiCall extends React.Component {\r\n\r\n    //To Do\r\n    // == Document code\r\n    // == Figure out if anything can be broken out into its own component\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schedule: '',\r\n            isLoaded: false,\r\n            error: false\r\n        };\r\n    }\r\n\r\n    fetchSchedule() {\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = this.props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                };\r\n        fetch(url, init)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    schedule: data\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log('API call failed with error ', error);\r\n                this.setState({\r\n                    error: true,\r\n                });\r\n            }\r\n        )\r\n        return;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.url !== prevProps.url) {\r\n            this.fetchSchedule();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\r\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because the component didn't update.\r\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\r\n        this.fetchSchedule();\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, schedule } = this.state;\r\n        \r\n        //Handle failed API Call\r\n        if (error) { return <Error /> }\r\n\r\n        //Is API call \r\n        if (this.props.ApiLink === \"gameScheduleQuery\") {\r\n\r\n            //Loading Animation\r\n            if (!isLoaded) { return <LoadingCircle /> }\r\n\r\n            //Map JSON Data to Card component\r\n            else {\r\n                const   gameCard = schedule.games.map((game) =>\r\n                            <Card key={game.schedule.id}\r\n                                cardType=\"scheduleCard\"\r\n                                awayTeamName={this.props.awayTeamName}\r\n                                awayTeamCity={this.props.awayTeamCity}\r\n                                awayTeamID={game.schedule.awayTeam.id}\r\n                                awayTeamScore={game.score.awayScoreTotal}\r\n                                homeTeamName={this.props.homeTeamName}\r\n                                homeTeamCity={this.props.homeTeamCity}\r\n                                homeTeamID={game.schedule.homeTeam.id}\r\n                                homeTeamScore={game.score.homeScoreTotal}\r\n                                gameDateTime={game.schedule.startTime}\r\n                                gameID={game.schedule.id}\r\n                                onClick={this.handleClick}\r\n                                activeTeamID={this.props.activeTeamID}\r\n                                activeTeamName={this.props.activeTeamName}\r\n                            />\r\n                    );\r\n                //Return Schedule Card container with mapped Schedule Cards\r\n                return (\r\n                    <CardContainer containerType=\"card_container_schedule_list\">\r\n                        {gameCard}\r\n                    </CardContainer>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport LoadingCircle from '../Components/Loading/LoadingCircle';\r\nimport '../App.css'\r\n\r\nexport default class GetTeamStats extends React.Component{\r\n\r\n//To Do\r\n// == Document code\r\n// == Figure out if anything can be broken out into its own component\r\n\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            teamStats: '',\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    fetchTeamStats(){\r\n        const   username = 'sobrien',\r\n                password = 'MYSPORTSFEEDS',\r\n                url = this.props.url,\r\n                init = {\r\n                    type: \"GET\",\r\n                    dataType: 'json',\r\n                    async: false,\r\n                    headers: {\r\n                        \"Authorization\": \"Basic \" + btoa(username + \":\" + password)\r\n                    }\r\n                 };\r\n        fetch(url, init)\r\n            .then(resp => resp.json())\r\n            .then(resp => {\r\n                this.setState({\r\n                    teamStats: resp,\r\n                    isLoading: false\r\n                });\r\n                });\r\n                return;\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.url !== prevProps.url){\r\n            this.fetchTeamStats();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //For future reference: Since the ApiCall component is now MOUNTING on TeamCard click instead of UPDATING, getAPIData() gets called in componentDidMount INSTEAD of ONLY checking if prevProps !== current props in componentDidUpdate.\r\n        //Otherwise, ONLY making that check in componentDidUpdate just won't call the API, because spoiler alert, the component didn't update.\r\n        //Calling the API in the render method and checking if prevProps !== current props will result in many hundreds of calls to the API. MySportsFeeds: If you ever read this, my bad...\r\n        this.fetchTeamStats();\r\n    }\r\n\r\n    render(){\r\n        if(this.props.ApiLink === \"teamStatsQuery\") {\r\n\r\n            if (this.state.isLoading){ \r\n                //Doesn't work as intended\r\n                return (\r\n                    <LoadingCircle />\r\n                ) \r\n            }\r\n            \r\n            else{\r\n                const teamWins = this.state.teamStats.teamStatsTotals[0].stats.standings.wins,\r\n                      teamLosses = this.state.teamStats.teamStatsTotals[0].stats.standings.losses,\r\n                      teamOvertimeLosses = this.state.teamStats.teamStatsTotals[0].stats.standings.overtimeLosses;\r\n                \r\n                    console.log(teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses);\r\n                    return (\r\n                       <h2 className=\"fade-in team-record\">Record: ({teamWins + \", \" + teamLosses + \", \" + teamOvertimeLosses})</h2>    \r\n                    )\r\n                }\r\n        }\r\n    }    \r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport '../Cards/card.css';\r\n\r\nconst DivisionContainer = (props) => {\r\n    window.scrollTo(0,0);\r\n    \r\n    return(\r\n        <section className=\"division slide-in\">\r\n            <h2 className=\"division-name\">{props.divisionTitle}</h2>\r\n            {props.children}\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\nexport default DivisionContainer;","import React from 'react';\r\n\r\nimport CardContainer from '../../Containers/CardContainer';\r\nimport DivisionContainer from '../../Containers/DivisionContainer';\r\nimport Card from '../../Cards/Card';\r\n\r\nimport '../../Cards/card.css';\r\n\r\nconst TeamList = (props) => {\r\n\r\n        return (\r\n\r\n            <CardContainer containerType=\"division-container\">\r\n                <DivisionContainer divisionTitle=\"Atlantic\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Boston\"\r\n                        teamName=\"Bruins\"\r\n                        teamValue=\"11\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Buffalo\"\r\n                        teamName=\"Sabres\"\r\n                        teamValue=\"15\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Detroit\"\r\n                        teamName=\"Red Wings\"\r\n                        teamValue=\"16\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Florida\"\r\n                        teamName=\"Panthers\"\r\n                        teamValue=\"4\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Montreal\"\r\n                        teamName=\"Canadians\"\r\n                        teamValue=\"14\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Ottawa\"\r\n                        teamName=\"Senators\"\r\n                        teamValue=\"13\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Tampa Bay\"\r\n                        teamName=\"Lightning\"\r\n                        teamValue=\"1\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Toronto\"\r\n                        teamName=\"Maple Leafs\"\r\n                        teamValue=\"12\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Metropolitan\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Carolina\"\r\n                        teamName=\"Hurricanes\"\r\n                        teamValue=\"3\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Columbus\"\r\n                        teamName=\"Blue Jackets\"\r\n                        teamValue=\"19\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New Jersey\"\r\n                        teamName=\"Devils\"\r\n                        teamValue=\"7\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Islanders\"\r\n                        teamValue=\"8\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"New York\"\r\n                        teamName=\"Rangers\"\r\n                        teamValue=\"9\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Philadelphia\"\r\n                        teamName=\"Flyers\"\r\n                        teamValue=\"6\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Pittsburgh\"\r\n                        teamName=\"Penguins\"\r\n                        teamValue=\"10\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Washington\"\r\n                        teamName=\"Capitals\"\r\n                        teamValue=\"5\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Central\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Chicago\"\r\n                        teamName=\"Black Hawks\"\r\n                        teamValue=\"20\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Colorado\"\r\n                        teamName=\"Avalanche\"\r\n                        teamValue=\"22\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Dallas\"\r\n                        teamName=\"Stars\"\r\n                        teamValue=\"27\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Minnesota\"\r\n                        teamName=\"Wild\"\r\n                        teamValue=\"25\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Nashville\"\r\n                        teamName=\"Predators\"\r\n                        teamValue=\"18\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"St. Louis\"\r\n                        teamName=\"Blues\"\r\n                        teamValue=\"17\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Winnipeg\"\r\n                        teamName=\"Jets\"\r\n                        teamValue=\"2\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n                <DivisionContainer divisionTitle=\"Pacific\">\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Anaheim\"\r\n                        teamName=\"Ducks\"\r\n                        teamValue=\"29\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Arizona\"\r\n                        teamName=\"Coyotes\"\r\n                        teamValue=\"30\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Calgary\"\r\n                        teamName=\"Flames\"\r\n                        teamValue=\"23\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Edmonton\"\r\n                        teamName=\"Oilers\"\r\n                        teamValue=\"24\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Los Angeles\"\r\n                        teamName=\"Kings\"\r\n                        teamValue=\"28\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"San Jose\"\r\n                        teamName=\"Sharks\"\r\n                        teamValue=\"26\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Vancouver\"\r\n                        teamName=\"Canucks\"\r\n                        teamValue=\"21\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                    <Card\r\n                        cardType=\"teamCard\"\r\n                        cityName=\"Las Vegas\"\r\n                        teamName=\"Golden Knights\"\r\n                        teamValue=\"142\"\r\n                        onClick={props.handleClick}\r\n                    />\r\n                </DivisionContainer>\r\n            </CardContainer>\r\n\r\n        )\r\n    }\r\nexport default TeamList","import React from 'react';\r\nimport '../Buttons/Buttons.css';\r\n\r\nconst Fab = (props) => {\r\n  return (\r\n    <button className={`fade-in fab ${props.fabClass}`}\r\n            onClick={props.onClick}\r\n            visibile={props.isActive}\r\n    >   \r\n        <h2>{props.fabText}</h2>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Fab;\r\n","import React from 'react';\r\nimport Header from '../Components/Header/Header';\r\nimport ApiCall from '../API/ApiCall';\r\nimport GetTeamStats from '../API/GetTeamStats';\r\nimport TeamList from '../Components/Cards/TeamCard/TeamList';\r\nimport Fab from '../Components/Buttons/Fab';\r\nimport '../App.css';\r\nimport '../Utilities/league-colors.css';\r\n\r\nclass Schedule extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.resetAPICall = this.resetAPICall.bind(this);\r\n        this.scrollToNextGame = this.scrollToNextGame.bind(this);\r\n        this.state = {\r\n            scheduleQueryRecipe: '',\r\n            teamStatsQueryRecipe: '',\r\n            isFabActive: false,\r\n            isTeamListActive: true,\r\n            isScheduleListActive: false,\r\n            activeTeamID: '',\r\n            headerH1: 'Face Off',\r\n            headerH2: 'Quick access to NHL Schedule, Stats, and more',\r\n        };\r\n    }\r\n\r\n    handleClick(e) {\r\n                //Properly handles clicks to nested elements. Deep down in my heart I know this probably isn't right.\r\n        let currentTeam = e.target.closest(\".card\").getAttribute('teamValue'), \r\n            currentTeamName = e.target.closest(\".card\").firstChild.innerHTML + \" \" + e.target.closest(\".card\").firstChild.nextSibling.innerHTML, //Gets closest card, then concatenates(?) child H2 and H3\r\n            scheduleBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team=',\r\n            divisionContainer = document.getElementById(\"division-container\");\r\n            //Transitions TeamCards Out\r\n            divisionContainer.classList.remove(\"fade-in\");\r\n            divisionContainer.classList.add(\"fade-out\");\r\n\r\n            if(!currentTeamName){ \r\n                return }\r\n        this.setState(() => {\r\n           return {\r\n                scheduleQueryRecipe: scheduleBaseURL + currentTeam,\r\n                teamStatsQueryRecipe: teamStatsBaseURL + currentTeam,\r\n                isFabActive: true,\r\n                isTeamListActive: false,\r\n                isScheduleListActive:true,\r\n                activeTeamID: currentTeam,\r\n                headerH1: currentTeamName,\r\n                headerH2: this.props.currentTeamRecord,\r\n           };\r\n        });\r\n    };\r\n\r\n    scrollToNextGame(){\r\n        if (document.getElementsByClassName(\"future\").length > 1) {\r\n            document.getElementsByClassName(\"future\")[0].previousElementSibling.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            });\r\n        } else { return }\r\n    }\r\n\r\n    resetAPICall() {\r\n        let scheduleQueryBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/games.json?team=',\r\n            teamStatsBaseURL = 'https://api.mysportsfeeds.com/v2.0/pull/nhl/2018-2019-regular/team_stats_totals.json?team='\r\n        \r\n\r\n        this.setState(()=>{\r\n            return{\r\n                scheduleQueryRecipe: scheduleQueryBaseURL,\r\n                teamStatsBaseURL: teamStatsBaseURL,\r\n                isFabActive: false,\r\n                isScheduleListActive: false,\r\n                isTeamListActive: true,\r\n                headerH1: 'Face Off',\r\n                headerH2: 'Quick access to NHL Schedule, Stats, and more',\r\n            };\r\n        }, window.scrollTo(0,0));\r\n    };\r\n\r\n    setDateH2(){\r\n\r\n        //Basically, I have no idea where to call this function WITHOUT setinterval.\r\n        //It works...\r\n\r\n        let timer = setInterval(prependMonthSection, 200);\r\n\r\n        function prependMonthSection() {\r\n            let scheduleCardsList = document.getElementsByClassName(\"schedule-card\"),\r\n\r\n                january = document.createElement(\"H2\"),\r\n                february = document.createElement(\"H2\"),\r\n                march = document.createElement(\"H2\"),\r\n                april = document.createElement(\"H2\"),\r\n                october = document.createElement(\"H2\"),\r\n                november = document.createElement(\"H2\"),\r\n                december = document.createElement(\"H2\");\r\n                \r\n                january.innerHTML = \"January\";\r\n                february.innerHTML = \"February\";\r\n                march.innerHTML = \"March\";\r\n                april.innerHTML = \"April\";\r\n                october.innerHTML = \"October\";\r\n                november.innerHTML = \"November\";\r\n                december.innerHTML = \"December\";\r\n\r\n            let monthH2s = [january, february, march, april, october, november, december];\r\n\r\n                for(let i = 0; i < monthH2s.length; i++){\r\n                    monthH2s[i].className = \"month\";\r\n                }\r\n\r\n            if(scheduleCardsList.length > 60){\r\n                clearInterval(timer);\r\n                document.querySelectorAll(\"[data-month='0']\")[0].insertAdjacentElement('beforebegin', january);\r\n                document.querySelectorAll(\"[data-month='1']\")[0].insertAdjacentElement('beforebegin', february);\r\n                document.querySelectorAll(\"[data-month='2']\")[0].insertAdjacentElement('beforebegin', march);\r\n                document.querySelectorAll(\"[data-month='3']\")[0].insertAdjacentElement('beforebegin', april);\r\n                document.querySelectorAll(\"[data-month='9']\")[0].insertAdjacentElement('beforebegin', october);\r\n                document.querySelectorAll(\"[data-month='10']\")[0].insertAdjacentElement('beforebegin', november);\r\n                document.querySelectorAll(\"[data-month='11']\")[0].insertAdjacentElement('beforebegin', december);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.isScheduleListActive){\r\n            //Good to have reference to the API link...\r\n            console.log(\"The current TeamStatsQueryRecipe is \" + this.state.teamStatsQueryRecipe);\r\n            console.log(\"The current scheduleQueryRecipe is \" + this.state.scheduleQueryRecipe);\r\n            this.setDateH2();\r\n\r\n                return (\r\n                    <div>\r\n                        <Header\r\n                            activeTeamID={this.state.activeTeamID}\r\n                            headerH1={this.state.headerH1}\r\n                        > \r\n                            <GetTeamStats\r\n                                url={this.state.teamStatsQueryRecipe}\r\n                                ApiLink=\"teamStatsQuery\"\r\n                            />\r\n                        </Header>\r\n                        \r\n                        <div className=\"wrapper wrapper__home\">\r\n                            <h2 className=\"page__title page__title_schedule\">Choose a Game</h2>\r\n                            <br/>   \r\n                            <ApiCall\r\n                                url={this.state.scheduleQueryRecipe}\r\n                                ApiLink=\"gameScheduleQuery\"\r\n                                activeTeamID={this.state.activeTeamID}\r\n                            />\r\n\r\n                            <div className=\"fab-container\">\r\n                                <Fab visible={this.state.isFabActive} \r\n                                    onClick={this.scrollToNextGame}\r\n                                    fabText=\"Next Game\"\r\n                                    fabClass={`fab next-game-fab team${this.state.activeTeamID}`}\r\n                                    />\r\n\r\n                                <Fab visible={this.state.isFabActive}\r\n                                    onClick={this.resetAPICall}\r\n                                    fabClass={`fab team${this.state.activeTeamID}`}\r\n                                    fabText=\"Back\"\r\n                                />\r\n                            </div>\r\n        \r\n                        </div>\r\n                    </div>\r\n        \r\n                )\r\n        }\r\n\r\n        if(this.state.isTeamListActive){\r\n\r\n            return (\r\n                <div>\r\n                    <Header\r\n                        headerH1 = {this.state.headerH1}\r\n                        headerH2 = {this.state.headerH2}\r\n                    />\r\n                    <div className=\"wrapper wrapper__home\">\r\n                        <TeamList\r\n                            handleClick = {this.handleClick}\r\n                            teamValue = {this.currentTeam}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Schedule;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"../node_modules/react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport Schedule from './Pages/Schedule';\r\n\r\nconst App = () => {\r\n  const baseUrl = process.env.PUBLIC_URL;\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <Route path={baseUrl + \"/\"} component={Schedule} />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}